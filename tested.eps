%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: tested.pdf
%%Creator: Adobe Acrobat 11.0.15
%%For: dtshayma
%%CreationDate: 12/05/2016, 9:10:40 a.m.
%%BoundingBox: 0 0 576 432
%%HiResBoundingBox: 0 0 576 432
%%CropBox: 0 0 576 432
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$None SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 692 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.4-c005 78.147326, 2012/08/23-13:03:03        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
   xmp:CreateDate="2016-05-12T09:09:10"
   xmp:CreatorTool="R"
   xmp:ModifyDate="2016-05-12T09:09:10"
   pdf:Producer="R 3.2.3"
   dc:format="application/pdf">
   <dc:title>
    <rdf:Alt>
     <rdf:li xml:lang="x-default">R Graphics Output</rdf:li>
    </rdf:Alt>
   </dc:title>
  </rdf:Description>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/capture_mysetup gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
Adobe_AGM_Core/ps gx
gsave
/0 
[/DeviceCMYK] /CSA add_res
grestore
Adobe_AGM_Core/pt gx
%%EndPageSetup
1 -1 scale 0 -432 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 432 li
576 432 li
576 0 li
cp
clp
gsave
59.04 358.56 mo
545.76 358.56 li
545.76 59.04 li
59.04 59.04 li
cp
clp
-1384.71 1133.24 mo
1943.29 1133.24 li
1943.29 -472.01 li
-1384.71 -472.01 li
cp
false sop
.302739 .0310369 .066041 0 cmyk
f
.75 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
-1384.71 1133.24 mo
1943.29 1133.24 li
1943.29 -472.01 li
-1384.71 -472.01 li
cp
@
390.22 84.26 mo
358.54 101.88 li
331.77 120.04 li
318.74 124.16 li
308.48 125.07 li
308.38 119.19 li
304.1 117.68 li
298.34 115.04 li
296.14 110.71 li
264.96 90.54 li
233.78 70.37 li
199.01 47.99 li
199.18 46.2 li
199.18 45.58 li
199.1 34.62 li
214.03 27.8 li
223.26 26.39 li
230.83 23.91 li
234.36 19.28 li
245.17 15.62 li
245.57 8.78 li
250.92 7.97 li
255.1 4.54999 li
267.2 2.98999 li
268.61 0 li
357.28 0 li
357.3 .73999 li
363 4.47 li
366.95 21.07 li
369.94 29.23 li
370.44 33.53 li
368.81 41.07 li
369.48 45.28 li
368.3 50.34 li
369.11 56.15 li
365.44 60.02 li
370.91 66.75 li
371.26 70.72 li
374.54 75.87 li
378.86 74.18 li
386.16 78.47 li
390.22 84.26 li
cp
.034699 .113497 .323033 0 cmyk
f
.38 lw
390.22 84.26 mo
358.54 101.88 li
331.77 120.04 li
318.74 124.16 li
308.48 125.07 li
308.38 119.19 li
304.1 117.68 li
298.34 115.04 li
296.14 110.71 li
264.96 90.54 li
233.78 70.37 li
199.01 47.99 li
199.18 46.2 li
199.18 45.58 li
199.1 34.62 li
214.03 27.8 li
223.26 26.39 li
230.83 23.91 li
234.36 19.28 li
245.17 15.62 li
245.57 8.78 li
250.92 7.97 li
255.1 4.54999 li
267.2 2.98999 li
268.61 0 li
357.28 0 li
357.3 .73999 li
363 4.47 li
366.95 21.07 li
369.94 29.23 li
370.44 33.53 li
368.81 41.07 li
369.48 45.28 li
368.3 50.34 li
369.11 56.15 li
365.44 60.02 li
370.91 66.75 li
371.26 70.72 li
374.54 75.87 li
378.86 74.18 li
386.16 78.47 li
390.22 84.26 li
cp
.256718 .20264 .207919 0 cmyk
@
564.33 268.8 mo
563.77 279.61 li
567.48 280.87 li
564.5 284.15 li
560.95 286.6 li
557.42 291.42 li
555.47 295.72 li
554.95 303.14 li
552.81 306.67 li
552.73 313.64 li
550.08 316.22 li
549.73 321.72 li
548.46 322.43 li
547.61 327.49 li
549.93 331.69 li
550.52 342.84 li
552.18 351.35 li
551.26 356.16 li
553.11 361.52 li
558.47 366.69 li
563.46 378.34 li
559.82 377.4 li
547.4 378.96 li
544.93 380.07 li
542.29 385.97 li
544.36 390.05 li
542.72 400.99 li
541.57 410.27 li
544.07 411.91 li
550.54 415.51 li
553.07 413.83 li
553.85 423.8 li
546.77 423.72 li
542.97 418.64 li
539.57 414.7 li
532.48 413.4 li
530.41 408.56 li
524.76 411.48 li
517.35 410.19 li
514.27 405.99 li
508.4 405.14 li
504.06 405.36 li
503.53 402.49 li
500.34 402.26 li
496.13 401.71 li
490.41 403.1 li
486.39 402.87 li
484.1 403.72 li
484.6 392.72 li
481.51 389.29 li
480.83 383.6 li
482.2 378.03 li
480.32 374.46 li
480.15 368.64 li
468.94 368.73 li
469.74 365.39 li
465.02 365.43 li
464.53 367.03 li
458.79 367.39 li
456.47 372.78 li
455.09 375.09 li
449.98 373.79 li
446.93 375.09 li
440.82 375.83 li
437.28 371 li
435.15 368.01 li
432.5 362.47 li
430.22 355.58 li
402.94 355.46 li
399.7 356.57 li
397.02 356.39 li
393.2 357.64 li
391.91 354.77 li
394.26 353.79 li
394.55 349.76 li
396.06 347.39 li
399.43 345.44 li
401.85 346.38 li
405.02 342.85 li
410.05 342.94 li
410.64 345.55 li
414.1 347.19 li
419.54 341.4 li
424.92 336.88 li
427.26 333.92 li
426.95 326.32 li
430.96 317.34 li
435.2 312.58 li
441.29 308.12 li
442.35 305.17 li
442.58 301.78 li
444.09 298.57 li
443.6 293.33 li
444.75 285.14 li
446.56 279.37 li
449.33 274.43 li
449.88 268.85 li
450.71 262.4 li
454.31 257.71 li
459.26 254.73 li
466.86 257.87 li
472.75 261.28 li
479.52 262.19 li
486.41 264 li
489.18 258.41 li
490.45 257.7 li
494.66 258.63 li
504.95 254.02 li
508.6 255.97 li
511.59 255.69 li
512.98 253.45 li
516.41 252.65 li
523.37 253.63 li
529.3 253.84 li
532.35 252.86 li
537.95 260.49 li
542.1 261.61 li
544.57 260.06 li
548.85 260.67 li
554 258.71 li
556.19 262.66 li
564.33 268.8 li
cp
.034699 .113497 .323033 0 cmyk
f
564.33 268.8 mo
563.77 279.61 li
567.48 280.87 li
564.5 284.15 li
560.95 286.6 li
557.42 291.42 li
555.47 295.72 li
554.95 303.14 li
552.81 306.67 li
552.73 313.64 li
550.08 316.22 li
549.73 321.72 li
548.46 322.43 li
547.61 327.49 li
549.93 331.69 li
550.52 342.84 li
552.18 351.35 li
551.26 356.16 li
553.11 361.52 li
558.47 366.69 li
563.46 378.34 li
559.82 377.4 li
547.4 378.96 li
544.93 380.07 li
542.29 385.97 li
544.36 390.05 li
542.72 400.99 li
541.57 410.27 li
544.07 411.91 li
550.54 415.51 li
553.07 413.83 li
553.85 423.8 li
546.77 423.72 li
542.97 418.64 li
539.57 414.7 li
532.48 413.4 li
530.41 408.56 li
524.76 411.48 li
517.35 410.19 li
514.27 405.99 li
508.4 405.14 li
504.06 405.36 li
503.53 402.49 li
500.34 402.26 li
496.13 401.71 li
490.41 403.1 li
486.39 402.87 li
484.1 403.72 li
484.6 392.72 li
481.51 389.29 li
480.83 383.6 li
482.2 378.03 li
480.32 374.46 li
480.15 368.64 li
468.94 368.73 li
469.74 365.39 li
465.02 365.43 li
464.53 367.03 li
458.79 367.39 li
456.47 372.78 li
455.09 375.09 li
449.98 373.79 li
446.93 375.09 li
440.82 375.83 li
437.28 371 li
435.15 368.01 li
432.5 362.47 li
430.22 355.58 li
402.94 355.46 li
399.7 356.57 li
397.02 356.39 li
393.2 357.64 li
391.91 354.77 li
394.26 353.79 li
394.55 349.76 li
396.06 347.39 li
399.43 345.44 li
401.85 346.38 li
405.02 342.85 li
410.05 342.94 li
410.64 345.55 li
414.1 347.19 li
419.54 341.4 li
424.92 336.88 li
427.26 333.92 li
426.95 326.32 li
430.96 317.34 li
435.2 312.58 li
441.29 308.12 li
442.35 305.17 li
442.58 301.78 li
444.09 298.57 li
443.6 293.33 li
444.75 285.14 li
446.56 279.37 li
449.33 274.43 li
449.88 268.85 li
450.71 262.4 li
454.31 257.71 li
459.26 254.73 li
466.86 257.87 li
472.75 261.28 li
479.52 262.19 li
486.41 264 li
489.18 258.41 li
490.45 257.7 li
494.66 258.63 li
504.95 254.02 li
508.6 255.97 li
511.59 255.69 li
512.98 253.45 li
516.41 252.65 li
523.37 253.63 li
529.3 253.84 li
532.35 252.86 li
537.95 260.49 li
542.1 261.61 li
544.57 260.06 li
548.85 260.67 li
554 258.71 li
556.19 262.66 li
564.33 268.8 li
cp
.256718 .20264 .207919 0 cmyk
@
576 190.54 mo
575.79 190.56 li
576 190.81 li
576 201.62 li
573.73 203.89 li
569.13 210.55 li
564.37 211.51 li
556.59 206.11 li
553.1 208.01 li
552.15 210.71 li
547.39 212.46 li
547.07 214.36 li
537.86 214.36 li
536.59 212.46 li
529.93 212.14 li
526.6 213.73 li
524.06 212.93 li
519.3 207.54 li
517.71 205 li
511.04 206.27 li
508.5 210.55 li
506.12 218.81 li
502.95 220.55 li
500.11 221.56 li
499.36 221.13 li
496.15 218.47 li
495.56 215.59 li
497.06 211.75 li
497.04 207.97 li
491.7 202.2 li
490.66 198.24 li
490.77 196 li
487.37 193.28 li
487.27 187.91 li
485.33 184.34 li
482.08 184.87 li
483.01 181.48 li
485.41 177.62 li
484.36 173.8 li
487.4 170.96 li
485.47 168.8 li
487.92 163.09 li
492.14 156.28 li
500.11 156.93 li
499.65 120.23 li
499.77 116.36 li
510.4 116.33 li
510.4 97.87 li
547.56 97.87 li
576 97.87 li
cp
.034699 .113497 .323033 0 cmyk
f
576 190.54 mo
575.79 190.56 li
576 190.81 li
576 201.62 li
573.73 203.89 li
569.13 210.55 li
564.37 211.51 li
556.59 206.11 li
553.1 208.01 li
552.15 210.71 li
547.39 212.46 li
547.07 214.36 li
537.86 214.36 li
536.59 212.46 li
529.93 212.14 li
526.6 213.73 li
524.06 212.93 li
519.3 207.54 li
517.71 205 li
511.04 206.27 li
508.5 210.55 li
506.12 218.81 li
502.95 220.55 li
500.11 221.56 li
499.36 221.13 li
496.15 218.47 li
495.56 215.59 li
497.06 211.75 li
497.04 207.97 li
491.7 202.2 li
490.66 198.24 li
490.77 196 li
487.37 193.28 li
487.27 187.91 li
485.33 184.34 li
482.08 184.87 li
483.01 181.48 li
485.41 177.62 li
484.36 173.8 li
487.4 170.96 li
485.47 168.8 li
487.92 163.09 li
492.14 156.28 li
500.11 156.93 li
499.65 120.23 li
499.77 116.36 li
510.4 116.33 li
510.4 97.87 li
547.56 97.87 li
576 97.87 li
cp
.256718 .20264 .207919 0 cmyk
@
416.58 89.89 mo
410.04 93.32 li
404.84 88.25 li
390.22 84.26 li
386.16 78.47 li
378.86 74.18 li
374.54 75.87 li
371.26 70.72 li
370.91 66.75 li
365.44 60.02 li
369.11 56.15 li
368.3 50.34 li
369.48 45.28 li
368.81 41.07 li
370.44 33.53 li
369.94 29.23 li
366.95 21.07 li
371.46 18.93 li
372.26 15.02 li
371.27 11.19 li
377.62 7.63 li
380.47 4.67001 li
384.97 2.01001 li
385.12 0 li
411.4 0 li
420.23 2.97 li
424.56 11.19 li
432.85 12.98 li
445.88 16.85 li
455.73 21.45 li
460.24 19.05 li
464.67 14.8 li
462.52 7.72 li
465.42 3.22 li
470.37 0 li
491.31 0 li
494.1 3.64999 li
497.54 3.69 li
500.49 5.26999 li
509.67 6.35001 li
511.92 9.41 li
508.58 13.84 li
510.01 17.79 li
507.63 23.5 li
510.4 30.95 li
510.4 63.82 li
510.4 97.87 li
510.4 116.33 li
499.77 116.36 li
499.65 120.23 li
462.78 102.53 li
425.91 84.83 li
416.58 89.89 li
cp
.034699 .113497 .323033 0 cmyk
f
416.58 89.89 mo
410.04 93.32 li
404.84 88.25 li
390.22 84.26 li
386.16 78.47 li
378.86 74.18 li
374.54 75.87 li
371.26 70.72 li
370.91 66.75 li
365.44 60.02 li
369.11 56.15 li
368.3 50.34 li
369.48 45.28 li
368.81 41.07 li
370.44 33.53 li
369.94 29.23 li
366.95 21.07 li
371.46 18.93 li
372.26 15.02 li
371.27 11.19 li
377.62 7.63 li
380.47 4.67001 li
384.97 2.01001 li
385.12 0 li
411.4 0 li
420.23 2.97 li
424.56 11.19 li
432.85 12.98 li
445.88 16.85 li
455.73 21.45 li
460.24 19.05 li
464.67 14.8 li
462.52 7.72 li
465.42 3.22 li
470.37 0 li
491.31 0 li
494.1 3.64999 li
497.54 3.69 li
500.49 5.26999 li
509.67 6.35001 li
511.92 9.41 li
508.58 13.84 li
510.01 17.79 li
507.63 23.5 li
510.4 30.95 li
510.4 63.82 li
510.4 97.87 li
510.4 116.33 li
499.77 116.36 li
499.65 120.23 li
462.78 102.53 li
425.91 84.83 li
416.58 89.89 li
cp
.256718 .20264 .207919 0 cmyk
@
413.29 182.37 mo
414.22 178.01 li
408.29 177.8 li
408.31 171.85 li
404.46 168.43 li
408.45 156.25 li
420.25 147.53 li
420.73 135.51 li
424.29 116.75 li
426.31 112.77 li
422.46 109.6 li
422.31 106.66 li
418.85 104.26 li
416.58 89.89 li
425.91 84.83 li
462.78 102.53 li
499.65 120.23 li
500.11 156.93 li
492.14 156.28 li
487.92 163.09 li
485.47 168.8 li
487.4 170.96 li
484.36 173.8 li
485.41 177.62 li
483.01 181.48 li
482.08 184.87 li
485.33 184.34 li
487.27 187.91 li
487.37 193.28 li
490.77 196 li
490.66 198.24 li
484.8 199.82 li
480.11 203.56 li
473.43 213.64 li
464.73 217.93 li
455.8 217.35 li
453.2 218.2 li
454.11 221.46 li
449.29 224.69 li
445.36 228.3 li
433.73 231.83 li
431.42 229.74 li
429.89 229.56 li
428.18 231.94 li
420.54 232.63 li
421.99 230.13 li
419.07 223.76 li
417.77 219.93 li
413.74 218.36 li
408.29 212.96 li
410.3 208.6 li
414.51 209.53 li
417.12 208.87 li
422.28 208.96 li
417.25 200.56 li
417.59 194.42 li
416.97 188.29 li
413.29 182.37 li
cp
.00137331 .266606 1 0 cmyk
f
413.29 182.37 mo
414.22 178.01 li
408.29 177.8 li
408.31 171.85 li
404.46 168.43 li
408.45 156.25 li
420.25 147.53 li
420.73 135.51 li
424.29 116.75 li
426.31 112.77 li
422.46 109.6 li
422.31 106.66 li
418.85 104.26 li
416.58 89.89 li
425.91 84.83 li
462.78 102.53 li
499.65 120.23 li
500.11 156.93 li
492.14 156.28 li
487.92 163.09 li
485.47 168.8 li
487.4 170.96 li
484.36 173.8 li
485.41 177.62 li
483.01 181.48 li
482.08 184.87 li
485.33 184.34 li
487.27 187.91 li
487.37 193.28 li
490.77 196 li
490.66 198.24 li
484.8 199.82 li
480.11 203.56 li
473.43 213.64 li
464.73 217.93 li
455.8 217.35 li
453.2 218.2 li
454.11 221.46 li
449.29 224.69 li
445.36 228.3 li
433.73 231.83 li
431.42 229.74 li
429.89 229.56 li
428.18 231.94 li
420.54 232.63 li
421.99 230.13 li
419.07 223.76 li
417.77 219.93 li
413.74 218.36 li
408.29 212.96 li
410.3 208.6 li
414.51 209.53 li
417.12 208.87 li
422.28 208.96 li
417.25 200.56 li
417.59 194.42 li
416.97 188.29 li
413.29 182.37 li
cp
.256718 .20264 .207919 0 cmyk
@
166.78 166.12 mo
169.89 164.44 li
171.44 158.99 li
174.37 158.78 li
180.83 161.35 li
186.04 159.52 li
189.62 160.14 li
191 158.08 li
228.1 157.94 li
230.15 151.47 li
228.55 150.33 li
224.09 110.43 li
219.63 70.53 li
233.78 70.37 li
264.96 90.54 li
296.14 110.71 li
298.34 115.04 li
304.1 117.68 li
308.38 119.19 li
308.48 125.07 li
318.74 124.16 li
318.76 145.45 li
313.71 151.63 li
312.92 157.33 li
304.71 158.79 li
292.1 159.59 li
288.68 162.87 li
282.75 163.23 li
276.83 163.28 li
274.52 161.5 li
269.43 162.82 li
260.79 166.65 li
259.03 169.54 li
251.85 173.69 li
250.6 176.06 li
246.72 177.95 li
242.25 176.7 li
239.72 178.95 li
238.36 185.29 li
231.02 192.96 li
231.24 196.09 li
228.72 200.01 li
229.33 205.37 li
225.51 206.74 li
223.36 207.91 li
221.93 203.96 li
219.26 205 li
217.66 204.82 li
215.96 207.52 li
208.82 207.44 li
206.26 206.05 li
205.06 206.89 li
202.23 204.23 li
202.72 201.47 li
201.57 200.39 li
199.6 201.3 li
199.96 198.3 li
201.85 195.92 li
198.07 192.04 li
196.96 189.49 li
194.91 187.46 li
193.06 187.22 li
190.84 188.52 li
187.85 189.75 li
185.32 191.75 li
181.36 191.01 li
178.79 188.67 li
177.26 188.36 li
174.85 189.59 li
173.38 189.6 li
172.85 186.22 li
173.27 183.34 li
172.48 179.76 li
169.02 177.16 li
167.2 171.87 li
166.78 166.12 li
cp
.0116884 0 .19266 0 cmyk
f
166.78 166.12 mo
169.89 164.44 li
171.44 158.99 li
174.37 158.78 li
180.83 161.35 li
186.04 159.52 li
189.62 160.14 li
191 158.08 li
228.1 157.94 li
230.15 151.47 li
228.55 150.33 li
224.09 110.43 li
219.63 70.53 li
233.78 70.37 li
264.96 90.54 li
296.14 110.71 li
298.34 115.04 li
304.1 117.68 li
308.38 119.19 li
308.48 125.07 li
318.74 124.16 li
318.76 145.45 li
313.71 151.63 li
312.92 157.33 li
304.71 158.79 li
292.1 159.59 li
288.68 162.87 li
282.75 163.23 li
276.83 163.28 li
274.52 161.5 li
269.43 162.82 li
260.79 166.65 li
259.03 169.54 li
251.85 173.69 li
250.6 176.06 li
246.72 177.95 li
242.25 176.7 li
239.72 178.95 li
238.36 185.29 li
231.02 192.96 li
231.24 196.09 li
228.72 200.01 li
229.33 205.37 li
225.51 206.74 li
223.36 207.91 li
221.93 203.96 li
219.26 205 li
217.66 204.82 li
215.96 207.52 li
208.82 207.44 li
206.26 206.05 li
205.06 206.89 li
202.23 204.23 li
202.72 201.47 li
201.57 200.39 li
199.6 201.3 li
199.96 198.3 li
201.85 195.92 li
198.07 192.04 li
196.96 189.49 li
194.91 187.46 li
193.06 187.22 li
190.84 188.52 li
187.85 189.75 li
185.32 191.75 li
181.36 191.01 li
178.79 188.67 li
177.26 188.36 li
174.85 189.59 li
173.38 189.6 li
172.85 186.22 li
173.27 183.34 li
172.48 179.76 li
169.02 177.16 li
167.2 171.87 li
166.78 166.12 li
cp
.256718 .20264 .207919 0 cmyk
@
430.22 355.58 mo
432.5 362.47 li
435.15 368.01 li
437.28 371 li
440.82 375.83 li
446.93 375.09 li
449.98 373.79 li
455.09 375.09 li
456.47 372.78 li
458.79 367.39 li
464.53 367.03 li
465.02 365.43 li
469.74 365.39 li
468.94 368.73 li
480.15 368.64 li
480.32 374.46 li
482.2 378.03 li
480.83 383.6 li
481.51 389.29 li
484.6 392.72 li
484.1 403.72 li
486.39 402.87 li
490.41 403.1 li
496.13 401.71 li
500.34 402.26 li
501.32 405.13 li
500.27 409.61 li
501.89 413.95 li
500.52 417.41 li
501.3 420.6 li
482.06 420.48 li
481.89 432 li
392.86 432 li
394.85 426.49 li
397.05 422.7 li
402.36 416.65 li
405.33 412.54 li
406.3 405.69 li
405.81 400.45 li
403.05 397.14 li
400.59 391.53 li
398.31 385.99 li
398.81 384.07 li
401.65 380.4 li
398.85 371.47 li
396.95 365.28 li
392.32 359.43 li
393.2 357.64 li
397.02 356.39 li
399.7 356.57 li
402.94 355.46 li
430.22 355.58 li
cp
.034699 .113497 .323033 0 cmyk
f
430.22 355.58 mo
432.5 362.47 li
435.15 368.01 li
437.28 371 li
440.82 375.83 li
446.93 375.09 li
449.98 373.79 li
455.09 375.09 li
456.47 372.78 li
458.79 367.39 li
464.53 367.03 li
465.02 365.43 li
469.74 365.39 li
468.94 368.73 li
480.15 368.64 li
480.32 374.46 li
482.2 378.03 li
480.83 383.6 li
481.51 389.29 li
484.6 392.72 li
484.1 403.72 li
486.39 402.87 li
490.41 403.1 li
496.13 401.71 li
500.34 402.26 li
501.32 405.13 li
500.27 409.61 li
501.89 413.95 li
500.52 417.41 li
501.3 420.6 li
482.06 420.48 li
481.89 432 li
392.86 432 li
394.85 426.49 li
397.05 422.7 li
402.36 416.65 li
405.33 412.54 li
406.3 405.69 li
405.81 400.45 li
403.05 397.14 li
400.59 391.53 li
398.31 385.99 li
398.81 384.07 li
401.65 380.4 li
398.85 371.47 li
396.95 365.28 li
392.32 359.43 li
393.2 357.64 li
397.02 356.39 li
399.7 356.57 li
402.94 355.46 li
430.22 355.58 li
cp
.256718 .20264 .207919 0 cmyk
@
394.26 353.79 mo
391.91 354.77 li
389.44 347.82 li
393.17 343.83 li
395.96 342.27 li
399.43 345.44 li
396.06 347.39 li
394.55 349.76 li
394.26 353.79 li
cp
.034699 .113497 .323033 0 cmyk
f
394.26 353.79 mo
391.91 354.77 li
389.44 347.82 li
393.17 343.83 li
395.96 342.27 li
399.43 345.44 li
396.06 347.39 li
394.55 349.76 li
394.26 353.79 li
cp
.256718 .20264 .207919 0 cmyk
@
299.21 190.86 mo
299.42 184.53 li
288.76 182.44 li
288.47 177.96 li
283.26 171.93 li
282.02 167.72 li
282.75 163.23 li
288.68 162.87 li
292.1 159.59 li
304.71 158.79 li
312.92 157.33 li
313.71 151.63 li
318.76 145.45 li
318.74 124.16 li
331.77 120.04 li
358.54 101.88 li
390.22 84.26 li
404.84 88.25 li
410.04 93.32 li
416.58 89.89 li
418.85 104.26 li
422.31 106.66 li
422.46 109.6 li
426.31 112.77 li
424.29 116.75 li
420.73 135.51 li
420.25 147.53 li
408.45 156.25 li
404.46 168.43 li
408.31 171.85 li
408.29 177.8 li
414.22 178.01 li
413.29 182.37 li
410.69 182.9 li
410.39 185.84 li
408.67 186.04 li
402.41 175.92 li
400.24 175.56 li
393.01 180.72 li
385.86 178.03 li
380.88 177.49 li
378.21 178.78 li
372.79 178.5 li
367.34 182.44 li
362.63 182.67 li
351.44 177.89 li
347.06 180.16 li
342.34 180 li
338.87 176.51 li
329.61 173.06 li
319.67 174.16 li
317.26 176.16 li
315.96 181.47 li
313.31 185.2 li
312.67 193.45 li
305.62 188.13 li
302.31 188.16 li
299.21 190.86 li
cp
.0116884 0 .19266 0 cmyk
f
299.21 190.86 mo
299.42 184.53 li
288.76 182.44 li
288.47 177.96 li
283.26 171.93 li
282.02 167.72 li
282.75 163.23 li
288.68 162.87 li
292.1 159.59 li
304.71 158.79 li
312.92 157.33 li
313.71 151.63 li
318.76 145.45 li
318.74 124.16 li
331.77 120.04 li
358.54 101.88 li
390.22 84.26 li
404.84 88.25 li
410.04 93.32 li
416.58 89.89 li
418.85 104.26 li
422.31 106.66 li
422.46 109.6 li
426.31 112.77 li
424.29 116.75 li
420.73 135.51 li
420.25 147.53 li
408.45 156.25 li
404.46 168.43 li
408.31 171.85 li
408.29 177.8 li
414.22 178.01 li
413.29 182.37 li
410.69 182.9 li
410.39 185.84 li
408.67 186.04 li
402.41 175.92 li
400.24 175.56 li
393.01 180.72 li
385.86 178.03 li
380.88 177.49 li
378.21 178.78 li
372.79 178.5 li
367.34 182.44 li
362.63 182.67 li
351.44 177.89 li
347.06 180.16 li
342.34 180 li
338.87 176.51 li
329.61 173.06 li
319.67 174.16 li
317.26 176.16 li
315.96 181.47 li
313.31 185.2 li
312.67 193.45 li
305.62 188.13 li
302.31 188.16 li
299.21 190.86 li
cp
.256718 .20264 .207919 0 cmyk
@
166.78 166.12 mo
160.68 159.77 li
155.08 152.97 li
148.95 150.52 li
144.53 147.8 li
139.37 147.9 li
134.86 149.92 li
130.26 149.12 li
127.1 152.08 li
126.3 147.1 li
128.88 142.55 li
130.02 133.84 li
129 124.71 li
127.89 120.11 li
128.81 115.5 li
126.42 111.11 li
121.55 107.11 li
123.56 104.03 li
159.77 104.09 li
158.01 90.74 li
160.27 85.99 li
168.94 85.16 li
168.64 61.51 li
198.98 61.99 li
199.01 47.99 li
233.78 70.37 li
219.63 70.53 li
224.09 110.43 li
228.55 150.33 li
230.15 151.47 li
228.1 157.94 li
191 158.08 li
189.62 160.14 li
186.04 159.52 li
180.83 161.35 li
174.37 158.78 li
171.44 158.99 li
169.89 164.44 li
166.78 166.12 li
cp
.034699 .113497 .323033 0 cmyk
f
166.78 166.12 mo
160.68 159.77 li
155.08 152.97 li
148.95 150.52 li
144.53 147.8 li
139.37 147.9 li
134.86 149.92 li
130.26 149.12 li
127.1 152.08 li
126.3 147.1 li
128.88 142.55 li
130.02 133.84 li
129 124.71 li
127.89 120.11 li
128.81 115.5 li
126.42 111.11 li
121.55 107.11 li
123.56 104.03 li
159.77 104.09 li
158.01 90.74 li
160.27 85.99 li
168.94 85.16 li
168.64 61.51 li
198.98 61.99 li
199.01 47.99 li
233.78 70.37 li
219.63 70.53 li
224.09 110.43 li
228.55 150.33 li
230.15 151.47 li
228.1 157.94 li
191 158.08 li
189.62 160.14 li
186.04 159.52 li
180.83 161.35 li
174.37 158.78 li
171.44 158.99 li
169.89 164.44 li
166.78 166.12 li
cp
.256718 .20264 .207919 0 cmyk
@
576 97.87 mo
547.56 97.87 li
510.4 97.87 li
510.4 63.82 li
510.4 30.95 li
507.63 23.5 li
510.01 17.79 li
508.58 13.84 li
511.92 9.41 li
524.22 9.25 li
533.12 11.7 li
542.3 14.43 li
546.58 15.87 li
553.7 12.94 li
557.5 10.29 li
565.65 9.53 li
572.23 10.7 li
574.75 15.28 li
576 13.51 li
cp
.034699 .113497 .323033 0 cmyk
f
576 97.87 mo
547.56 97.87 li
510.4 97.87 li
510.4 63.82 li
510.4 30.95 li
507.63 23.5 li
510.01 17.79 li
508.58 13.84 li
511.92 9.41 li
524.22 9.25 li
533.12 11.7 li
542.3 14.43 li
546.58 15.87 li
553.7 12.94 li
557.5 10.29 li
565.65 9.53 li
572.23 10.7 li
574.75 15.28 li
576 13.51 li
cp
.256718 .20264 .207919 0 cmyk
@
576 383.57 mo
571.01 382.24 li
567.32 380.7 li
563.46 378.34 li
558.47 366.7 li
553.11 361.52 li
551.26 356.16 li
552.18 351.35 li
550.52 342.84 li
554.34 342.4 li
557.7 339.06 li
561.3 334.23 li
563.58 332.3 li
563.49 329.29 li
561.5 327.2 li
560.96 323.56 li
563.63 322.39 li
564.17 316.95 li
560.5 311.73 li
563.74 310.62 li
573.87 310.74 li
576 310.66 li
cp
.034699 .113497 .323033 0 cmyk
f
576 383.57 mo
571.01 382.24 li
567.32 380.7 li
563.46 378.34 li
558.47 366.7 li
553.11 361.52 li
551.26 356.16 li
552.18 351.35 li
550.52 342.84 li
554.34 342.4 li
557.7 339.06 li
561.3 334.23 li
563.58 332.3 li
563.49 329.29 li
561.5 327.2 li
560.96 323.56 li
563.63 322.39 li
564.17 316.95 li
560.5 311.73 li
563.74 310.62 li
573.87 310.74 li
576 310.66 li
cp
.256718 .20264 .207919 0 cmyk
@
357.87 257.13 mo
348.27 260.46 li
344.76 259.97 li
341.21 262.04 li
333.81 261.84 li
328.87 256.06 li
325.82 249.37 li
319.28 243.28 li
312.33 243.39 li
304.17 243.39 li
304.7 228.48 li
304.47 222.6 li
306.21 216.77 li
309.06 213.94 li
313.54 208.22 li
312.57 205.73 li
314.39 202.01 li
312.31 196.52 li
312.67 193.45 li
313.31 185.2 li
315.96 181.47 li
317.26 176.16 li
319.67 174.16 li
329.61 173.06 li
338.87 176.51 li
342.34 180 li
347.06 180.16 li
351.44 177.89 li
362.63 182.67 li
367.34 182.44 li
372.79 178.5 li
378.21 178.78 li
380.88 177.49 li
385.86 178.03 li
393.01 180.72 li
400.24 175.56 li
402.41 175.92 li
408.67 186.04 li
410.39 185.84 li
414.05 189.52 li
413.04 191.19 li
412.55 194.26 li
404.76 201.42 li
402.32 207.32 li
401.02 212.12 li
399.05 214.18 li
397.19 220.65 li
392.25 224.46 li
390.81 229.14 li
388.74 232.86 li
387.87 236.71 li
381.52 239.82 li
376.33 236.02 li
372.83 236.17 li
367.32 241.59 li
364.64 241.67 li
360.25 250.59 li
357.87 257.13 li
cp
0 .882567 1 0 cmyk
f
357.87 257.13 mo
348.27 260.46 li
344.76 259.97 li
341.21 262.04 li
333.81 261.84 li
328.87 256.06 li
325.82 249.37 li
319.28 243.28 li
312.33 243.39 li
304.17 243.39 li
304.7 228.48 li
304.47 222.6 li
306.21 216.77 li
309.06 213.94 li
313.54 208.22 li
312.57 205.73 li
314.39 202.01 li
312.31 196.52 li
312.67 193.45 li
313.31 185.2 li
315.96 181.47 li
317.26 176.16 li
319.67 174.16 li
329.61 173.06 li
338.87 176.51 li
342.34 180 li
347.06 180.16 li
351.44 177.89 li
362.63 182.67 li
367.34 182.44 li
372.79 178.5 li
378.21 178.78 li
380.88 177.49 li
385.86 178.03 li
393.01 180.72 li
400.24 175.56 li
402.41 175.92 li
408.67 186.04 li
410.39 185.84 li
414.05 189.52 li
413.04 191.19 li
412.55 194.26 li
404.76 201.42 li
402.32 207.32 li
401.02 212.12 li
399.05 214.18 li
397.19 220.65 li
392.25 224.46 li
390.81 229.14 li
388.74 232.86 li
387.87 236.71 li
381.52 239.82 li
376.33 236.02 li
372.83 236.17 li
367.32 241.59 li
364.64 241.67 li
360.25 250.59 li
357.87 257.13 li
cp
.256718 .20264 .207919 0 cmyk
@
481.89 432 mo
482.06 420.48 li
501.3 420.6 li
500.52 417.41 li
501.89 413.95 li
500.27 409.61 li
501.32 405.13 li
500.34 402.26 li
503.53 402.49 li
504.06 405.36 li
508.4 405.14 li
514.27 405.99 li
517.35 410.19 li
524.76 411.48 li
530.41 408.56 li
532.48 413.4 li
539.57 414.7 li
542.97 418.64 li
546.77 423.72 li
553.85 423.8 li
553.07 413.83 li
550.54 415.51 li
544.07 411.91 li
541.57 410.27 li
542.72 400.99 li
544.36 390.05 li
542.29 385.97 li
544.93 380.07 li
547.4 378.96 li
559.82 377.4 li
563.46 378.34 li
567.32 380.7 li
571.01 382.24 li
576 383.57 li
576 432 li
cp
.034699 .113497 .323033 0 cmyk
f
481.89 432 mo
482.06 420.48 li
501.3 420.6 li
500.52 417.41 li
501.89 413.95 li
500.27 409.61 li
501.32 405.13 li
500.34 402.26 li
503.53 402.49 li
504.06 405.36 li
508.4 405.14 li
514.27 405.99 li
517.35 410.19 li
524.76 411.48 li
530.41 408.56 li
532.48 413.4 li
539.57 414.7 li
542.97 418.64 li
546.77 423.72 li
553.85 423.8 li
553.07 413.83 li
550.54 415.51 li
544.07 411.91 li
541.57 410.27 li
542.72 400.99 li
544.36 390.05 li
542.29 385.97 li
544.93 380.07 li
547.4 378.96 li
559.82 377.4 li
563.46 378.34 li
567.32 380.7 li
571.01 382.24 li
576 383.57 li
576 432 li
cp
.256718 .20264 .207919 0 cmyk
@
268.61 0 mo
267.2 2.98999 li
255.1 4.54999 li
250.92 7.97 li
245.57 8.78 li
245.17 15.62 li
234.36 19.28 li
230.83 23.91 li
223.26 26.39 li
214.03 27.8 li
199.1 34.62 li
199.18 45.58 li
197.77 45.58 li
197.99 50.53 li
192.27 50.83 li
189.29 52.93 li
185.09 52.93 li
181.75 51.73 li
173.97 52.72 li
170.96 59.93 li
168.07 60.6 li
163.72 72.26 li
150.87 82.23 li
147.82 95 li
144.03 99.15 li
142.92 102.48 li
122.11 103.22 li
121.94 103.21 li
122.38 98.92 li
125.93 96.4 li
128.96 91.59 li
128.36 88.46 li
131.54 81.94 li
136.68 76.06 li
139.8 74.57 li
142.24 69.18 li
142.46 64.25 li
145.8 58.54 li
151.96 55.17 li
157.82 45.73 li
157.99 45.6 li
162.63 42.05 li
171.23 41.03 li
178.52 34.71 li
183.15 32.24 li
190.87 24.53 li
188.56 13.02 li
192.07 5.07001 li
193.31 .200012 li
193.5 0 li
cp
.034699 .113497 .323033 0 cmyk
f
268.61 0 mo
267.2 2.98999 li
255.1 4.54999 li
250.92 7.97 li
245.57 8.78 li
245.17 15.62 li
234.36 19.28 li
230.83 23.91 li
223.26 26.39 li
214.03 27.8 li
199.1 34.62 li
199.18 45.58 li
197.77 45.58 li
197.99 50.53 li
192.27 50.83 li
189.29 52.93 li
185.09 52.93 li
181.75 51.73 li
173.97 52.72 li
170.96 59.93 li
168.07 60.6 li
163.72 72.26 li
150.87 82.23 li
147.82 95 li
144.03 99.15 li
142.92 102.48 li
122.11 103.22 li
121.94 103.21 li
122.38 98.92 li
125.93 96.4 li
128.96 91.59 li
128.36 88.46 li
131.54 81.94 li
136.68 76.06 li
139.8 74.57 li
142.24 69.18 li
142.46 64.25 li
145.8 58.54 li
151.96 55.17 li
157.82 45.73 li
157.99 45.6 li
162.63 42.05 li
171.23 41.03 li
178.52 34.71 li
183.15 32.24 li
190.87 24.53 li
188.56 13.02 li
192.07 5.07001 li
193.31 .200012 li
193.5 0 li
cp
.256718 .20264 .207919 0 cmyk
@
576 267.77 mo
574.02 268.35 li
568.14 266.28 li
564.33 268.8 li
556.19 262.66 li
554 258.71 li
548.85 260.67 li
544.57 260.06 li
542.1 261.61 li
537.95 260.49 li
532.35 252.86 li
530.86 249.93 li
523.95 246.27 li
521.62 240.72 li
517.76 236.72 li
511.55 231.91 li
511.46 228.91 li
506.4 225.17 li
500.11 221.56 li
502.95 220.55 li
506.12 218.81 li
508.5 210.55 li
511.04 206.27 li
517.71 205 li
519.3 207.54 li
524.06 212.93 li
526.6 213.73 li
529.93 212.14 li
536.59 212.46 li
537.86 214.36 li
547.07 214.36 li
547.39 212.46 li
552.15 210.71 li
553.1 208.01 li
556.59 206.11 li
564.37 211.51 li
569.13 210.55 li
573.73 203.89 li
576 201.62 li
576 190.81 li
575.79 190.56 li
576 190.54 li
cp
.034699 .113497 .323033 0 cmyk
f
576 267.77 mo
574.02 268.35 li
568.14 266.28 li
564.33 268.8 li
556.19 262.66 li
554 258.71 li
548.85 260.67 li
544.57 260.06 li
542.1 261.61 li
537.95 260.49 li
532.35 252.86 li
530.86 249.93 li
523.95 246.27 li
521.62 240.72 li
517.76 236.72 li
511.55 231.91 li
511.46 228.91 li
506.4 225.17 li
500.11 221.56 li
502.95 220.55 li
506.12 218.81 li
508.5 210.55 li
511.04 206.27 li
517.71 205 li
519.3 207.54 li
524.06 212.93 li
526.6 213.73 li
529.93 212.14 li
536.59 212.46 li
537.86 214.36 li
547.07 214.36 li
547.39 212.46 li
552.15 210.71 li
553.1 208.01 li
556.59 206.11 li
564.37 211.51 li
569.13 210.55 li
573.73 203.89 li
576 201.62 li
576 190.81 li
575.79 190.56 li
576 190.54 li
cp
.256718 .20264 .207919 0 cmyk
@
420.54 232.63 mo
428.18 231.94 li
429.89 229.56 li
431.42 229.74 li
433.73 231.83 li
445.36 228.3 li
449.29 224.69 li
454.11 221.46 li
453.2 218.2 li
455.8 217.35 li
464.73 217.93 li
473.43 213.64 li
480.11 203.56 li
484.8 199.82 li
490.66 198.24 li
491.7 202.2 li
497.04 207.97 li
497.06 211.75 li
495.56 215.59 li
496.15 218.47 li
499.36 221.13 li
506.4 225.17 li
511.46 228.91 li
511.55 231.91 li
517.76 236.72 li
521.62 240.72 li
523.95 246.27 li
530.86 249.93 li
532.35 252.86 li
529.3 253.84 li
523.37 253.63 li
516.41 252.65 li
512.98 253.45 li
511.59 255.69 li
508.6 255.97 li
504.95 254.02 li
494.66 258.63 li
490.45 257.7 li
489.18 258.41 li
486.41 264 li
479.52 262.19 li
472.75 261.28 li
466.86 257.87 li
459.26 254.73 li
454.31 257.71 li
450.71 262.4 li
449.88 268.85 li
443.93 268.33 li
437.67 266.78 li
432.16 271.68 li
427.32 280.28 li
426.34 277.6 li
425.93 273.39 li
421.7 270.41 li
418.29 265.64 li
417.5 262.32 li
413.13 257.49 li
413.88 254.74 li
412.96 250.85 li
413.67 243.68 li
415.89 242 li
420.54 232.63 li
cp
.0183108 .0793774 .995117 0 cmyk
f
420.54 232.63 mo
428.18 231.94 li
429.89 229.56 li
431.42 229.74 li
433.73 231.83 li
445.36 228.3 li
449.29 224.69 li
454.11 221.46 li
453.2 218.2 li
455.8 217.35 li
464.73 217.93 li
473.43 213.64 li
480.11 203.56 li
484.8 199.82 li
490.66 198.24 li
491.7 202.2 li
497.04 207.97 li
497.06 211.75 li
495.56 215.59 li
496.15 218.47 li
499.36 221.13 li
506.4 225.17 li
511.46 228.91 li
511.55 231.91 li
517.76 236.72 li
521.62 240.72 li
523.95 246.27 li
530.86 249.93 li
532.35 252.86 li
529.3 253.84 li
523.37 253.63 li
516.41 252.65 li
512.98 253.45 li
511.59 255.69 li
508.6 255.97 li
504.95 254.02 li
494.66 258.63 li
490.45 257.7 li
489.18 258.41 li
486.41 264 li
479.52 262.19 li
472.75 261.28 li
466.86 257.87 li
459.26 254.73 li
454.31 257.71 li
450.71 262.4 li
449.88 268.85 li
443.93 268.33 li
437.67 266.78 li
432.16 271.68 li
427.32 280.28 li
426.34 277.6 li
425.93 273.39 li
421.7 270.41 li
418.29 265.64 li
417.5 262.32 li
413.13 257.49 li
413.88 254.74 li
412.96 250.85 li
413.67 243.68 li
415.89 242 li
420.54 232.63 li
cp
.256718 .20264 .207919 0 cmyk
@
400.17 280.29 mo
399.02 279.78 li
393.54 280.97 li
387.93 279.73 li
383.53 280.34 li
368.49 280.13 li
369.84 272.83 li
366.23 266.72 li
362.01 265.15 li
360.13 261.01 li
357.76 259.68 li
357.87 257.13 li
360.25 250.59 li
364.64 241.67 li
367.32 241.59 li
372.83 236.17 li
376.33 236.02 li
381.52 239.82 li
387.87 236.71 li
388.74 232.86 li
390.81 229.14 li
392.25 224.46 li
397.19 220.65 li
399.05 214.18 li
401.02 212.12 li
402.32 207.32 li
404.76 201.42 li
412.55 194.26 li
413.04 191.19 li
414.05 189.52 li
410.39 185.84 li
410.69 182.9 li
413.29 182.37 li
416.97 188.29 li
417.59 194.42 li
417.25 200.56 li
422.28 208.96 li
417.12 208.87 li
414.51 209.53 li
410.3 208.6 li
408.29 212.96 li
413.74 218.36 li
417.77 219.93 li
419.07 223.76 li
421.99 230.13 li
420.54 232.63 li
415.89 242 li
413.67 243.68 li
412.96 250.85 li
413.88 254.74 li
413.13 257.49 li
417.5 262.32 li
418.29 265.64 li
421.7 270.41 li
425.93 273.39 li
426.34 277.6 li
427.32 280.28 li
426.65 285.27 li
419.31 283.09 li
411.83 280.65 li
400.17 280.29 li
cp
0 .993988 1 0 cmyk
f
400.17 280.29 mo
399.02 279.78 li
393.54 280.97 li
387.93 279.73 li
383.53 280.34 li
368.49 280.13 li
369.84 272.83 li
366.23 266.72 li
362.01 265.15 li
360.13 261.01 li
357.76 259.68 li
357.87 257.13 li
360.25 250.59 li
364.64 241.67 li
367.32 241.59 li
372.83 236.17 li
376.33 236.02 li
381.52 239.82 li
387.87 236.71 li
388.74 232.86 li
390.81 229.14 li
392.25 224.46 li
397.19 220.65 li
399.05 214.18 li
401.02 212.12 li
402.32 207.32 li
404.76 201.42 li
412.55 194.26 li
413.04 191.19 li
414.05 189.52 li
410.39 185.84 li
410.69 182.9 li
413.29 182.37 li
416.97 188.29 li
417.59 194.42 li
417.25 200.56 li
422.28 208.96 li
417.12 208.87 li
414.51 209.53 li
410.3 208.6 li
408.29 212.96 li
413.74 218.36 li
417.77 219.93 li
419.07 223.76 li
421.99 230.13 li
420.54 232.63 li
415.89 242 li
413.67 243.68 li
412.96 250.85 li
413.88 254.74 li
413.13 257.49 li
417.5 262.32 li
418.29 265.64 li
421.7 270.41 li
425.93 273.39 li
426.34 277.6 li
427.32 280.28 li
426.65 285.27 li
419.31 283.09 li
411.83 280.65 li
400.17 280.29 li
cp
.256718 .20264 .207919 0 cmyk
@
399.43 345.44 mo
395.96 342.27 li
393.17 343.83 li
389.44 347.82 li
381.84 338.03 li
388.88 332.92 li
385.4 326.81 li
388.57 324.49 li
394.8 323.35 li
395.54 319.26 li
400.48 323.7 li
408.64 324.09 li
411.48 319.72 li
412.64 313.57 li
411.64 306.35 li
407.26 300.89 li
411.27 290.18 li
408.96 288.34 li
402.08 289.1 li
399.5 284.32 li
400.17 280.29 li
411.83 280.65 li
419.31 283.09 li
426.65 285.27 li
427.32 280.28 li
432.16 271.68 li
437.67 266.78 li
443.93 268.33 li
449.88 268.85 li
449.33 274.43 li
446.56 279.37 li
444.75 285.14 li
443.6 293.33 li
444.09 298.57 li
442.58 301.78 li
442.35 305.17 li
441.29 308.12 li
435.2 312.58 li
430.96 317.34 li
426.95 326.32 li
427.26 333.92 li
424.92 336.88 li
419.54 341.4 li
414.1 347.19 li
410.64 345.55 li
410.05 342.94 li
405.02 342.85 li
401.85 346.38 li
399.43 345.44 li
cp
.034699 .113497 .323033 0 cmyk
f
399.43 345.44 mo
395.96 342.27 li
393.17 343.83 li
389.44 347.82 li
381.84 338.03 li
388.88 332.92 li
385.4 326.81 li
388.57 324.49 li
394.8 323.35 li
395.54 319.26 li
400.48 323.7 li
408.64 324.09 li
411.48 319.72 li
412.64 313.57 li
411.64 306.35 li
407.26 300.89 li
411.27 290.18 li
408.96 288.34 li
402.08 289.1 li
399.5 284.32 li
400.17 280.29 li
411.83 280.65 li
419.31 283.09 li
426.65 285.27 li
427.32 280.28 li
432.16 271.68 li
437.67 266.78 li
443.93 268.33 li
449.88 268.85 li
449.33 274.43 li
446.56 279.37 li
444.75 285.14 li
443.6 293.33 li
444.09 298.57 li
442.58 301.78 li
442.35 305.17 li
441.29 308.12 li
435.2 312.58 li
430.96 317.34 li
426.95 326.32 li
427.26 333.92 li
424.92 336.88 li
419.54 341.4 li
414.1 347.19 li
410.64 345.55 li
410.05 342.94 li
405.02 342.85 li
401.85 346.38 li
399.43 345.44 li
cp
.256718 .20264 .207919 0 cmyk
@
252.89 255.07 mo
248.68 255.17 li
242.23 253.36 li
236.3 253.47 li
225.35 255.08 li
218.93 257.75 li
209.78 261.14 li
207.99 260.9 li
208.7 253.28 li
209.59 252.13 li
209.31 248.48 li
205.39 244.61 li
202.46 243.99 li
199.76 241.46 li
201.77 237.35 li
200.85 232.88 li
201.27 230.19 li
202.74 230.18 li
203.28 226.15 li
202.57 224.36 li
203.45 223.08 li
206.89 221.97 li
204.6 214.57 li
202.47 210.75 li
203.21 207.61 li
205.06 206.89 li
206.26 206.05 li
208.82 207.44 li
215.96 207.52 li
217.66 204.82 li
219.26 205 li
221.93 203.96 li
223.36 207.91 li
225.51 206.74 li
229.33 205.37 li
233.49 207.39 li
235.1 210.45 li
239.26 212.4 li
242.49 210.07 li
246.82 209.72 li
253.15 212.11 li
255.6 225.26 li
251.71 233.02 li
249.3 243.46 li
253.31 251.43 li
252.89 255.07 li
cp
0 .95758 1 0 cmyk
f
252.89 255.07 mo
248.68 255.17 li
242.23 253.36 li
236.3 253.47 li
225.35 255.08 li
218.93 257.75 li
209.78 261.14 li
207.99 260.9 li
208.7 253.28 li
209.59 252.13 li
209.31 248.48 li
205.39 244.61 li
202.46 243.99 li
199.76 241.46 li
201.77 237.35 li
200.85 232.88 li
201.27 230.19 li
202.74 230.18 li
203.28 226.15 li
202.57 224.36 li
203.45 223.08 li
206.89 221.97 li
204.6 214.57 li
202.47 210.75 li
203.21 207.61 li
205.06 206.89 li
206.26 206.05 li
208.82 207.44 li
215.96 207.52 li
217.66 204.82 li
219.26 205 li
221.93 203.96 li
223.36 207.91 li
225.51 206.74 li
229.33 205.37 li
233.49 207.39 li
235.1 210.45 li
239.26 212.4 li
242.49 210.07 li
246.82 209.72 li
253.15 212.11 li
255.6 225.26 li
251.71 233.02 li
249.3 243.46 li
253.31 251.43 li
252.89 255.07 li
cp
.256718 .20264 .207919 0 cmyk
@
253.15 212.11 mo
246.82 209.72 li
242.49 210.07 li
239.26 212.4 li
235.1 210.45 li
233.49 207.39 li
229.33 205.37 li
228.72 200.01 li
231.24 196.09 li
231.02 192.96 li
238.36 185.29 li
239.72 178.95 li
242.25 176.7 li
246.72 177.95 li
250.6 176.06 li
251.85 173.69 li
259.03 169.54 li
260.79 166.65 li
269.43 162.82 li
274.52 161.5 li
276.83 163.28 li
282.75 163.23 li
282.02 167.72 li
283.26 171.93 li
288.47 177.96 li
288.76 182.44 li
299.42 184.53 li
299.21 190.86 li
297.19 193.63 li
292.67 194.49 li
290.78 198.53 li
287.6 199.58 li
279.51 199.38 li
275.23 198.65 li
272.25 200.14 li
268.16 199.46 li
252.11 199.9 li
251.89 205.15 li
253.15 212.11 li
cp
0 .439063 1 0 cmyk
f
253.15 212.11 mo
246.82 209.72 li
242.49 210.07 li
239.26 212.4 li
235.1 210.45 li
233.49 207.39 li
229.33 205.37 li
228.72 200.01 li
231.24 196.09 li
231.02 192.96 li
238.36 185.29 li
239.72 178.95 li
242.25 176.7 li
246.72 177.95 li
250.6 176.06 li
251.85 173.69 li
259.03 169.54 li
260.79 166.65 li
269.43 162.82 li
274.52 161.5 li
276.83 163.28 li
282.75 163.23 li
282.02 167.72 li
283.26 171.93 li
288.47 177.96 li
288.76 182.44 li
299.42 184.53 li
299.21 190.86 li
297.19 193.63 li
292.67 194.49 li
290.78 198.53 li
287.6 199.58 li
279.51 199.38 li
275.23 198.65 li
272.25 200.14 li
268.16 199.46 li
252.11 199.9 li
251.89 205.15 li
253.15 212.11 li
cp
.256718 .20264 .207919 0 cmyk
@
381.84 338.03 mo
372.34 328.7 li
366.24 321.07 li
360.62 311.52 li
360.92 308.45 li
362.94 305.49 li
365.18 298.76 li
367.05 291.91 li
370.16 291.37 li
383.61 291.47 li
383.53 280.34 li
387.93 279.73 li
393.54 280.97 li
399.02 279.78 li
400.17 280.29 li
399.5 284.32 li
402.08 289.1 li
408.96 288.34 li
411.27 290.18 li
407.26 300.89 li
411.64 306.35 li
412.64 313.57 li
411.48 319.72 li
408.64 324.09 li
400.48 323.7 li
395.54 319.26 li
394.8 323.35 li
388.57 324.49 li
385.4 326.81 li
388.88 332.92 li
381.84 338.03 li
cp
.034699 .113497 .323033 0 cmyk
f
381.84 338.03 mo
372.34 328.7 li
366.24 321.07 li
360.62 311.52 li
360.92 308.45 li
362.94 305.49 li
365.18 298.76 li
367.05 291.91 li
370.16 291.37 li
383.61 291.47 li
383.53 280.34 li
387.93 279.73 li
393.54 280.97 li
399.02 279.78 li
400.17 280.29 li
399.5 284.32 li
402.08 289.1 li
408.96 288.34 li
411.27 290.18 li
407.26 300.89 li
411.64 306.35 li
412.64 313.57 li
411.48 319.72 li
408.64 324.09 li
400.48 323.7 li
395.54 319.26 li
394.8 323.35 li
388.57 324.49 li
385.4 326.81 li
388.88 332.92 li
381.84 338.03 li
cp
.256718 .20264 .207919 0 cmyk
@
573.87 310.74 mo
563.74 310.62 li
560.5 311.73 li
554.97 314.59 li
552.73 313.64 li
552.81 306.67 li
554.95 303.14 li
555.47 295.72 li
557.42 291.42 li
560.95 286.6 li
564.5 284.15 li
567.48 280.87 li
563.77 279.61 li
564.33 268.8 li
568.14 266.28 li
574.02 268.35 li
576 267.77 li
576 310.66 li
573.87 310.74 li
cp
.034699 .113497 .323033 0 cmyk
f
573.87 310.74 mo
563.74 310.62 li
560.5 311.73 li
554.97 314.59 li
552.73 313.64 li
552.81 306.67 li
554.95 303.14 li
555.47 295.72 li
557.42 291.42 li
560.95 286.6 li
564.5 284.15 li
567.48 280.87 li
563.77 279.61 li
564.33 268.8 li
568.14 266.28 li
574.02 268.35 li
576 267.77 li
576 310.66 li
573.87 310.74 li
cp
.256718 .20264 .207919 0 cmyk
@
289.09 246.44 mo
274.6 251.85 li
269.46 255.02 li
261.13 257.7 li
252.89 255.07 li
253.31 251.43 li
249.3 243.46 li
251.71 233.02 li
255.6 225.26 li
253.15 212.11 li
251.89 205.15 li
252.11 199.9 li
268.16 199.46 li
272.25 200.14 li
275.23 198.65 li
279.51 199.38 li
278.83 202.26 li
282.69 207.03 li
282.67 213.75 li
283.55 221.03 li
285.87 224.4 li
283.83 232.73 li
284.56 237.33 li
287.03 243.19 li
289.09 246.44 li
cp
.0116884 0 .19266 0 cmyk
f
289.09 246.44 mo
274.6 251.85 li
269.46 255.02 li
261.13 257.7 li
252.89 255.07 li
253.31 251.43 li
249.3 243.46 li
251.71 233.02 li
255.6 225.26 li
253.15 212.11 li
251.89 205.15 li
252.11 199.9 li
268.16 199.46 li
272.25 200.14 li
275.23 198.65 li
279.51 199.38 li
278.83 202.26 li
282.69 207.03 li
282.67 213.75 li
283.55 221.03 li
285.87 224.4 li
283.83 232.73 li
284.56 237.33 li
287.03 243.19 li
289.09 246.44 li
cp
.256718 .20264 .207919 0 cmyk
@
201.27 230.19 mo
198.66 229.95 li
196.77 233.68 li
194.16 233.63 li
192.36 231.66 li
192.97 227.95 li
189.11 222.29 li
186.69 223.33 li
184.72 223.53 li
182.17 224.06 li
182.27 220.67 li
180.79 218.26 li
181.09 215.57 li
179.09 211.68 li
176.51 208.38 li
169.12 208.37 li
166.97 210.11 li
164.42 210.32 li
162.84 212.31 li
161.77 214.88 li
156.83 218.94 li
152.78 213.47 li
149.18 209.85 li
146.82 208.65 li
144.51 206.82 li
143.46 202.73 li
142.11 200.7 li
139.42 199.18 li
143.53 194.68 li
146.33 194.85 li
148.74 193.3 li
150.78 193.28 li
152.24 192.06 li
151.45 188.99 li
152.47 188.03 li
152.64 184.89 li
157.1 184.99 li
163.74 187.24 li
165.78 187.03 li
166.47 186.01 li
171.51 186.74 li
172.85 186.22 li
173.38 189.6 li
174.85 189.59 li
177.26 188.36 li
178.79 188.67 li
181.36 191.01 li
185.32 191.75 li
187.85 189.75 li
190.84 188.52 li
193.06 187.22 li
194.91 187.46 li
196.96 189.49 li
198.07 192.04 li
201.85 195.92 li
199.96 198.3 li
199.6 201.3 li
201.57 200.39 li
202.72 201.47 li
202.23 204.23 li
205.06 206.89 li
203.21 207.61 li
202.47 210.75 li
204.6 214.57 li
206.89 221.97 li
203.45 223.08 li
202.57 224.36 li
203.28 226.15 li
202.74 230.18 li
201.27 230.19 li
cp
.0362249 0 .604578 0 cmyk
f
201.27 230.19 mo
198.66 229.95 li
196.77 233.68 li
194.16 233.63 li
192.36 231.66 li
192.97 227.95 li
189.11 222.29 li
186.69 223.33 li
184.72 223.53 li
182.17 224.06 li
182.27 220.67 li
180.79 218.26 li
181.09 215.57 li
179.09 211.68 li
176.51 208.38 li
169.12 208.37 li
166.97 210.11 li
164.42 210.32 li
162.84 212.31 li
161.77 214.88 li
156.83 218.94 li
152.78 213.47 li
149.18 209.85 li
146.82 208.65 li
144.51 206.82 li
143.46 202.73 li
142.11 200.7 li
139.42 199.18 li
143.53 194.68 li
146.33 194.85 li
148.74 193.3 li
150.78 193.28 li
152.24 192.06 li
151.45 188.99 li
152.47 188.03 li
152.64 184.89 li
157.1 184.99 li
163.74 187.24 li
165.78 187.03 li
166.47 186.01 li
171.51 186.74 li
172.85 186.22 li
173.38 189.6 li
174.85 189.59 li
177.26 188.36 li
178.79 188.67 li
181.36 191.01 li
185.32 191.75 li
187.85 189.75 li
190.84 188.52 li
193.06 187.22 li
194.91 187.46 li
196.96 189.49 li
198.07 192.04 li
201.85 195.92 li
199.96 198.3 li
199.6 201.3 li
201.57 200.39 li
202.72 201.47 li
202.23 204.23 li
205.06 206.89 li
203.21 207.61 li
202.47 210.75 li
204.6 214.57 li
206.89 221.97 li
203.45 223.08 li
202.57 224.36 li
203.28 226.15 li
202.74 230.18 li
201.27 230.19 li
cp
.256718 .20264 .207919 0 cmyk
@
124.78 175.57 mo
120.97 168.37 li
116.36 165.08 li
120.42 163.32 li
124.9 156.83 li
127.1 152.08 li
130.26 149.12 li
134.86 149.92 li
139.37 147.9 li
144.53 147.8 li
148.95 150.52 li
155.08 152.97 li
160.68 159.77 li
166.78 166.12 li
167.2 171.87 li
169.02 177.16 li
172.48 179.76 li
173.27 183.34 li
172.85 186.22 li
171.51 186.74 li
166.47 186.01 li
165.78 187.03 li
163.74 187.24 li
157.1 184.99 li
152.64 184.89 li
135.55 184.5 li
133.07 185.54 li
130.01 185.25 li
125.12 186.75 li
123.6 179.67 li
132.01 179.86 li
134.23 178.57 li
135.89 178.49 li
139.32 176.36 li
143.28 178.31 li
147.3 178.47 li
151.3 176.4 li
149.43 173.73 li
146.38 175.28 li
143.52 175.24 li
139.87 172.96 li
136.94 173.11 li
134.85 175.3 li
124.78 175.57 li
cp
.0619821 0 .965148 0 cmyk
f
124.78 175.57 mo
120.97 168.37 li
116.36 165.08 li
120.42 163.32 li
124.9 156.83 li
127.1 152.08 li
130.26 149.12 li
134.86 149.92 li
139.37 147.9 li
144.53 147.8 li
148.95 150.52 li
155.08 152.97 li
160.68 159.77 li
166.78 166.12 li
167.2 171.87 li
169.02 177.16 li
172.48 179.76 li
173.27 183.34 li
172.85 186.22 li
171.51 186.74 li
166.47 186.01 li
165.78 187.03 li
163.74 187.24 li
157.1 184.99 li
152.64 184.89 li
135.55 184.5 li
133.07 185.54 li
130.01 185.25 li
125.12 186.75 li
123.6 179.67 li
132.01 179.86 li
134.23 178.57 li
135.89 178.49 li
139.32 176.36 li
143.28 178.31 li
147.3 178.47 li
151.3 176.4 li
149.43 173.73 li
146.38 175.28 li
143.52 175.24 li
139.87 172.96 li
136.94 173.11 li
134.85 175.3 li
124.78 175.57 li
cp
.256718 .20264 .207919 0 cmyk
@
366.95 21.07 mo
363 4.47 li
357.3 .73999 li
357.28 0 li
385.12 0 li
384.97 2.01001 li
380.47 4.67001 li
377.62 7.63 li
371.27 11.19 li
372.26 15.02 li
371.46 18.93 li
366.95 21.07 li
cp
.034699 .113497 .323033 0 cmyk
f
366.95 21.07 mo
363 4.47 li
357.3 .73999 li
357.28 0 li
385.12 0 li
384.97 2.01001 li
380.47 4.67001 li
377.62 7.63 li
371.27 11.19 li
372.26 15.02 li
371.46 18.93 li
366.95 21.07 li
cp
.256718 .20264 .207919 0 cmyk
@
304.17 243.39 mo
296.53 244.46 li
294.26 238.09 li
294.68 216.86 li
292.81 214.95 li
292.46 210.41 li
289.25 207.18 li
286.43 204.45 li
287.6 199.58 li
290.78 198.53 li
292.67 194.49 li
297.19 193.63 li
299.21 190.86 li
302.31 188.16 li
305.62 188.13 li
312.67 193.45 li
312.31 196.52 li
314.39 202.01 li
312.57 205.73 li
313.54 208.22 li
309.06 213.94 li
306.21 216.77 li
304.47 222.6 li
304.7 228.48 li
304.17 243.39 li
cp
.0579843 0 .904021 0 cmyk
f
304.17 243.39 mo
296.53 244.46 li
294.26 238.09 li
294.68 216.86 li
292.81 214.95 li
292.46 210.41 li
289.25 207.18 li
286.43 204.45 li
287.6 199.58 li
290.78 198.53 li
292.67 194.49 li
297.19 193.63 li
299.21 190.86 li
302.31 188.16 li
305.62 188.13 li
312.67 193.45 li
312.31 196.52 li
314.39 202.01 li
312.57 205.73 li
313.54 208.22 li
309.06 213.94 li
306.21 216.77 li
304.47 222.6 li
304.7 228.48 li
304.17 243.39 li
cp
.256718 .20264 .207919 0 cmyk
@
197.99 50.53 mo
197.77 45.58 li
199.18 45.58 li
199.18 46.2 li
199.01 47.99 li
198.98 61.99 li
168.64 61.51 li
168.94 85.16 li
160.27 85.99 li
158.01 90.74 li
159.77 104.09 li
123.56 104.03 li
121.55 107.11 li
121.94 103.21 li
122.11 103.22 li
142.92 102.48 li
144.03 99.15 li
147.82 95 li
150.87 82.23 li
163.72 72.26 li
168.07 60.6 li
170.96 59.93 li
173.97 52.72 li
181.75 51.73 li
185.09 52.93 li
189.29 52.93 li
192.27 50.83 li
197.99 50.53 li
cp
.034699 .113497 .323033 0 cmyk
f
197.99 50.53 mo
197.77 45.58 li
199.18 45.58 li
199.18 46.2 li
199.01 47.99 li
198.98 61.99 li
168.64 61.51 li
168.94 85.16 li
160.27 85.99 li
158.01 90.74 li
159.77 104.09 li
123.56 104.03 li
121.55 107.11 li
121.94 103.21 li
122.11 103.22 li
142.92 102.48 li
144.03 99.15 li
147.82 95 li
150.87 82.23 li
163.72 72.26 li
168.07 60.6 li
170.96 59.93 li
173.97 52.72 li
181.75 51.73 li
185.09 52.93 li
189.29 52.93 li
192.27 50.83 li
197.99 50.53 li
cp
.256718 .20264 .207919 0 cmyk
@
207.99 260.9 mo
205.57 260.98 li
196.04 256.57 li
187.64 249.54 li
179.77 244.48 li
173.54 238.51 li
175.75 235.55 li
176.24 232.87 li
180.41 227.85 li
184.72 223.53 li
186.69 223.33 li
189.11 222.29 li
192.97 227.95 li
192.36 231.66 li
194.16 233.63 li
196.77 233.68 li
198.66 229.95 li
201.27 230.19 li
200.85 232.88 li
201.77 237.35 li
199.76 241.46 li
202.46 243.99 li
205.39 244.61 li
209.31 248.48 li
209.59 252.13 li
208.7 253.28 li
207.99 260.9 li
cp
0 .767941 1 0 cmyk
f
207.99 260.9 mo
205.57 260.98 li
196.04 256.57 li
187.64 249.54 li
179.77 244.48 li
173.54 238.51 li
175.75 235.55 li
176.24 232.87 li
180.41 227.85 li
184.72 223.53 li
186.69 223.33 li
189.11 222.29 li
192.97 227.95 li
192.36 231.66 li
194.16 233.63 li
196.77 233.68 li
198.66 229.95 li
201.27 230.19 li
200.85 232.88 li
201.77 237.35 li
199.76 241.46 li
202.46 243.99 li
205.39 244.61 li
209.31 248.48 li
209.59 252.13 li
208.7 253.28 li
207.99 260.9 li
cp
.256718 .20264 .207919 0 cmyk
@
173.54 238.51 mo
171.05 237.83 li
164.4 234.1 li
159.58 229.15 li
157.96 225.77 li
156.83 218.94 li
161.77 214.88 li
162.84 212.31 li
164.42 210.32 li
166.97 210.11 li
169.12 208.37 li
176.51 208.38 li
179.09 211.68 li
181.09 215.57 li
180.79 218.26 li
182.27 220.67 li
182.17 224.06 li
184.72 223.53 li
180.41 227.85 li
176.24 232.87 li
175.75 235.55 li
173.54 238.51 li
cp
0 .614221 1 0 cmyk
f
173.54 238.51 mo
171.05 237.83 li
164.4 234.1 li
159.58 229.15 li
157.96 225.77 li
156.83 218.94 li
161.77 214.88 li
162.84 212.31 li
164.42 210.32 li
166.97 210.11 li
169.12 208.37 li
176.51 208.38 li
179.09 211.68 li
181.09 215.57 li
180.79 218.26 li
182.27 220.67 li
182.17 224.06 li
184.72 223.53 li
180.41 227.85 li
176.24 232.87 li
175.75 235.55 li
173.54 238.51 li
cp
.256718 .20264 .207919 0 cmyk
@
296.53 244.46 mo
289.09 246.44 li
287.03 243.19 li
284.56 237.33 li
283.83 232.73 li
285.87 224.4 li
283.55 221.03 li
282.67 213.75 li
282.69 207.03 li
278.83 202.26 li
279.51 199.38 li
287.6 199.58 li
286.43 204.45 li
289.25 207.18 li
292.46 210.41 li
292.81 214.95 li
294.68 216.86 li
294.26 238.09 li
296.53 244.46 li
cp
.0116884 0 .19266 0 cmyk
f
296.53 244.46 mo
289.09 246.44 li
287.03 243.19 li
284.56 237.33 li
283.83 232.73 li
285.87 224.4 li
283.55 221.03 li
282.67 213.75 li
282.69 207.03 li
278.83 202.26 li
279.51 199.38 li
287.6 199.58 li
286.43 204.45 li
289.25 207.18 li
292.46 210.41 li
292.81 214.95 li
294.68 216.86 li
294.26 238.09 li
296.53 244.46 li
cp
.256718 .20264 .207919 0 cmyk
@
139.42 199.18 mo
134.48 195.32 li
130.59 194.71 li
128.47 192.1 li
128.52 190.69 li
125.7 188.73 li
125.12 186.75 li
130.01 185.25 li
133.07 185.54 li
135.55 184.5 li
152.64 184.89 li
152.47 188.03 li
151.45 188.99 li
152.24 192.06 li
150.78 193.28 li
148.74 193.3 li
146.33 194.85 li
143.53 194.68 li
139.42 199.18 li
cp
.0116884 0 .19266 0 cmyk
f
139.42 199.18 mo
134.48 195.32 li
130.59 194.71 li
128.47 192.1 li
128.52 190.69 li
125.7 188.73 li
125.12 186.75 li
130.01 185.25 li
133.07 185.54 li
135.55 184.5 li
152.64 184.89 li
152.47 188.03 li
151.45 188.99 li
152.24 192.06 li
150.78 193.28 li
148.74 193.3 li
146.33 194.85 li
143.53 194.68 li
139.42 199.18 li
cp
.256718 .20264 .207919 0 cmyk
@
367.05 291.91 mo
365.31 290.51 li
368.49 280.13 li
383.53 280.34 li
383.61 291.47 li
370.16 291.37 li
367.05 291.91 li
cp
.034699 .113497 .323033 0 cmyk
f
367.05 291.91 mo
365.31 290.51 li
368.49 280.13 li
383.53 280.34 li
383.61 291.47 li
370.16 291.37 li
367.05 291.91 li
cp
.256718 .20264 .207919 0 cmyk
@
550.52 342.84 mo
549.93 331.69 li
547.61 327.49 li
553.22 328.22 li
556.05 322.95 li
560.96 323.56 li
561.5 327.2 li
563.49 329.29 li
563.58 332.3 li
561.3 334.23 li
557.7 339.06 li
554.34 342.4 li
550.52 342.84 li
cp
.034699 .113497 .323033 0 cmyk
f
550.52 342.84 mo
549.93 331.69 li
547.61 327.49 li
553.22 328.22 li
556.05 322.95 li
560.96 323.56 li
561.5 327.2 li
563.49 329.29 li
563.58 332.3 li
561.3 334.23 li
557.7 339.06 li
554.34 342.4 li
550.52 342.84 li
cp
.256718 .20264 .207919 0 cmyk
@
560.5 311.73 mo
564.17 316.95 li
563.63 322.39 li
560.96 323.56 li
556.05 322.95 li
553.22 328.22 li
547.61 327.49 li
548.46 322.43 li
549.73 321.72 li
550.08 316.22 li
552.73 313.64 li
554.97 314.59 li
560.5 311.73 li
cp
.034699 .113497 .323033 0 cmyk
f
560.5 311.73 mo
564.17 316.95 li
563.63 322.39 li
560.96 323.56 li
556.05 322.95 li
553.22 328.22 li
547.61 327.49 li
548.46 322.43 li
549.73 321.72 li
550.08 316.22 li
552.73 313.64 li
554.97 314.59 li
560.5 311.73 li
cp
.256718 .20264 .207919 0 cmyk
@
123.6 179.67 mo
124.78 175.57 li
134.85 175.3 li
136.94 173.11 li
139.87 172.96 li
143.52 175.24 li
146.38 175.28 li
149.43 173.73 li
151.3 176.4 li
147.3 178.47 li
143.28 178.31 li
139.32 176.36 li
135.89 178.49 li
134.23 178.57 li
132.01 179.86 li
123.6 179.67 li
cp
.0116884 0 .19266 0 cmyk
f
123.6 179.67 mo
124.78 175.57 li
134.85 175.3 li
136.94 173.11 li
139.87 172.96 li
143.52 175.24 li
146.38 175.28 li
149.43 173.73 li
151.3 176.4 li
147.3 178.47 li
143.28 178.31 li
139.32 176.36 li
135.89 178.49 li
134.23 178.57 li
132.01 179.86 li
123.6 179.67 li
cp
.256718 .20264 .207919 0 cmyk
@
62.56 162.5 mo
62 163.35 li
60.78 163.29 li
60.15 162.94 li
59.41 161.87 li
59.43 161.04 li
59.69 160.33 li
59.65 159.7 li
59.75 159.54 li
60.13 159.65 li
60.19 160.07 li
61.3 161.09 li
61.72 161.29 li
62.56 162.5 li
cp
.034699 .113497 .323033 0 cmyk
f
62.56 162.5 mo
62 163.35 li
60.78 163.29 li
60.15 162.94 li
59.41 161.87 li
59.43 161.04 li
59.69 160.33 li
59.65 159.7 li
59.75 159.54 li
60.13 159.65 li
60.19 160.07 li
61.3 161.09 li
61.72 161.29 li
62.56 162.5 li
cp
.256718 .20264 .207919 0 cmyk
@
46.61 144.58 mo
45.71 144.77 li
45.33 144.68 li
45.2 143.95 li
45.02 143.46 li
45.06 143.25 li
47.13 142.3 li
47.86 142.46 li
48.37 143.21 li
48.02 143.63 li
46.61 144.58 li
cp
.034699 .113497 .323033 0 cmyk
f
46.61 144.58 mo
45.71 144.77 li
45.33 144.68 li
45.2 143.95 li
45.02 143.46 li
45.06 143.25 li
47.13 142.3 li
47.86 142.46 li
48.37 143.21 li
48.02 143.63 li
46.61 144.58 li
cp
.256718 .20264 .207919 0 cmyk
@
67.43 151.14 mo
68.2 151.31 li
68.49 151.25 li
68.98 151.29 li
69.51 151.77 li
69.61 152.29 li
69.35 152.93 li
68.33 153.46 li
67.74 153.4 li
67.04 152.92 li
67.44 151.96 li
67.43 151.14 li
cp
.034699 .113497 .323033 0 cmyk
f
67.43 151.14 mo
68.2 151.31 li
68.49 151.25 li
68.98 151.29 li
69.51 151.77 li
69.61 152.29 li
69.35 152.93 li
68.33 153.46 li
67.74 153.4 li
67.04 152.92 li
67.44 151.96 li
67.43 151.14 li
cp
.256718 .20264 .207919 0 cmyk
@
54.57 163.91 mo
53.85 164.26 li
53.35 164.1 li
52.87 163.74 li
52.64 163.21 li
52.83 162.76 li
53.8 162.22 li
54.38 162.4 li
54.69 163.23 li
54.57 163.91 li
cp
.034699 .113497 .323033 0 cmyk
f
54.57 163.91 mo
53.85 164.26 li
53.35 164.1 li
52.87 163.74 li
52.64 163.21 li
52.83 162.76 li
53.8 162.22 li
54.38 162.4 li
54.69 163.23 li
54.57 163.91 li
cp
.256718 .20264 .207919 0 cmyk
@
56.61 147.58 mo
56.99 147.85 li
57.12 148.05 li
56.55 148.15 li
55.18 147.79 li
54.81 148.01 li
54.44 148.77 li
53.74 147.62 li
53.79 147.19 li
53.94 147.07 li
54.92 147.37 li
56.61 147.58 li
cp
.034699 .113497 .323033 0 cmyk
f
56.61 147.58 mo
56.99 147.85 li
57.12 148.05 li
56.55 148.15 li
55.18 147.79 li
54.81 148.01 li
54.44 148.77 li
53.74 147.62 li
53.79 147.19 li
53.94 147.07 li
54.92 147.37 li
56.61 147.58 li
cp
.256718 .20264 .207919 0 cmyk
@
64.98 161.31 mo
64.73 161.35 li
64.34 160.93 li
64.43 160.35 li
64.38 160.2 li
64.72 159.59 li
65.39 159.64 li
65.56 160.1 li
65.6 161.04 li
64.98 161.31 li
cp
.034699 .113497 .323033 0 cmyk
f
64.98 161.31 mo
64.73 161.35 li
64.34 160.93 li
64.43 160.35 li
64.38 160.2 li
64.72 159.59 li
65.39 159.64 li
65.56 160.1 li
65.6 161.04 li
64.98 161.31 li
cp
.256718 .20264 .207919 0 cmyk
@
49.22 145.77 mo
48.46 145.99 li
47.99 145.96 li
47.32 145.64 li
47.53 145.28 li
48.26 144.89 li
48.77 144.81 li
49.18 145.51 li
49.22 145.77 li
cp
.034699 .113497 .323033 0 cmyk
f
49.22 145.77 mo
48.46 145.99 li
47.99 145.96 li
47.32 145.64 li
47.53 145.28 li
48.26 144.89 li
48.77 144.81 li
49.18 145.51 li
49.22 145.77 li
cp
.256718 .20264 .207919 0 cmyk
@
67.7 147.24 mo
67.4 147.71 li
67.04 147.02 li
66.85 146.85 li
66.75 145.86 li
67.29 145.56 li
67.55 145.53 li
67.55 146.57 li
67.7 147.24 li
cp
.034699 .113497 .323033 0 cmyk
f
67.7 147.24 mo
67.4 147.71 li
67.04 147.02 li
66.85 146.85 li
66.75 145.86 li
67.29 145.56 li
67.55 145.53 li
67.55 146.57 li
67.7 147.24 li
cp
.256718 .20264 .207919 0 cmyk
@
340.86 300.13 mo
339.9 300.81 li
339.56 300.63 li
339.35 300.16 li
339.08 299.14 li
339.17 298.65 li
339.6 298.1 li
340.54 297.54 li
341.11 297.51 li
341.69 298.23 li
341.69 298.99 li
340.86 300.13 li
cp
.034699 .113497 .323033 0 cmyk
f
340.86 300.13 mo
339.9 300.81 li
339.56 300.63 li
339.35 300.16 li
339.08 299.14 li
339.17 298.65 li
339.6 298.1 li
340.54 297.54 li
341.11 297.51 li
341.69 298.23 li
341.69 298.99 li
340.86 300.13 li
cp
.256718 .20264 .207919 0 cmyk
@
347.92 286.75 mo
347.57 286.99 li
347.17 286.79 li
347.06 286.42 li
347.58 285.71 li
347.83 285.54 li
348.04 285.69 li
348.16 285.88 li
348.18 286.17 li
347.92 286.75 li
cp
.034699 .113497 .323033 0 cmyk
f
347.92 286.75 mo
347.57 286.99 li
347.17 286.79 li
347.06 286.42 li
347.58 285.71 li
347.83 285.54 li
348.04 285.69 li
348.16 285.88 li
348.18 286.17 li
347.92 286.75 li
cp
.256718 .20264 .207919 0 cmyk
@
146.5 374.96 mo
146.18 374.98 li
146.09 374.9 li
146.03 374.68 li
146.18 374.33 li
146.32 374.11 li
146.54 374.15 li
146.83 374.39 li
147.07 374.6 li
146.94 374.79 li
146.5 374.96 li
cp
.034699 .113497 .323033 0 cmyk
f
146.5 374.96 mo
146.18 374.98 li
146.09 374.9 li
146.03 374.68 li
146.18 374.33 li
146.32 374.11 li
146.54 374.15 li
146.83 374.39 li
147.07 374.6 li
146.94 374.79 li
146.5 374.96 li
cp
.256718 .20264 .207919 0 cmyk
@
grestore
false sop
.75021 .679683 .670222 .90164 cmyk
%ADOBeginSubsetFont: Arial-BoldMT Initial
ct_T42Dict begin
-0.625 -0.375 2 1.016
 256 array 0 1 255 {1 index exch /.notdef put} for  /Arial-BoldMT
Type42DictBegin
[<00010000000c000c000c000c4f532f32115d5e9f000000cc000000606376
7420fb3ea3da0000012c0000075a6670676d08e8ba2800000888000005d7
676c7966e09f816b0000990c0007cdd268656164de58e00700000e600000
003668686561127e162200000e9800000024686d747842b9bf1700000ebc
000035646c6f6361339bef0000004420000035686d617870154204760000
7988000000206e616d65748eab8d000079a800000d8d70726570f14ae516
00008738000011d267646972000000000000000000000000000303d402bc
00050008059a05330000011b059a0533000003d1006602120805020b0704
020202020204e0002affc00078430000000900000000544d432000200020
fffc05d3fe510133073e01b2400001ffffff0000042605ba000000200004
05ba001c05ba001c05a7001c0426001c0000ffe40000ffe40000ffe4fe69
ffe405ba001cfe69ffe402ea0000011d0000011d000000000000000000b2
00ac00d70128012000b301fa001700f8011901310049000400f7000300af
00fd00950014005400960112002400160055004901040119012b008c019b
ff76ffe9003d009200a2ffb70182ffaa0016008f00c600f8001c00de0401
0037004e00550055006500e903e50059ff9a00080087000b003b00520116
006100d600d600f500000093009400be017cfff80004001400820092003c
00410041ffc1fffc002a008c049005d809b5009100bb0106ff63ff69001e
0022008a022bffd6ffdf0026005900a300ac0104012b01c004480021006b
00850098011903c6006b009500a400fe010c025d034305bf000000490056
006e0077008a00aa00ca0112015005d805f0ff7bffe70006001300280061
006900e90135014d02a5040cff3effda005b00b900c801190119011901c0
045b04a7055bfe3fff9dffc2001500b7010a01bc01c10532058efd81ffa1
ffae000c00260031003d004e00560062008300c100c900f100f2027fff7f
00480053007700c5011d01200126012801d60219027e027e03d3002e0041
005d006b0075009f00b000b200ba00bb00bd00d600db00e000e50114011b
014a0162019101f2020c026402cf039b03b403d4040104a9001600230025
002a007400a500b600cc00cd00cf0105012001300150016a016f0197019d
01e002b002ec02f70408048304fb04fd0526fee0fefbff4efff50018001a
004c007a007f009100a300b300b400ce00d500f200f300f6011001380168
01a101b001e001ec02090222024f0270029602a502ad034e039103c10435
0442046b04cd04da0586058b076107fefca6fe93feadfed1ffb7ffd10003
000e00180026004600690081008f00a500bf00d300d500d900dd00e20119
012b0138013b015a015e016801730188019401ad01c501d101ea01f20200
020002000222023b0244024f026f0272027e02820293029402a502cf02cf
02d002da02dd02eb02f5030503220336037103a103b003b803d003e60410
0426042e0431044f045a04ff053205320547055305a805ab05c205f0063c
0664067006e80782078408ccfd2afddefe00fe68feb0feb3ffaa00080059
007a0091009e00a200af00b400bb00ca00cc00ce00d900e000f40114011a
01210127012b01390146014b014d0157015c01650182018701920198019b
01a201ae01c501c501d102070222022b024102530261026502840287028d
02b402b402ba02c902d602d802ed02f503170323032b03310349035a035b
036e03710374037e03840391039103aa03cf03d303e703e803ed04080417
041e0475047a049904a704b404d1054c056d056d05a205bf05c005d105fc
05fc0602061a061c062f066a06a806e2070607360750078907d407f30870
011c012a011a01200000000000000000000000000219000b001e02aa0214
047f01ed0000001d0104000f0091002b01880153011201f3003f03fe0168
010e047f01ed036e03150219041300000000064004b00000027401bb0035
01c5007f06020301000004e000b201dc02e004c3023d00d50160011904a7
036e05ca022100ab0426009002bc02bb014200b4023c0256029c030001e5
01a800e5006b00780094016b017300ab01ed013a017d0137017f00d40216
03530184003cffa202040109014901f0006e031500810464005e00000000
0000000000000000000000000000000000000000000000000000013900dc
00e9fe9e040d047c012b00b80096005900ac00df01a900fa0105ffec0017
0003005500610004008c00a3008500280120005d00d6007f012601190104
016c06cf00b4010600000737063e047a00f000f900e905ba042604420000
ffe7fe69049e04e3ff37ff2d01200105012000a800740068004700f200e5
00d900bd00a800680047005c0048000a0028003200410050005a0064007d
00870091ffb0ff9cff83ff79ff6f00cb012000fa012c01fa01a000d500b8
005c003c00c800c8008f00d9018b00b30047000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000fe6400c000ea01180125013203b003ed0576
059005aa05b405be05cd063100780084009b00cc00e200f4010a01200163
00d100ea00f7010801420019002c00340041003800480058006c025903bd
0043011a007000d30028003700420050005a0064007300780082008c009c
00a500bd00ce00f00110015c00be00d801020117012c016300ea01080041
004b0055005f007300a60109018301b300410064001e002a00eb00fa010e
01380274002c00400082009600b600c000cc00dc00e600f000ff010a0120
012c013b01440156016300f70057006401100136005001b10000ffb60039
004e004403cc00e5002401100042012201a400f0006000e0000e001d0039
05e30102002cfe4eff38026903bd011600ff000e00a00054001b003d0171
0041000f005000fd0015014f0035fe52002c00d3010304b001d200b600c0
00990265ff870377fe6c00cb00a9005c0040047607440000404154403f3e
3d3c3b3a3938373534333231302f2e2d2c2b2a292827262524232221201f
1e1d1c1b1a191817161514131211100f0e0d0c0b0a090807060504030201
002c4523466020b02660b004262348482d2c452346236120b02661b00426
2348482d2c45234660b0206120b04660b004262348482d2c4523462361b0
206020b02661b02061b004262348482d2c45234660b0406120b06660b004
262348482d2c4523462361b0406020b02661b04061b004262348482d2c01
10203c003c2d2c20452320b0cd442320b8015a51582320b08d44235920b0
ed51582320b04d44235920b09051582320b00d44235921212d2c20204518
684420b001602045b04676688a4560442d2c01b10b0a432343650a2d2c00
b10a0b4323430b2d2c00b0172370b101173e01b0172370b10217453ab102
00080d2d2c45b01a234445b01923442d2c2045b00325456164b050515845
441b2121592d2cb00143632362b0002342b00f2b2d2c2045b0004360442d
2c01b00643b00743650a2d2c2069b04061b0008b20b12cc08a8cb8100062
602b0c642364615c58b00361592d2c45b0112bb0172344b0177ae4182d2c
45b0112bb01723442d2cb01243588745b0112bb0172344b0177ae41b038a
45186920b01723448a8a8720b0c05158b0112bb0172344b0177ae41b21b0
177ae45959182d2c2d2cb0022546608a46b040618c482d2c4b53205c58b0
02855958b00185592d2c20b0032545b019234445b01a23444565234520b0
0325606a20b009234223688a6a606120b01a8ab000527921b21a1a40b9ff
e0001a45208a54582321b03f1b235961441cb114008a5279b31940201945
208a54582321b03f1b235961442d2cb110114323430b2d2cb10e0f432343
0b2d2cb10c0d4323430b2d2cb10c0d432343650b2d2cb10e0f432343650b
2d2cb11011432343650b2d2c4b525845441b2121592d2c0120b003252349
b04060b0206320b000525823b002253823b002256538008a63381b212121
212159012d2c4bb06451584569b00943608a103a1b212121592d2c01b005
251023208af500b0016023edec2d2c01b005251023208af500b0016123ed
ec2d2c01b0062510f500edec2d2c20b001600110203c003c2d2c20b00161
0110203c003c2d2cb02b2bb02a2a2d2c00b00743b006430b2d2c3eb02a2a
2d2c352d2c76b8023623701020b802364520b0005058b00161593a2f182d
2c21210c6423648bb84000622d2c21b08051580c6423648bb82000621bb2
00402f2b59b002602d2c21b0c051580c6423648bb81555621bb200802f2b
59b002602d2c0c6423648bb84000626023212d2cb4000100000015b00826
b00826b00826b008260f10161345683ab001162d2cb4000100000015b008
26b00826b00826b008260f1016134568653ab001162d2c4b53234b515a58
20458a60441b2121592d2c4b545820458a60441b2121592d2c4b53234b51
5a58381b2121592d2c4b5458381b2121592d2cb0134358031b02592d2cb0
134358021b03592d2c4b54b012435c5a58381b2121592d2cb012435c580c
b00425b00425060c6423646164b0035158b00425b00425012046b0106048
2046b0106048590a21211b2121592d2cb012435c580cb00425b00425060c
6423646164b807085158b00425b00425012046b8fff060482046b8fff060
48590a21211b2121592d2c4b53234b515a58b03a2b1b2121592d2c4b5323
4b515a58b03b2b1b2121592d2c4b53234b515ab012435c5a58381b212159
2d2c0c8a034b54b00426024b545a8a8a0ab012435c5a58381b2121592d2c
462346608a8a462320468a608a61b8ff8062232010238ab902a702a78a70
456020b0005058b00161b8ffba8b1bb0468c59b0106068013a2d2cb10200
42b123018851b1400188535a58b910000020885458b202010243604259b1
2401885158b920000040885458b202020243604259b12401885458b20220
02436042004b014b5258b2020802436042591bb940000080885458b20204
0243604259b94000008063b80100885458b202080243604259b940000100
63b80200885458b2021002436042595959592d00000100000005147b2b59
b6935f0f3cf50819080000000000a2e33c1d00000000c94a454ffafafcfd
1000082400010009000100010000000000010000073efe4e00431000fafa
fa7a1000000100000000000000000000000000000d590600010000000000
023900000239000002aa00b803cb00700473001204730046071d005905c7
005a01e7005c02aa006b02aa0043031d001c04ac00550239007502aa0073
023900930239fffd04730056047300a2047300330473004d047300260473
005b0473005704730057047300530473004102aa00c902aa00aa04ac005f
04ac005504ac005f04e3006a07cd003d05c7000005c7009605c7006105c7
00940556009504e300970639006205c700960239008c0473002305c70099
04e3009d06aa009105c7009806390059055600950639005905c700960556
004a04e3002c05c700930556ffff078d0007055600000556fffd04e30016
02aa00920239fffd02aa002604ac00730473ffed02aa002a0473004904e3
00870473005504e300540473004102aa001804e3005404e3009202390093
0239ffa20473008902390093071d007e04e3009104e3005204e3008b04e3
005b031d00870473003002aa001f04e3008d0473000b063900090473000c
0473000e04000022031d003c023d00b0031d002d04ac004305c7000005c7
000005c700610556009505c700980639005905c700930473004904730049
047300490473004904730049047300490473005504730041047300410473
004104730041023900920239ffe90239ffcd0239ffd004e3009104e30052
04e3005204e3005204e3005204e3005204e3008d04e3008d04e3008d04e3
008d0473004403330056047300540473000d0473003b02cd00420473fffe
04e3008b05e5fff705e5fff7080000d802aa00bb02aa0005046400310800
ffaa0639003f05b40098046400320464003c0464003c04730001049c006f
03f4002c05b4007a069600a1046400000231000002f6002502ec001a0625
0037071d005804e3005704e3006502aa00c304ac0055046400540473ffec
0464001f04e5001a047300600473006a080000c905c7000005c700000639
005908000048078d00580473fffc08000000040000840400006902390098
023900720464003103f4002f0473000e0556fff70156fea90473ffe002aa
004b02aa004b04e3001f04e3001f04730044023900930239007504000071
0800000105c700000556009505c7000005560095055600950239006a0239
ffae0239ffbf0239ffc106390059063900590639005905c7009305c70093
05c700930239009302aa000302aafff302aa001302aa001a02aa00cd02aa
009102aa002602aa006002aa003902aa000304e3000a0239000a0556004a
0473003004e3001604000022023d00b005c7fffd04e300530556fff70473
000e0556009504e3008b04ac005504ac006d02aa005b02aa001902aa0028
06ac005c06ac005c06ac0028047300000639006204e300540239008c0556
004a0473003005c700610473005505c700610473005504e30054046bffed
02aa00c805c700000473004905c700000473004905c7009405c0005105c7
fffd0556009504730041055600950473004104e3009d0239007904e3009d
0315009504e3009a03d5009305c7009804e3009105c7009804e300910639
005904e3005205c70096031d008705c70096031d00500556004a04730030
04e3002c02aa001f04e3002c03d5001e05c7009304e3008d05c7009304e3
008d04e300160400002204e300160400002204cf009a0639005606910056
04eb004e04da004e03cc004e0579004e0392003005b9004e046bffed04d5
00b8032b004f08c000290800004f040000990800004f040000990800004f
040000980400009807d5016a05c7008f04ab005504d5009d04ac005504d5
022204d5010505abffe9050001c905ab027e05abffe905ab027e05abffe9
05ab027e05abffe905abffe905abffe905abffe905abffe905ab01c005ab
027e05ab01c005ab01c005abffe905abffe905abffe905ab027e05ab01c0
05ab01c005abffe905abffe905abffe905ab027e05ab01c005ab01c005ab
ffe905abffe905abffe905abffe905abffe905abffe905abffe905abffe9
05abffe905abffe905abffe905abffe905abffe905abffe905abffe905ab
ffe905ab02d605ab006605abffea05d5ffff04d500920800000007eb0130
07eb012007eb013007eb012004d500b204d5008004d5002a082b0198086b
01b807550010060000f40600006f0440003a0540003704c0003f04150040
04000025060000550647008c0473009005abffc701eb008d03d500860715
002303e9001804d5009202d6005c02d6005c04d500b202d6004d05c70000
0473004905c700610473005505c700610473005505560095047300410556
00950473004105560095047300410639006204e300540639006204e30054
0639006204e3005405c7009604e3009205c7000504e300190239ffba0239
ffbb0239ffda0239ffda0239ffe10239ffe2023900480239004704730023
0239ffa205c70099047300890473008d04e3009d0239ffed05c7009804e3
009105c9009c04e3008e0639005904e300520639005904e3005205c70096
031d002a0556004a0473003004e3002c02aa000705c7009304e3008d05c7
009304e3008d05c7009304e3008d05c7009304e3008d078d000706390009
0556fffd0473000e0239008d05c70000047300490800ffaa071d00580639
003f04e3005702aa00c9078d000706390009078d000706390009078d0007
063900090556fffd0473000e0239009502aaffd70473000d04cd005a06ac
005c06ac002906ac003006ac002f02aa00bc02aa002602aa00bb03b8fff4
05c7ffe806d3ffbb073fffbb03caffbb0699ffa6076bffc806b4ff9c0239
ff2905c7000005c7009605c000000556009504e3001605c700960239008c
05c700990556000006aa009105c70098052600660639005905c7009a0556
009504cd005a04e3002c0556fffd0556000006790056066a00620239ffcc
0556ffff04eb004e039c004e04e3008e0239008204a8006c04e200900473
000f03af004e04e3008e0453004e023900930476008e0473000f04e50090
0473000b0390004e04e3005204f300760429004e04a80076049b00110607
007606c2004e0239ffcd04a8007604e3004e04a8007606c2004e055a0097
0715002f048900a405b100580556004a0239008c0235ffca0473002308c0
001a0880009d0700003704e2009a04fa000005c0009905c7000005c0009b
05c70096048900a405b3fffa05560095073b00170503002c05c0009905c0
009904e2009a059d002006aa009105c700960639005905c0009905560095
05c7006104e3002c04fa000006d400590556000005d8009a059f007d080a
009a0827009a06f5001a07d5009d05c0009b05b100570840009605c00004
0473004904f1005c04eb0096035500880514fff90473004105acffff03fa
001804eb008c04eb008c040100880515001905eb009b04d5008804e30052
04d5008804e3008b0473005503eb00150473000e070000540473000c04eb
008904a5007206ab008c06c0008d05d5002806d5009504eb0099046b0038
06d5009104abfffb0473004504e3000003550088046b0051047300300239
00930240ffd00239ffa207c000180740008c04e300000401008804730012
04d5008803e50096039300880800004108eb00a306200030000001010000
001e0000003100000031000001010000007f0000007e0000008c0000008c
000001010000001000000101000001210393007d0000008c026500c80000
03020000ff0102aa00c904a90059049b004103a7000a0466003204ea0082
022f0087034e005a04ed00870503007d022f0087042c002803ed004b03f8
004104e30087050a0037022f00870316004b04e800500459000a04c00064
04b2006403ff000a0418000a04950082042c002805b8005a0563002d045e
0087045e0087045e00870236005004090050068b0087022fffac042c0028
042c002803f8ff1603f8ff160479003205b8005a05b8005a05b8005a05b8
005a04a9005904a9005904a90059049b004103a2000a0466003204ea0082
02950000038100000503007d02950000042c002803ed004b03f80041050a
00370316004b04e8005004c0006404b200640418000a04950082042c0028
05b8005a0563002d022f0087049b004103ed004b04b2006404db00410000
ffdc0000ff250000ffdc0000fe51028d00ab028d00a002da004303c0007e
0196ffba0000004600000046000000460000004600000048000000460000
004600000046047e0188047e0150047e0104047e009e047e012d047e00ea
047e00d5047e009c047e00bc047e00ee04350085028d00c1043500b30600
01000600010002be005806000100047e00a5047e00bd047e00de06000100
060001000600010006000100060001000000004606000100060001000600
0100060001000600010006000100060001000600010004e6ffba06000100
06000100060001000532003905320039022cffba022cffba060001000600
01000600010006000100049e0034047800300430ffba0430ffba0376000a
0376000a060e00290708002902e2ffba0456ffba060e00290708002902e2
ffba0456ffba05280097046f000a03520003060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100000000300000004600000046
000000400000004606000100060001000000ffdc0000fe510000ff160000
ff160000ff160000ff160000ff160000ff160000ff160000ff160000ff16
0000ffdc0000ff160000ffdc0000ff200000ffdc0473002d080000000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
0600010006000100060001000600010006000100028d007f028d00670600
010005a0002e03c0007e01e800000207ffc301bc005e01e0fffa039c0006
039c000601bc005e01e0001a05280097049e0011022cffba022cffba01bc
008801e0001a0532003905320039022cffba022cffba02be003603520003
0532003905320039022cffba022cffba0532003c0532003c022cffba022c
ffba049e0034047800300430ffba0430ffba049e0034047800300430ffba
0430ffba049e0034047800300430ffba0430ffba02be006902be006902be
006902be00690376000a0376000a0376000a0376000a0732004007320040
04deffba04deffba073200400732004004deffba04deffba088000400880
0040062cffba062cffba0880004008800040062cffba062cffba0430ffba
0430ffba0430ffba0430ffba0430ffba0430ffba0430ffba0430ffba0454
003403c000460454ffba02e2ffba0454003403c000460454ffba02e2ffba
0610002f0610002f0270ffba0298ffba04e6002704e600270270ffba0298
ffba045400290454002902e2ffba02e2ffba039c0023039c002301e0ffba
01e0ffba02e2002102e200210352ffba0352ffba0454003e0454003e022c
ffba022cffba02be00580352000303c0ffba039cffba039c0006039c0006
05280097046f000a05280097049e0011022cffba022cffba0454000004c4
000003e400220454001a03e400220454001a03e400220454001a06000100
060001000000004600000046060001000600010006000100000000460000
004606000100060001000000004800000046060001000600010006000100
000000460000004600000046000000460000004000000030060001000000
004600000046060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100028d00ca028d00c7028d00c6060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010002be0069
0100ffba0800ffba1000ffbb06d3005905b0005206a3009305cb008d0000
fd880000fbc10000fc5f0000fe310000fcad0000fd550000fe260000fdf1
0000fd180000fc690000fd950000fbe00000fc700000fed40000fecd0000
fea0041b007806ac005c06ac00190000fe450000fd550000fda60000fc5f
0000fe250000fd180000fbe00000fafa0000fb360000fc700000fb870000
fb9b0000fcce0000fc540000fbc30000fc940000fbf50000fdb00000fe59
0000fd7e0000fc820000fd340000fe500000fe460000fcd10000fd3e0000
fd020000fc3a0000fce90000fc260000fc070000fc2f0000fb9e0000fb76
0239009305c700000473004905c700000473004905c700000473004905c7
00000473004905c700000473004905c700000473004905c7000004730049
05c700000473004905c700000473004905c700000473004905c700000473
004905c70000047300490556009504730041055600950473004105560095
047300410556009504730041055600950473004105560095047300410556
00950473004105560095047300410239006a0239005d0239008c02390093
0639005904e300520639005904e300520639005904e300520639005904e3
00520639005904e300520639005904e300520639005904e3005206d30059
05b0005206d3005905b0005206d3005905b0005206d3005905b0005206d3
005905b0005205c7009304e3008d05c7009304e3008d06a3009305cb008d
06a3009305cb008d06a3009305cb008d06a3009305cb008d06a3009305cb
008d0556fffd0473000e0556fffd0473000e0556fffd0473000e05c70000
047300490239ffca0239ffca0639005904e3005205c7009304e3008d05c7
009304e3008d05c7009304e3008d05c7009304e3008d05c7009304e3008d
0000fef90000fef90000fef40000feef0489fffd03550007073b001705ac
ffff04e2009a0401008804e2009a0401008805c7009604d5008804730001
047300120473000104730012055600000473000c059f007d04a50072059f
009c04e3009205cf00590473004c0639005604e3005205320039022cffba
0270ffba0298ffba04e60027022c0065022c0016022c0016022c0011022c
0043022cffd20000fef00000000f0000fff502aa009002aa009000000000
0000005e0000005e0000ffcb01bc000f01e0ffbf01bcfff501e0ffcd01bc
001d01e0000901bc008801e0001a039c0006039c0006039c0006039c0006
05280097046f000a0532003905320039022cffba022cffba053200390532
0039022cffba022cffba0532003905320039022cffba022cffba05320039
05320039022cffba022cffba0532003905320039022cffba022cffba0532
003905320039022cffba022cffba0532003905320039022cffba022cffba
049e0034047800300430ffba0430ffba049e0034047800300430ffba0430
ffba049e0034047800300430ffba0430ffba049e0034047800300430ffba
0430ffba049e0034047800300430ffba0430ffba049e0034047800300430
ffba0430ffba02be004f02be004f02be006902be006902be006902be0069
02be004f02be004f02be006602be006602be006902be006902be006902be
006902be002f02be002f02be002202be00220376000a0376000a0376000a
0376000a0376000a0376000a0376000a0376000a0376000a0376000a0376
000a0376000a0376000a0376000a0376000a0376000a0732004007320040
04deffba04deffba073200400732004004deffba04deffba073200400732
004004deffba04deffba0880004008800040062cffba062cffba08800040
08800040062cffba062cffba0430ffba0430ffba0454003403c000460454
ffba02e2ffba0610002f0610002f0610002f0270ffba0298ffba0610002f
0610002f0270ffba0298ffba0610002f0610002f0270ffba0298ffba0610
002f0610002f0270ffba0298ffba0610002f0610002f0270ffba0298ffba
04e6002704e6002704e6002704e60027093e0032093e00320740ffba0740
ffba060e00290708002902e2ffba0456ffba045400290454002902e2ffba
02e2ffba045400290454002902e2ffba02e2ffba045400290454002902e2
ffba02e2ffba060e00290708002902e2ffba0456ffba060e002907080029
02e2ffba0456ffba060e00290708002902e2ffba0456ffba060e00290708
002902e2ffba0456ffba060e00290708002902e2ffba0456ffba039c0023
039c002301e0ffba01e0ffba039c0023039c002301e0ffb101e0ffb1039c
0023039c002301e0ffba01e0ffba039c0023039c002301e0ffba01e0ffba
0454003e0454003e022cffba022cffba0454003e0454003e0454003e0454
003e0454003e0454003e022cffba022cffba0454003e0454003e049e0034
047800300430ffba0430ffba02be005803520003031a001a031a001a031a
001a039c0006039c0006039c0006039c0006039c0006039c0006039c0006
039c0006039c0006039c0006039c0006039c0006039c0006039c0006039c
0006039c000605280042046fffd905280097046f000a022cffba022cffba
039c0006039c000605280097046f000a022cffba022cffba05280097046f
000a067f0044067f0045067f0044067f004501a800280000fe290000fe8c
0000ff250000ff230000fefa0000ff7a0000fe5908fc003208ad00320000
ffb50000ffb60000fef00000ff590000fe590000ff8c01b4000002f70000
0000fe850000ff0704cd00320000ff580000ff580000ff59073200400732
004004deffba04deffba0880004008800040062cffba062cffba04540034
03c000460454ffba02e2ffba03c0007e02e2002102be0058022cffba0290
ffba01f4002f01f4003b01f4001201f400b101f4006d060e002907080029
022f00870000fec803500000045e008703e4fff50454fff503e400220454
001a03e400220454001a03e400220454001a03e400220454001a03e40022
0454001a03e400220454001a047e0072047e00bd03e4000f0454000f04e3
001b06b1001e05c0009b04e3008705c0000a04e3000a05c7006905c70061
0473005505c7fffd06b3001e05c0005c04e3005404da004e055600660503
006f04e3ffac063900620518000207720092023900930239000705c70099
047300890239001b0473000f07ef009605c7ffad04e3008e063900560718
005905f300550641001e04e3008b05560095055600640473006304cd005a
02e1001e02aa001f04e3001802aa001f04e3002d066a006205c700930629
00000473000e04e300160400002204e3003a04e300590436002a04360039
047300330473005b03fa001e04a2001f04e3008b023d00b003fb00b004ad
005602aa00b80aaa009409c7009408e300540956009d071c009d04720093
0a3a009808000098071c00910473004c05c70000047300490000fefe05c7
0000047300490800ffaa071d00580639006204e300240639006204e30054
05c70099047300890639005904e300520639005904e3005204e3003a0436
00220239ffa20aaa009409c7009408e300540639006204e3005408430096
0552009505c7009804e3009105c700000473004905c70000047300490556
00950473004105560095047300410239ff370239ff2d0239fff40239ffe6
0639005904e300520639005904e3005205c70096031dffcd05c70096031d
008005c7009304e3006705c7009304e3008d0556004a0473003004e3002c
02aa001f049e002e0429004905c7009604e30092059f009c050c0052050c
005204e300160400002205c7000004730049055600950473004106390059
04e300520000fefd0639005904e300520639005904e300520639005904e3
00520556fffd0473000e0473004504e3005404e3008204e3008704730034
0473001404e3005404e300540473004c0641004c03fa004f03fa00180587
0018048a005202aaffc404e3005404e3005404b000520473000f04ce000f
04e3008a04e3009204e300920239001b0239006b033e004402a8000002d9
00140239009304d40093071d0085071d0085071d007e04e3ffa604e30091
04eb008c04e3005206ab005206c2004e05ff0052031dffe6031dffe6031d
ffe6031d0087031d0087031d0087031dffe604ab008a04ab008a04730030
02aaffc402aaffc402aaff9b0451001e02aa001902aa001f04e3001b04f8
004b04a8009104730012063900090473000f0491000f0400002205700022
0436002204360022047300420473005504730042047300550639005904eb
0096048a004f04b0005204d5008803ab001e04730014039e008804e3005b
0473004204730055083f00540789005409af00540682001f0446001f0698
001f06f4001806350093058a00930445001e0482008802f1003202f10032
018effe202040032020400000204000003000032042f000002e2000001e7
005c03cb007002390098023900750239009402aa00f302aa00f303000032
0300003204ac005f04ac005f04ac002a04ac002a02aa012102aa00bb02aa
002a02aa012102aa001302aa002a02aa00bb02aa00ca02aa00ca02aa00f3
02aa00f302aa00a602aa00a602aa00a602aa001302aaffe102aafffb02ed
0000012100320302003202ee000003000032031000960310009603100096
031000960310009602aa006202aa006202aa000302aa001d040000690457
009604570096045700960457009604570043045700430457004304570043
04570043031000430457002f0457002f0457002f0457002f0457002f0310
002f04570025045700250457002504570025045700250310002f0457001a
0457001a0457001a0457001a0457001a0310001a04570042045700420457
004204570042045700420310004204570096045700960457009604570096
0457004204570042045700420457004204570042031000420457002f0457
002f0457002f0457002f0457002f0310002f0457002f0457002f0457002f
0457002f0457002f0310002f045700260457002604570026045700260457
002603100026045700420457004204570042045700420457004203100042
045700960457009604570096045700960457004204570042045700420457
004204570042031000420457002604570026045700260457002604570026
031000260457002304570023045700230457002304570023031000230457
002f0457002f0457002f0457002f0457002f0310002f0457004b0457004b
0457004b0457004b0457004b0310004b0457009604570096045700960457
00960457004204570042045700420457004204570042031000420457001a
0457001a0457001a0457001a0457001a0310001a04570024045700240457
00240457002404570024031000240457002f0457002f0457002f0457002f
0457002f0310002f0457004e0457004e0457004e0457004e0457004e0310
004e045700960457009604570096045700960000feaf0000febf0000fdb5
0000fec80000ff780000feb10000ff3d0000fe6f0000feae0000ffce0000
ff660000fe6f0000fec80000fec80000ff680000ff680000ff6800000000
0000ff1f0000ff1f0000ff440000ff5f0000fe870000ffec0000ff9c0000
ff510000ff510000ff510000febf0000ff15000000000000feb10000ff3d
0000ff6b0000fef20000ff470000ffce0000fe870000febb0000feae0000
feae0000fec80000fec80000fea60000febf0000fdb70000febe0000fea6
0000febf0000fdb50000fe1f0000fee20000ff9c0000fe870000ff440000
feba0000ff230000ff9a0000fdb90000fe3b000000000000fea70000ff68
0000fe170000ff740000fe870000fe000000ff660000ff440000fea70000
fea70000fea70000ff030000ff520000fd1f0000ff530000ff530000ff53
0000feb10000feb00000ffa10000fe8c0000feb80000feaf0000fea20000
feba0000fdf40000ff190000ff2d0000fe8c0000fe8802aa00bb02aa002a
02aa00c804e2006704a8000a06290000080200000629000005ff005206c2
004e056900140639005904e3005205c700770473005504e30097039e0088
06030000043c001d066f000a04e2000a07ef0096071d0085059f007d04e3
008a059f009c04d7000a05560064055600640524001404d4000a05e10055
04a0004b040e0014038400280569001404f1005c047300550239ffa20639
005603d4005103d400510556009505c000990473004104eb008c0a3d0059
063a001406f4001a059f001b07ce008c065e0093055600000473000b0768
008c066700930679005606070076089e008c07d800930503004603fa0043
06790056060700760639005604e300520685ffff052c000b0685ffff052c
000b08f6005907cb005206840023051a00230a3d0059073500550000fe37
0a3d0059063a001405c700610473005504ac000f0000fea60000feb10000
ff8d0000ff8d0000fc2b0000fc4c05c0009904eb008c05c0001104eb001b
0556009504e3008b059f009c04c900880503002c03fa001804e200110401
000d0617001a04fc00280709009605b6008809020099075f008805c7003b
049f003405c700610473005504e3002d03eb001506d2002c05830015059f
007d04a5007206da000a056d000a06da000a056d000a0239008c073b0017
05acffff059d009a04c80088059d00200515001905c7009604d5008805c7
009604d50088059f007d04a5007206aa009105eb009b02aa001a05c70000
0473004905c70000047300490800ffaa071d0058055600950473004105cf
00590473004c073b001705acffff0503002c03fa00180503002c04360022
05c0009904eb008c05c0009904eb008c0639005904e300520639005604e3
005205b10057046b003804fa00000473000e04fa00000473000e04fa0000
0473000e059f007d04a5007207d5009d06d5009505c0005e04e30054083e
005e077a005407ad004606c4004305430046044a0043081a002007a50019
08430096076600880639006204b000520620002d059b00150000ff430000
fec90000ff770000ffb00000ff470000ff560000ff740000fed70000feac
000000000000ff520000ff56000000000000feac0000fd9a000000000000
ff6a0000ff7c0000ff690000ff560000feac0000ff7f0000ff560000fdef
0000ff430000ff690000ff7c000000000000fdae0000ff8c000001020000
feef0000feef0000fefd0000fef90000ff530000fef80000fef905c70000
0473004905c7009604e3008705c7009604e3008705c7009604e3008705c7
00610473005505c7009404e3005405c7009404e3005405c7009404e30054
05c7009404e3005405c7009404e300540556009504730041055600950473
004105560095047300410556009504730041055600950473004104e30097
02aa00180639006204e3005405c7009604e3009205c7009604e3009205c7
009604e3009205c7004e04e3003b05c7009604e300920239ffd20239ffd2
0239001b0239ffce05c700990473008905c700990473008905c700990473
008904e3009d0239009304e3009d0239ffeb04e3009d0239ffdd04e3009d
0239ffcb06aa0091071d007e06aa0091071d007e06aa0091071d007e05c7
009804e3009105c7009804e3009105c7009804e3009105c7009804e30091
0639005904e300520639005904e300520639005904e300520639005904e3
00520556009504e3008b0556009504e3008b05c70096031d008705c70096
031d008705c70096031d008705c70096031d00590556004a047300300556
004a047300300556004a047300300556004a047300300556004a04730030
04e3002c02aa001f04e3002c02aa001f04e3002c02aa001f04e3002c02aa
001f05c7009304e3008d05c7009304e3008d05c7009304e3008d05c70093
04e3008d05c7009304e3008d0556ffff0473000b0556ffff0473000b078d
000706390009078d000706390009055600000473000c055600000473000c
0556fffd0473000e04e300160400002204e300160400002204e300160400
002204e3009202aaffde063900090473000e047300490239008d04eb004e
04eb004e04eb004e04eb004e04eb004e04eb004e04eb004e04eb004e05c7
000005c7000006f3fff206f3000006f3fff206f3000006f3004306f30043
03cc004e03cc004e03cc004e03cc004e03cc004e03cc004e061efff2061e
000007aefff207ae000007aefff207ae000004e3008e04e3008e04e3008e
04e3008e04e3008e04e3008e04e3008e04e3008e068ffff2068f0000081f
fff2081f0000081ffff2081f0000081f0014081f00140239009002390090
0239ffb60239ffc40239ffde0239ffec0239ffb30239ffc00301fff20301
00000491fff2049100000491fff204910000049100140491001404e30052
04e3005204e3005204e3005204e3005204e30052069dfff2069d00000855
fff20855000007c9fff207c9000004a8007604a8007604a8007604a80076
04a8007604a8007604a8007604a800760682000007fe00000862000007ae
fff306c2004e06c2004e06c2004e06c2004e06c2004e06c2004e06c2004e
06c2004e06cefff206ce00000886fff20886000007fafff207fa000007fa
fff307fafff304eb004e04eb004e03cc004e03cc004e04e3008e04e3008e
0239ffe70239008d04e3005204e3005204a8007604a8007606c2004e06c2
004e04eb004e04eb004e04eb004e04eb004e04eb004e04eb004e04eb004e
04eb004e05c7000005c7000006f3fff206f3000006f3fff206f3000006f3
004306f3004304e3008c04e3008c04e3008c04e3008c04e3008c04e3008c
04e3008c04e3008c068ffff2068f0000081ffff2081f0000081ffff2081f
0000081ffff3081ffff306c2004e06c2004e06c2004e06c2004e06c2004e
06c2004e06c2004e06c2004e06cefff206ce00000886fff20886000007fa
fff207fa000007fafff307fafff304eb004e04eb004e04eb004e04eb004e
04eb004e04eb004e04eb004e05c7000005c7000005c7ffd105c7ffdd05c7
000002aa00dc02aa00ca02aa00dc02aafff302aafff304e3008c04e3008c
04e3008c04e3008e04e3008c06e6000006e60000075700000757000005c7
009602aafff202aafff202aafff30239ffe50239ffdb0239ffce0239ffce
0239ffc20239ffbb0239ffe80239ffde03c9000003c9000002aa000002aa
000002aafff304a8007604a8007604a8007604a8007604f3007604f30076
04a8007604a800760556fffd0556fffd06e6ffd8074affdd061e000003b8
fff403b8fff402aa002a06c2004e06c2004e06c2004e06c2004e06c2004e
0765ffd1069dffdd0796ffd106ceffdd066a006202aa00bb02aa00dc0473
000a05c7006105c70061071d007e05c7002109cd0096078d000705c70020
04e3002d08b000140400003004c100660000ff530000ff530000ff530000
ff530239001b0239ffa2047300000556001206b3005403fe005706ab0091
040c001f05d6ffe605d6ffe602aa008402aa008402aa00c902aa00c902aa
009102aa002a02aaffc502aaffc302aafff302aa00c902aa00a902aa00a9
02aa00a902aa00a9032e001e032e001e02aa003a0000ff730000ff9d0000
fec80000ff230000ff720000ff720000fee70000ff9d0000ff530000ff53
0000ff530556009504e3008b04b5000006350000071d006104eb000f0473
0055049900910499001b0401008c03fa001802390093040f00490476008e
039e000e05eb009b04eb008c04e300520473003404f1005204f1005204f1
0021078d00540492004b04e3005304e3005304e9008c04abfffb04abfffb
03eb001504a8007604e300510624005104e000510473000b063900090400
002203df002203f2004b04ec0014035500880473001204d5008804e9008c
060700760515001903e300000591000003a2003203a2000003a300320355
00320355003204030032037c00320172005502de003203b00032031e0032
04220032037700320378003204260032037a0032035b003203ac00320377
0032037b00320514000003050032030500320321003204b6003203210032
03210032030200320302003202cf003202cf0032032000320121003202ca
00320484003402f2003203480032030a0032034900320349003203200032
01bc000a02f20032034200320484003202e90000034c000a031b003202e9
00000343003203da003203080000012100320204003202f2003202e90000
031b003202e900000342003203da00320308000005ed00460a9800460613
00460689ffba0541ffba01e9001e045400100000ff0d0000ff350000fece
0000feb70000fec90000ffc70000ff4f0000ff9e0000fef002be006902be
00690376000a0376000a03c0ffba039cffba03c0ffba039cffba05c80039
05920032061600820519004b05240041060f008705580028068f002d04ac
00550000fe3b0000fe660000fe680473fffc0400008403d5ffba01e0ffba
01e0ffb101e0ffba01e0ffba06d0002e0984002304000000080000000400
00000800000002ab000002000000015500000473000002390000019a0000
00ab00000000000005e5fff705c7006106aa009105eb009b0760008d07a1
005407a1005b05c7000005c700610473001404e3001104e3002c04730039
0400002205290042000001010000ff420000fead0000ff3a0000ff5304f3
000a05c7006905c7006105c70069048900a4035500880000ff430000ff01
0000ffac0316007d0000ff370298ffba033d001e0000ff3a0000ff480000
ff490000ff7e0000ff4f0000ff4a0000fe9e0532003905320039022cffb6
022cffb60532003c0532003c022cffba022cffba0532003905320039022c
ffba022cffba0532003905320039022cffba022cffba0532003905320039
022cffba022cffba0532003905320039022cffba022cffba053200390532
0039022cffba022cffba049e0034047800300430ffba0430ffba049e0034
047800300430ffba0430ffba02be004f02be004f02be006902be00690376
000a0376000a073200400732004004deffba04deffba0454003403c00046
0454ffba02e2ffba0454003403c000460454ffba02e2ffba0454003403c0
00460454ffba02e2ffba0610002f0610002f0270ffba0298ffba0610002f
0610002f0270ffba0298ffba060e00290708002902e2ffba0456ffba060e
00290708002902e2ffba0456ffba060e00290708002902e2ffba0456ffba
02e2002102e200210352ffba0352ffba02e2002102e200210352ffba0352
ffba0454003e0454003e022cffba022cffba0454003e0454003e022cffba
022cffba0454003e0454003e022cffba022cffba039c0023039c002301e0
ffba01e0ffba0376000a0376000a0376000a0376000a0732004007320040
04deffba04deffba04e3ffc104e3005402aafff3071dffc104e3ffd504e3
ffc5031dffc1031dffc10473ffff02aaffda0400002104e3008302f00032
04dc004e06fb001f0239001b0239001b04e3001404a8001404f8001404e3
008704e3005402aa0018062500540473008902390070071d007e04e30091
04e3008b031d00660473003003baffc40473000b0473000c040000220473
004904e3005404e300540473004103fa004f03fa0018053e005102390093
0473003402aaffc404e3008d0436002203210032030a0032030a00060348
003202cf003201f0000a01f000000320003202f100320174000a01210032
012100320174000a02760000018e00320150003202490032048400340484
0032035f0000035f003202fa003203480032040300320302003202390000
01bc000a0340000a035e003202ea003202ea003202e9000002e4003202e4
003203be0032030a003202e800320000fe920000fe920000ff730000fe9f
02aa00c903050032030200320348003202ee0000030200320639006205c7
00000556001e05c7006102aa004104eb004e04eb004e04eb004e04eb004e
04eb004e04eb004e04eb004e04eb004e0239ffb60239ffb60239ffc40239
ffc40239ffb60239ffb60239ffc40239ffc404a8007604a8007604a80076
04a8007604a8007604a8007604a8007604a800760239ffc90239ffc90239
ffc90239ffc904a8007604a8007604a8007604a8007603e400220454001a
03df003005c7fffd05c70016055600000556009504730041047300230239
ffa20633005904e3005b05c70000031d001b0556fffd0473000e04730034
047300550473003402390093048900110355001b055600000473000c0556
00000473000c0503006f03fa004f059d0020051500190000fec60000fed4
0000fec60000fed40000fe5f0000fe5f0000ff720000ff730000fee70800
00000401005d0473003404e300110239001b04e300060556fffd05c70096
0473004902aaffcd05c7009604e3009205c700990473008904e300160400
00220473002804540096037c008805b9004e0000ff530000ffbc0000fefe
0000fefe0000fea40000fea40239009305c9009c05c7009805c9009c0000
fee00000ff300000fed40000fed50000fec00000fed00000fed80000fed8
0000fed80000fed80000fdc60639005904e3005b078d00070639000905b9
00910000fe9b061b005904d90006085b000706de000602aa00c9031c0055
01e7005c01e7005c040000990400009902aa00b802aa00b802aa00b802aa
000304e3002c0473002b000000000000006c0000006c0000006c0000006c
0000011a000001ba00000388000006300000079600000948000009a80000
0a3200000abc00000bf000000c6c00000cdc00000d2a00000d6800000dbe
00000ec200000f44000010ea000012420000135c000014ce000016020000
16be0000185c000019a2000019fc00001a8800001b1200001b9400001c22
00001d1000001ea40000201e00002186000022c0000023aa000024680000
25040000264a0000271e000027a60000284400002a0e00002a6a00002cbe
00002ebc00002fc4000030940000322e00003392000035f2000036880000
3768000038a200003ae400003c6000003d5600003ee800003f5c00003fb0
00004018000040ca000040fe00004162000043700000446c000045a80000
4698000048a4000049a400004b8000004c8000004d2200004dfa00004f26
00004f920000514600005230000053200000541c0000551e000056020000
594800005a6800005b5000005ca400005ec00000609600006214000063a2
000064ca00006530000066680000673000006772000067b2000067ee0000
68340000687c000068cc000069100000694a0000697a000069aa000069ec
00006a2e00006a6000006aa400006af000006b3a00006b6a00006bb00000
6bec00006c2c00006c6800006ca000006cf000006d2c00006d6800006d98
00006dda00006e2a00006e7400006eac00006eee00006f2200006f9a0000
7020000071cc000073380000752e00007578000076120000776000007950
00007b0400007c1e00007c8000007cd800007db800007eea000080620000
818a0000825000008326000083e60000858a000086460000872800008806
0000886c00008900000089c400008b0000008b9800008cd800008f7a0000
910000009206000092a600009300000093e00000958e000096fa000097a4
000098980000997e000099f200009a2a00009a7000009aae00009c2a0000
9e4000009e7a00009eb000009f780000a04c0000a0bc0000a0da0000a17c
0000a2560000a2920000a2cc0000a3320000a4ca0000a5680000a5fa0000
a7560000a8800000a96a0000a9a80000a9b80000a9d60000abe00000ac22
0000ac700000acac0000acec0000ad3a0000ad780000adb60000adf00000
ae320000ae6a0000ae9a0000aed40000af180000af480000af900000aff2
0000b05e0000b10c0000b1400000b1b00000b1f60000b2ac0000b3460000
b3da0000b4420000b49e0000b5720000b63e0000b66e0000b69e0000b702
0000b7580000b7e00000b90a0000ba820000bab80000bae80000bbf00000
bcc40000bd000000be960000bf140000c0220000c1560000c3020000c490
0000c6d80000c78e0000c7d20000c8120000c8440000c8880000c8c40000
c9080000c9420000c9740000c9a60000cad60000cb0c0000cb360000cb82
0000cbc40000cbea0000cc100000cc460000cd840000cd9c0000cdc20000
cde80000ce260000ce560000ce860000cec40000cf820000d0340000d068
0000d0a00000d0dc0000d11a0000d1680000d19a0000d1cc0000d2080000
d2440000d2800000d2bc0000d2ee0000d31e0000d34e0000d3740000d398
0000d3d60000d54a0000d58e0000d5c60000d5fe0000d6340000d6840000
d6c60000d70c0000d75e0000d7aa0000d8bc0000d9c80000dab00000dba0
0000dca60000dd900000de000000df2a0000df7a0000dfaa0000e0a40000
e2d80000e3180000e3580000e3980000e3d60000e4340000e4920000e500
0000e5200000e5c00000e65a0000e6900000e6f40000e73e0000e7880000
e7a40000e7c00000e7e00000e8000000e8200000e8400000e8660000e88c
0000e8b20000e8d80000e9080000e9300000e9580000e9840000e9b00000
e9e40000ea0e0000ea3a0000ea700000ea9a0000eac60000eafc0000eb26
0000eb500000eb840000ebb40000ebe80000ec2c0000ec5c0000ec900000
ecd20000ed060000ed380000ed7a0000edae0000edde0000ee200000ee64
0000eeaa0000ef060000ef220000ef3e0000ef5a0000ef760000ef920000
f1000000f3aa0000f61a0000f6360000f6500000f66c0000f6880000f6a4
0000f6c00000f71c0000f7560000f7c00000f88a0000f92a0000fa000000
fa800000fb080000fb780000fc0e0000fc6c0000fcb20000fd100000fd72
0000fdb20000fe0e0000fe720000fee40000ff22000100b4000101c40001
01ee0001020a000102360001026e000102ba000102ea0001031a0001034e
0001037e000103ae000103de0001040e0001043e0001046e0001049e0001
04ce000104fe0001052e0001055e0001058e000105be00010748000108f6
000109260001095600010a4200010b5a00010b8a00010bb800010be80001
0c1600010c4600010c7400010c9800010cbc00010cf600010dd600010e26
00010e8c00010fd2000110040001102a0001105200011090000111660001
125e0001128e000112be000112ee0001131e0001134e0001137c000113ac
000113dc0001149e000115b2000115e20001161200011642000116720001
16a2000116d2000116f80001171e0001174e0001177e000117ae000117de
0001187e000118d00001199e000119ce000119fe00011a2e00011a5e0001
1a9000011ac000011af000011b2000011b5000011b8400011bb800011be8
00011c1800011c7600011ca000011e2600011f0e000120c2000123160001
254e000126ec0001274c000127d2000127e2000128a400012a4800012b1c
00012bf200012c7e00012da200012eb6000130280001305e0001306e0001
307e0001315800013168000131780001318800013198000131a8000132ae
000132be000132ce0001337800013388000133da000133ea000134de0001
34ee000134fe0001350e000135e0000136fa0001372e0001376200013792
000137c2000137f200013820000138540001393e00013a3400013b140001
3bde00013c9e00013cf000013e2200013f3600013ffa0001400a00014116
00014126000141f0000142ce00014396000144b4000145800001467e0001
46b0000146e4000147140001474400014774000147a80001488a000148ba
000149de000149ee000149fe00014a3200014a4200014b4800014c340001
4d0200014d3200014d6200014de200014df200014ea800014eb800014f10
00014fae00014fbe000151a0000152c4000153ea0001541a000155440001
55bc000155cc000155dc000155ec00015640000156500001566000015670
000157680001586600015876000158e200015970000159f800015a960001
5b5400015c3c00015cf600015e2000015f460001608400016094000161ba
000162a800016306000163d6000163e6000165cc0001671e000168020001
683200016948000169d200016b8c00016c1200016c2200016c8c00016c9c
00016cac00016d1600016d2600016e7a00016e8a00016f1400016fa00001
7030000170e00001719c0001729c0001735a000174600001756c0001769a
000176ce0001780a000178380001794e0001795e0001796e000179a00001
79b000017abc00017ba000017c9e00017cd800017d0800017da800017e06
00017e7600017eb200018048000180cc000181560001829e000183580001
8442000184920001851a000185e20001862000018672000186ce000187b8
0001880c0001884a00018882000188c00001890e000189560001899c0001
89f800018b4e00018bf000018d0600018d6400018e0000018e3e00018ef8
00018f6e0001906c000190a600019130000191ec0001928e000193140001
93e00001941e000194a600019574000196520001971a00019828000198de
000199ea00019a9c00019b2400019c2400019d0c00019d6400019dbc0001
9e1000019e5e00019ef60001a0020001a0460001a0840001a0cc0001a102
0001a16c0001a24c0001a2840001a2b20001a2ea0001a3180001a34a0001
a37c0001a3f60001a44c0001a5aa0001a64a0001a7680001a8180001a864
0001a9ba0001aa6a0001aa940001ab100001ab580001ac900001ad8e0001
adfc0001af7e0001b13c0001b2a20001b3b00001b3da0001b56a0001b6a8
0001b6d40001b7080001b7340001b7640001b8d20001b8fc0001ba0c0001
babe0001bb6e0001bc020001bcd00001be0c0001be1c0001be500001bf10
0001c0c80001c1a00001c20a0001c3300001c38e0001c4a00001c56e0001
c5fa0001c6780001c7540001c8940001c98e0001ca440001cb300001cbf8
0001ccd60001cda60001ce840001cf180001d1440001d16e0001d1980001
d1a80001d1d20001d30c0001d42a0001d53a0001d5640001d58e0001d5b8
0001d5e20001d60c0001d7f00001d81a0001d8440001d86e0001d8980001
d8c20001d8ec0001d9160001d9400001d9740001d99e0001d9c80001d9f2
0001db8c0001db9c0001dcd40001dce40001dd0e0001dd380001dd620001
dd8c0001df260001e1a00001e2fe0001e30e0001e4800001e4900001e5ee
0001e7d20001e8d40001ea5a0001ec240001ee780001efe60001f1da0001
f1ea0001f1fa0001f35e0001f3880001f3b20001f3dc0001f4060001f430
0001f45a0001f4840001f4ae0001f4d80001f5020001f52c0001f5560001
f5800001f5aa0001f5d40001f88c0001fa6c0001fbf60001fe360001ffae
0001ffd8000200020002003200020062000200b200020102000201420002
01b40002020800020266000202bc000202f2000203340002037a000203c4
000203f40002042c0002045c000205c200020908000209320002095c0002
0986000209b0000209da00020a0400020a2e00020a5800020a8200020aac
00020ad600020b0000020b2a00020b5400020b7e00020ba800020bd20002
0bfc00020c2600020c5000020c7a00020ca400020cce00020cf800020d22
00020d4c00020d7600020da000020e3800020ec800020ef20002127a0002
1384000214fc000216820002186400021a3800021c5600021c6600021e0e
00021fa60002221800022458000225d0000225e00002268c000227360002
2872000228820002294e0002295e00022b0000022ce800022e5400022e64
00022f6c00022f7c000230f6000231060002323400023244000233800002
35340002362c0002363c0002372e0002388c000239380002394800023a8a
00023c3800023d2e00023d3e00023de200023df200023eda00023eea0002
3fb400023fc4000240da000240ea000242b0000242c00002442e0002443e
000246b0000246c0000248d0000248e000024a5c00024a6c00024b9e0002
4bae00024d6c00024d7c00024ef200024f02000250700002508000025090
000250a000025260000252700002528000025290000253e0000255180002
56300002572a000258cc00025a5e00025bc600025d1400025eda00025eea
0002603c0002619e00026384000263940002651c000266c0000268fa0002
690a0002691a0002692a00026a9400026aa400026b7600026b8600026cbe
00026cce00026db400026dc400026efe00026f0e00026fc800026fd80002
70fe00027262000273d00002757e000276ae000276be000278380002797a
00027b9a00027d6c00027e7c00027e8c0002810e0002833a000286040002
886000028b2000028d6200028f200002907a000290a4000290ce000290de
000290ee00029118000291420002916c0002917c0002918c000291b60002
91e0000291f0000292000002922a000292540002927e0002928e0002929e
000292ae000292be000292ce000292de0002930800029318000293280002
93520002937c000293a6000293d0000293fa000294240002944e00029478
000294a2000294cc000294f6000295200002954a000295740002959e0002
95c8000295f20002961c00029646000296700002969a000296c4000296ee
00029718000297420002976c00029796000297c0000297ea000298140002
983e0002986800029892000298bc000298e6000299100002993a00029964
0002998e000299b8000299e200029a0c00029a3600029a6000029a8a0002
9ab400029ade00029b0800029b3200029b5c00029b8600029bb000029bda
00029c0400029cac00029cf000029d6600029d9000029dba00029de40002
9e0e00029e3800029e6200029e8c00029eb600029ee000029f0a00029f34
00029f5e00029f8800029fb200029fdc0002a0060002a0300002a05a0002
a0840002a0ae0002a0d80002a1020002a12c0002a1de0002a2120002a246
0002a27a0002a3fe0002a57e0002a6ea0002a8380002a8f80002a9ba0002
aa2c0002aafe0002abd00002ac420002ad060002adf80002aebc0002afae
0002b0540002b1600002b1f20002b33a0002b4780002b4dc0002b6040002
b7d20002ba1a0002ba860002baf20002bb5c0002bbc80002bc760002bd24
0002bdca0002be700002bf160002bf460002bf760002bfa60002bfb80002
bfca0002bfdc0002bfee0002c0000002c0700002c0e20002c1120002c124
0002c1360002c1460002c1560002c1680002c17a0002c18c0002c19e0002
c1b00002c1c20002c2ce0002c3740002c4800002c5260002c57e0002c5a4
0002c5ca0002c5f40002c6220002c66c0002c6c80002c7020002c75a0002
c79a0002c7ea0002c8220002c8780002c8ba0002c8fa0002c94c0002c9be
0002ca080002ca740002cab40002cb200002cb600002cbc80002cc0a0002
cc5e0002cc840002ccaa0002ccd40002cd040002cd340002cd640002cdb2
0002ce0e0002ce4c0002cea60002ceee0002cf440002cf880002cfdc0002
d0220002d0640002d08a0002d0c00002d0e60002d10c0002d1320002d158
0002d1860002d1b00002d1fa0002d2560002d2900002d2e80002d3280002
d37c0002d3b40002d4040002d4460002d4860002d4c00002d4fc0002d538
0002d5740002d5a20002d5cc0002d60a0002d63a0002d6600002d6860002
d6ac0002d6d20002d6fc0002d7260002d7660002d7b20002d7f80002d830
0002d85a0002d8840002d8b40002d8e40002d90a0002d9300002d95a0002
d9840002d9b60002d9e80002da180002da480002da780002daa80002dad8
0002db060002db360002db660002db960002dbc60002dbfa0002dc5a0002
dc8e0002dcf20002dd260002dd860002ddba0002de1e0002dec60002df96
0002e0ac0002e17e0002e1f80002e2660002e4480002e6120002e7320002
e8440002e9880002ea9c0002eb2c0002ebac0002ec400002ecc20002ed82
0002ee220002eeee0002efd40002f08c0002f1580002f1d40002f1e40002
f2b20002f3720002f43c0002f4f00002f5e60002f65c0002f7840002f89e
0002fa260002faa80002fb980002fc8e0002fd860002fe180003002a0003
01ba00030240000303c20003042e0003049800030506000306cc00030894
0003092400030970000309ae000309f000030a3800030a6400030aaa0003
0ae000030b1c00030b5a00030b9800030c2000030ca800030cea00030d22
00030d5c00030d9600030dbe00030de600030e2a00030e6e00030eac0003
0eea00030f1a00030f4a00030f7000030f9600030fd80003101a00031060
000310a6000310fe00031156000311b20003120e0003126a000312c60003
1314000313620003138a000313b2000313d8000313fe0003144200031486
000314d20003151e00031568000315b2000316000003164e0003168e0003
172e000317540003177a000317c4000318340003185c00031884000318ca
0003191000031966000319bc00031a0a00031ac400031aec00031b140003
1b6800031bbc00031bfc00031c3c00031c6200031c8800031cee00031d54
00031d9600031dd800031dfe00031e2400031e7a00031ed000031f2c0003
1f8800031fdc000320300003207e000320cc0003211600032160000321ba
0003221400032268000322bc000322fe00032340000323de0003247c0003
24c60003251000032562000325b40003261a00032680000326d800032730
0003275c00032788000327b4000327e00003280c00032838000328640003
2890000328b6000328dc000329080003293400032982000329d000032a1c
00032a6800032ab800032b0800032b8200032be400032c5c00032ca60003
2e3800032e6c00032ea000032ed600032efa00032f6400032fce00033050
000330b8000331000003314800033194000331fe000332260003324e0003
32740003329a000332ea0003333a000333ce000334200003347e000334dc
00033542000335a80003368e0003379e0003386c00033966000339d20003
3a3800033a9600033af800033b7e00033c0400033c6a00033cd000033d3c
00033da800033dfe00033e5400033e8600033eb800033ede00033f040003
3f7000033fd60003403400034096000341a8000342b4000343c2000344c6
000344ec00034514000345380003455c00034584000345ac000345d20003
45f80003471a000348560003498400034ab000034b6a00034c2400034ce4
00034da400034e8800034f6c0003506800035164000352480003532c0003
5402000354d8000355220003556c00035592000355b80003560800035658
0003567c000356a00003577600035786000357da0003582e0003588c0003
58ea0003592a0003596a000359b4000359fe00035a4e00035a9e00035af4
00035b4a00035b9c00035bda00035c5400035c9600035cda00035d680003
5df600035fa800035fb800035ff20003602c0003605c0003608c000360c0
000360f40003612e00036168000361bc0003621000036272000362d40003
64840003660c0003664800036680000366ca000367140003675a000367a0
000367f000036a1600036a3c00036a6200036ab600036d6000036e320003
6ece00036f1c00036f5a00036f8c0003717a00037436000375080003766c
000377a600037852000379e800037c3c00037e7800037ed200037f180003
7fe6000380d8000380f6000381a0000382c6000383a2000383b400038514
0003869a000386c00003877e0003879c000387c2000387e80003880e0003
88340003885a00038880000388a6000388cc0003891800038978000389a0
000389c600038b2400038d0000038d1000038de000038ef000038f4e0003
9066000391f40003929a000393e00003943200039484000394bc00039508
000395340003957a000395a6000395e20003963c00039686000396d20003
9742000398080003988400039944000399bc00039a9600039b2600039b60
00039b9c00039d1400039e0400039e4e00039e9400039fde0003a0ee0003
a0fe0003a2080003a2ee0003a4000003a4cc0003a5e20003a7200003a730
0003a8080003a8ca0003a9ca0003ab240003ab840003ad080003ad7c0003
aed00003b0380003b11c0003b16e0003b1d60003b3600003b4d60003b55e
0003b7020003b7f20003b9160003b9b80003baa20003bb8c0003bc840003
bd6c0003be9e0003bfe40003c1860003c3420003c3520003c4560003c588
0003c6320003c7460003c7d20003c9420003ca0a0003cafc0003cc4a0003
cd620003cf080003d0480003d19a0003d2be0003d4700003d5f80003d6f2
0003d7c80003d9240003d9e40003da1a0003da820003db560003db660003
dbc60003dc220003dc7c0003dcb40003dcf20003dd3c0003dd780003ddb6
0003de000003df120003df640003dfc00003e06c0003e0940003e1040003
e1340003e1660003e3100003e4360003e4700003e4a00003e4ec0003e51e
0003e5440003e56a0003e5ac0003e5ee0003e61e0003e64e0003e6920003
e6d80003e7160003e7500003e78a0003e7ba0003e8760003e9300003e972
0003e9a20003e9d60003ea120003ea420003ea720003eaac0003eae40003
eb140003eb480003eb7c0003eba40003ebd40003ec040003ec380003ec70
0003eca00003ecd00003ed100003ed420003ed7e0003edb00003edf00003
ee2a0003ee5a0003ee8a0003eeb00003eed60003eefc0003ef2c0003f044
0003f1420003f1720003f1a40003f2480003f3ee0003f5580003f6460003
f7b00003f7e00003f8100003f8480003f8800003f8d20003f92e0003fa20
0003fa480003fab60003fae60003fb160003fb3e0003fbb00003fbe00003
fc160003fd760003fe380003ff140004003800040130000402800004039c
000404ba000405be00040720000408c600040a5e00040c6a00040da00004
0e3a00040fa800040fb800041086000412480004144a000414fc000415da
000416f4000417a4000418000004185a0004193000041a1600041aa60004
1c1e00041d1c00041e1e00041f520004203000042116000421b6000422c0
000423e8000424dc000425c400042640000426bc000427680004281a0004
28f80004296e000429c200042b3400042cb400042eb200042f7600043048
0004313000043266000433320004343a000435540004363c0004370c0004
37ea0004398400043aa000043b7a00043cee00043ee200043ff8000441a6
00044238000442da00044368000444060004450a0004451a000446740004
4784000447940004486e00044992000449f200044b1200044be000044cc2
00044eaa000450b80004538e000455c8000457560004598000045b280004
5d0a00045e6400045fd00004605200046106000461f4000462a00004630c
0004638e00046466000465aa0004671c0004682a0004683a0004684a0004
68ac000469100004696e000469fc00046a8800046b4e00046be800046bf8
00046c0800046ca200046d4200046d8800046dfa00046e6c00046eba0004
6eee00046f6000046fd0000470440004709400047128000471b800047236
000472ba0004735600047382000473f0000474a2000475b0000475fc0004
77c6000478b2000478c2000478f80004793c00047980000479c4000479fa
00047a2c00047a6e00047ac400047b1000047bbe00047c3600047cc00004
7d3400047d9a00047e2000047e8000047eea00047f6200047fd600048034
000480de0004817a000481ea0004827c000482da0004834c000483fa0004
84a40004853e000485b200048638000486a00004875000048812000488c2
00048958000489ba00048a2a00048a8000048b0200048b8400048c0e0004
8c9e00048cf800048d6400048dd400048e4600048eba00048f4200048fd6
00049040000490ba0004913a000491b20004925c000492f80004938c0004
93ee0004949000049510000495a60004964e000496fc00049798000497f8
00049850000498bc0004996600049a1400049ae200049b8c00049bf20004
9c4a00049cae00049d4000049dca00049e5c00049ec000049f2800049f92
00049ffa0004a0660004a0e20004a16e0004a2060004a2720004a2da0004
a33e0004a3ee0004a4b20004a5640004a5f60004a6580004a6c80004a73c
0004a7e40004a88e0004a9560004a9fc0004aa640004aaf80004ab6e0004
ac0a0004ac8c0004ad0a0004ad7a0004ae0c0004ae680004aeca0004af54
0004afd40004b03c0004b0a40004b0fc0004b16a0004b1d20004b2540004
b2ce0004b34c0004b3d00004b42c0004b4920004b4fa0004b59e0004b644
0004b7060004b7ba0004b81a0004b8960004b8f80004b9860004ba220004
bab40004bb1e0004bb800004bc120004bc880004bd260004bdbe0004be32
0004bea60004bf220004bf800004bfe40004c0620004c0c00004c1240004
c1820004c1e20004c24a0004c29e0004c2d40004c3200004c3840004c3c4
0004c40e0004c4b80004c5600004c5b60004c5ee0004c63e0004c6ee0004
c79c0004c7ee0004c8420004c89a0004c8ea0004c9420004c9a80004ca08
0004caa80004cb4c0004cb8a0004cbf00004cc8e0004cd220004cdb40004
ce5a0004ce8c0004cef40004cf5c0004cfa60004d0780004d0fa0004d1a2
0004d20a0004d2480004d2b20004d3580004d3ae0004d4020004d46e0004
d4d20004d5720004d5a40004d5d40004d6240004d6bc0004d6e60004d710
0004d7d80004d8320004d8d40004d93e0004d9ba0004da6a0004dae00004
db500004dba80004dc0e0004dc700004dd100004dd680004de340004dea0
0004defa0004df4a0004dfa00004e0400004e1060004e2520004e36e0004
e3d20004e4460004e76c0004e7fc0004e87c0004e8ca0004ea320004eb5e
0004eba60004eca20004ed6a0004ee480004ef3a0004eff40004f0ce0004
f1380004f1d00004f2a20004f3960004f4080004f4760004f4ba0004f5de
0004f6de0004f7d00004f8140004f8500004f93a0004fa3c0004fbbe0004
fcba0004fdbe0004fe520004ff3e0004ffa000050016000501a000050232
00050362000504520005057a000506b2000507760005085e0005091e0005
0a7200050c2400050db600050ef0000510560005112c000511ea000512a8
0005136e000514c600051616000516260005163600051646000516e20005
1780000517ce0005180c0005185200051882000519d200051b6e00051c80
00051da600051f32000520a40005215c0005221c0005230c000524080005
256800052692000528240005299600052b0e00052c7000052d7000052ea6
00052fc6000531180005320c0005335200053394000533d4000535300005
3652000537720005389400053a7800053bf400053c8000053cb000053cf8
00053d8c00053e2600053f860005401800054088000540d6000541280005
42da00054518000546c8000547f2000548e8000549ee00054bc400054d7a
00054e7c00054f920005515800055346000554ee0005566a000557f00005
5950000559e800055a8400055ba200055cc800055dec00055f320005606e
000561c200056248000562c60005637a00056440000564ec000565b60005
66e8000568880005698a00056a8a00056a9a00056aca00056afa00056c6e
00056dde00056ea000056f62000570440005711c000571d0000572a40005
734e000574140005759600057746000577b0000577e0000578080005783c
000578700005788000057890000578c0000578e6000579220005795e0005
7992000579c6000579fa00057a3000057b5600057b6600057b9600057bc6
00057bfa00057c3200057c6600057c9a00057cce00057d0200057d360005
7d6c00057d9c00057dd200057e0600057e4000057e9000057eda00057f0e
00057f4200057f7800057fae00058062000580720005817c000582e80005
8452000585f200058738000588900005898200058a8c00058b7000058c70
00058d9600058e8200058f3e00059000000590e8000591a20005926c0005
92f4000593a200059434000594b2000595cc0005963800059700000597fc
0005986a000598da0005999200059b7600059c8400059d0a00059d500005
9e1800059ea800059f920005a03e0005a0ac0005a1b40005a2a00005a360
0005a3a60005a4380005a5460005a5e20005a63e0005a7340005a82e0005
a9b00005ab140005ac120005acfc0005adca0005adf20005ae1a0005ae4a
0005ae7a0005aea20005aeca0005aef20005af1a0005af740005afde0005
b0100005b0400005b0660005b08e0005b0b60005b0e00005b10a0005b132
0005b15a0005b1800005b1ac0005b2360005b25e0005b2e00005b3080005
b32e0005b3540005b37a0005b3cc0005b4200005b4520005b4820005b4b4
0005b4f00005b5200005b5560005b57c0005b5a20005b5d60005b60a0005
b64a0005b6900005b6b60005b6dc0005b7020005b7280005b7520005b7b6
0005b8020005b8340005b8620005b8980005b8d60005b8fe0005b9240005
b94a0005b9940005b9d60005b9fe0005ba240005ba500005ba760005bad2
0005bb020005bb320005bb620005bb880005bbb20005bbe20005bc120005
bc380005bc5e0005bc840005bcaa0005bcd00005bcf60005bd1e0005bd96
0005bdc00005be2a0005be520005bef60005bf1e0005bf9a0005bfce0005
c0100005c0400005c0700005c0a00005c0d00005c0fc0005c1220005c16a
0005c1ac0005c1d80005c2000005c2300005c2600005c2860005c2ac0005
c2d80005c38c0005c3b40005c4640005c4a60005c4e80005c5180005c54c
0005c5720005c59a0005c5c00005c5e80005c60e0005c6360005c65e0005
c6860005c6ac0005c6d20005c6f80005c71e0005c7460005c7ce0005c802
0005c8680005c8980005c8c80005c8ee0005c9140005c94e0005c9920005
c9c40005ca000005ca300005ca600005ca940005cac80005caf80005cb2e
0005cb660005cb960005cbc40005cbee0005cc1c0005cc420005cc680005
cc9c0005cce20005cd1c0005cd580005cd8a0005cdba0005cdf60005ce32
0005ce6e0005ceb80005cf020005cf3a0005cf780005cfb40005cff40005
d0500005d0ac0005d1080005d1640005d1ce0005d2380005d2680005d2a0
0005d2e00005d3240005d3680005d3ac0005d4080005d4640005d4d00005
d53c0005d5a80005d6140005d6440005d6740005d6ac0005d6e40005d724
0005d7640005d7a00005d7dc0005d8380005d8940005d8f80005d95c0005
d9c00005da240005da820005dae00005db0e0005db3c0005db6e0005dba0
0005dbd20005dc040005dc420005dc800005dcf00005dd620005ddc40005
de260005de880005deea0005df420005df9a0005dfca0005dffa0005e02e
0005e0620005e0960005e0ca0005e1240005e1900005e1fa0005e2640005
e2cc0005e3340005e3640005e3940005e3c80005e3fc0005e43c0005e47c
0005e4b80005e4f40005e5480005e5ae0005e6020005e6500005e6800005
e6b00005e6e40005e7180005e74c0005e7800005e7b80005e7f00005e84c
0005e8a20005e9020005e9620005e9b80005ea0e0005ea680005eabc0005
eaf20005eb240005eb620005eb920005ebc20005ec0c0005ec3a0005ec6a
0005ecb00005ece80005ed240005ed680005ed9c0005edcc0005ee160005
ee6a0005eec00005ef160005ef7a0005efde0005f0300005f0860005f0d2
0005f1240005f1900005f1fc0005f2680005f2d40005f3500005f3cc0005
f40e0005f4500005f4980005f4e00005f5320005f5840005f5d20005f620
0005f68e0005f6fc0005f7720005f7e80005f85e0005f8d40005f9440005
f9b40005f9f60005fa380005fa7c0005fac00005fb040005fb480005fb92
0005fbdc0005fc4a0005fcb20005fd240005fd960005fdfe0005fe660005
fed00005ff340005ff6a0005ffa00005fff00006001e0006006a000600a6
000600fc0006012c0006015c00060188000601b4000601da0006022e0006
029c000602f00006038c0006047e000604c0000604e60006054200060572
000605b40006061a00060688000606ee000607580006077e000608260006
08c400060a0400060a3200060a6000060ac400060b2800060b5600060b8a
00060bba00060bea00060c5a00060cd000060d7800060e1600060f520006
0f8200060fb2000610180006107e000610ae000610de0006110e00061144
00061174000611a4000611f000061250000612ac00061386000614600006
14d2000615180006153e00061580000615b0000615f20006162600061690
000616d60006174c00061772000617e2000618300006195000061be20006
1d7600061ece000620800006238e000626240006280c000629aa00062c02
00062d4400062f5a00062fca00063032000630a4000631160006319e0006
323c0006341a000635c8000637940006389400063a2800063b8800063c4c
00063d4200063daa00063e0c00063e7a00063ede00063fb20006401a0006
40e4000641a20006423e000642a000064336000643c800064464000644fc
00064562000645c00006462c0006469400064710000647be000648280006
4886000648e80006499a00064a1c00064a9e00064ad400064b0600064b16
00064b2600064c3200064d5a00064f7a000650cc000650dc000651960006
528c0006531600065326000653a60006541e000654400006550200065512
0006552200065532000655420006563e000657840006594400065b580006
5c4a00065cb000065d1400065dd600065de600065f8000065f9000065fa0
00066064000661800006625c0006626c0006627c0006628c000663e80006
65d8000666e8000666f8000667080006671800066728000667de000667ee
0006694400066a8000066b6e00066c7e00066d2200066d9000066e000006
6f1a00066f7e00066fc20006705000067210000672500006734400067410
000674dc0006756200067638000676d40006783c000678c0000679540006
7ace00067c4000067dc800067eac00068076000681600006824e0006837a
000684a0000685fa00068764000688a60006891e00068a5400068b4c0006
8c4a00068d4600068e2c00068eb600068f4000069032000690ee000691b0
0006925c000693520006942e00069532000696720006975a000698da0006
9a0800069b0c00069b5600069bc200069c8200069d5e00069e9c00069f84
0006a0d00006a1fe0006a3080006a3aa0006a4f60006a5b20006a6dc0006
a79e0006a7e60006a9e00006aa960006ac840006ade00006af7e0006b080
0006b0e60006b22e0006b2a60006b4360006b46c0006b4a20006b4f40006
b5460006b57e0006b5be0006b5f60006b6360006b7640006b7c60006b886
0006b93a0006b9dc0006ba740006baf00006bbfc0006bc5a0006bd880006
be380006bf060006bf400006bf7c0006c0040006c0c40006c1c00006c296
0006c2bc0006c2e20006c37a0006c38a0006c39a0006c3aa0006c3ba0006
c3ca0006c3da0006c3ea0006c3fa0006c40a0006c41a0006c42a0006c42a
0006c58e0006c59e0006c6120006c6ac0006c7ba0006c9140006ca740006
cc2e0006cdfc0006cfd00006d0540006d1720006d2bc0006d4640006d500
0006d5500006d5e60006d7040006d7540006d7e40006d90e0006d91e0006
da4c0006db5c0006dbd20006dc2a0006dd160006dd5c0006dd9c0006de38
0006de8c0006e00e0006e0ec0006e12c0006e1960006e2000006e2380006
e3800006e4760006e5840006e5bc0006e5f40006e61a0006e6400006e670
0006e6a00006e6c40006e6e80006e7140006e7400006e7860006e7cc0006
e7f80006e8240006e86a0006e8b00006e90c0006e9680006e98c0006e9b0
0006ea080006ea600006eaa60006eaec0006eb220006eb580006eb8e0006
ebc40006ec260006ec900006ecf00006ed500006ed9c0006ee6a0006ee92
0006eeba0006ef260006ef920006efe00006f02e0006f1340006f1440006
f18e0006f1d80006f2200006f2680006f2c60006f3280006f3820006f3d4
0006f4580006f4c00006f5340006f5a60006f62c0006f69a0006f70c0006
f7720006f7980006f7be0006f7e20006f8060006f83a0006f86e0006f894
0006f8ba0006f9260006f9920006f9fe0006fa660006fab80006fb0a0006
fb600006fbb20006fbda0006fc020006fc340006fc620006fcb80006fd0e
0006fd6a0006fdc60006fdec0006fe120006fe3e0006fe6a0006fec60006
ff220006ff460006ff6a00070020000700d6000702a8000702b80007031c
00070380000703cc00070418000705dc000705ec000706fa0007070a0007
0764000707be000708160007086e000708d2000709360007097a000709be
00070b5400070ce600070e3600071004000711820007133c0007146a0007
1562000717dc0007196000071b8800071d0400071d9000071ec8000720ec
0007217400072184000722f40007242000072588000726ce000728040007
290200072ad800072c8c00072d1c00072e6000072f4c0007309a00073188
0007337400073490000735b200073786000738f000073a9400073b9a0007
3cea00073e420007403800074214000743780007443c000745700007463a
00074744000748be000749b200074a9600074c3400074e0600074e160007
4ec400074f8e00074f9e00075066000751000007514c0007515c000751d6
000752aa00075306000753b6000753f80007552e00075624000757200007
5820000758be00075a0200075b4a00075d6a00075e0000075f0000076020
0007616800076224000762fe000763da000764a6000765a8000767540007
68740007699a00076a2800076ab800076bca00076c2a00076d1600076e82
00076fb4000770b00007719c000772c20007743a000775e0000777ac0007
78dc0007795e000779de00077a6800077ae800077b7200077c2e00077cd6
00077d8400077e2c00077ea600077f2a00077fa400078028000780de0007
818000078220000782c20007833e000783c400078440000784c60007857e
00078628000786ce00078776000788660007895a00078a3a00078b220007
8c1400078d0800078dee00078eda000790a200079204000792a8000793b8
0007947e0007948e00079582000796dc000797700007981a000798e40007
99b600079a9800079b3400079c1e00079d4400079d5400079e0e00079ec8
00079ed800079f800007a0260007a1140007a2020007a2de0007a3b00007
a5340007a6da0007a7740007a8100007a84c0007a88a0007a8c60007a904
0007a95e0007a9b60007aa100007aa740007ab000007acfe0007ad520007
ad620007adee0007ae720007aef60007afae0007b0be0007b27c0007b39a
0007b42a0007b4ce0007b57e0007b6600007b6e20007b7700007b8980007
b8e00007b9380007ba120007ba4e0007baac0007baea0007bb1c0007bb60
0007bba20007bbd20007bc940007bd400007be040007be5a0007bea20007
bf320007c0240007c09e0007c1560007c2080007c2580007c3300007c3dc
0007c4460007c4560007c4660007c4760007c4860007c5740007c5860007
c64a0007c7060007c8020007c94c0007c9900007c9d60007ca160007ca56
0007caa60007caf60007cb4c0007cba20007cbf80007cc720007ccd00007
cdd2000100000d5900f2003c008f000600020010002f00550000073c02c2
0005000200>
<0000005303ea0000000300000000006a00000000000300000001000a006a
00000003000000020008007400000003000000030058007c000000030000
00040014008e0000000300000005001800a40000000300000006001800d4
0000000300000007006200ec00000003000000080030000e000000030000
0009008a014e000000030000000d02aa01d8000100000000000000350482
0001000000000001000504b70001000000000002000404bc000100000000
0003002c04c00001000000000004000a04c90001000000000005000c04d4
0001000000000006000c04ec0001000000000007003104f8000100000000
000800180489000100000000000900450529000100000000000d0155056e
0003000104030002000e06c30003000104030004001a06d1000300010405
0002000a06eb0003000104050004001606f500030001040600020006070b
000300010406000400120711000300010407000200080723000300010407
00040014072b0003000104080002000c073f00030001040800040018074b
0003000104090000006a00000003000104090001000a006a000300010409
00020008007400030001040900030058007c00030001040900040014008e
0003000104090005001800a40003000104090006001800d4000300010409
0007006200ec00030001040900080030000e0003000104090009008a014e
000300010409000d02aa01d800030001040a0002000e076300030001040a
0004001a077100030001040b00020012078b00030001040b0004001e079d
00030001040c0002000807bb00030001040c0004001407c300030001040e
0002001007d700030001040e0004001c07e7000300010410000200120803
0003000104100004001e0815000300010413000200060833000300010413
0004001208390003000104140002000e084b0003000104140004001a0859
000300010415000200140873000300010415000400200887000300010416
0002000e08a70003000104160004001a08b50003000104190002001408cf
0003000104190004002008e300030001041b0002000a090300030001041b
00040016090d00030001041d00020006072300030001041d00040012072b
00030001041f0002000a092300030001041f00040016092d000300010424
0002000c094300030001042400040018094f00030001042a000200080967
00030001042a00040014096f00030001042d0002000a098300030001042d
00040016098d00030001080a0002000e076300030001080a0004001a0771
0003000108160002000e08a70003000108160004001a08b5000300010c0a
0002000e0763000300010c0a0004001a0771000300010c0c0002000807bb
000300010c0c0004001407c300a900200032003000310031002000540068
00650020004d006f006e006f007400790070006500200043006f00720070
006f0072006100740069006f006e002e00200041006c006c002000520069
0067006800740073002000520065007300650072007600650064002e0041
007200690061006c0042006f006c0064004d006f006e006f007400790070
0065003a0041007200690061006c00200042006f006c0064003a00560065
007200730069006f006e00200035002e0030003800200028004d00690063
0072006f0073006f0066007400290041007200690061006c002d0042006f
006c0064004d00540041007200690061006c002000690073002000610020
00740072006100640065006d00610072006b0020006f0066002000540068
00650020004d006f006e006f007400790070006500200043006f00720070
006f0072006100740069006f006e002e004d006f006e006f007400790070
006500200054007900700065002000440072006100770069006e00670020
004f006600660069006300650020002d00200052006f00620069006e0020
004e006900630068006f006c00610073002c002000500061007400720069
0063006900610020005300610075006e0064006500720073002000310039
003800320059006f00750020006d00610079002000750073006500200074
00680069007300200066006f006e007400200074006f0020006400690073
0070006c0061007900200061006e00640020007000720069006e00740020
0063006f006e00740065006e00740020006100730020007000650072006d
0069007400740065006400200062007900200074006800650020006c0069
00630065006e007300650020007400650072006d007300200066006f0072
0020007400680065002000700072006f006400750063007400200069006e
0020007700680069006300680020007400680069007300200066006f006e
007400200069007300200069006e0063006c0075006400650064002e0020
0059006f00750020006d006100790020006f006e006c0079002000280069
002900200065006d0062006500640020007400680069007300200066006f
006e007400200069006e00200063006f006e00740065006e007400200061
00730020007000650072006d006900740074006500640020006200790020
00740068006500200065006d00620065006400640069006e006700200072
00650073007400720069006300740069006f006e007300200069006e0063
006c007500640065006400200069006e0020007400680069007300200066
006f006e0074003b00200061006e00640020002800690069002900200074
0065006d0070006f0072006100720069006c007900200064006f0077006e
006c006f006100640020007400680069007300200066006f006e00740020
0074006f002000610020007000720069006e0074006500720020006f0072
0020006f00740068006500720020006f0075007400700075007400200064
0065007600690063006500200074006f002000680065006c007000200070
00720069006e007400200063006f006e00740065006e0074002ea9203230
313120546865204d6f6e6f7479706520436f72706f726174696f6e2e2041
6c6c205269676874732052657365727665642e417269616c426f6c644d6f
6e6f747970653a417269616c20426f6c643a56657273696f6e20352e3038
20284d6963726f736f667429417269616c2d426f6c644d54417269616c20
697320612074726164656d61726b206f6620546865204d6f6e6f74797065
20436f72706f726174696f6e2e4d6f6e6f74797065205479706520447261
77696e67204f6666696365202d20526f62696e204e6963686f6c61732c20
5061747269636961205361756e646572732031393832596f75206d617920
757365207468697320666f6e7420746f20646973706c617920616e642070
72696e7420636f6e74656e74206173207065726d69747465642062792074
6865206c6963656e7365207465726d7320666f72207468652070726f6475
637420696e207768696368207468697320666f6e7420697320696e636c75
6465642e20596f75206d6179206f6e6c792028692920656d626564207468
697320666f6e7420696e20636f6e74656e74206173207065726d69747465
642062792074686520656d62656464696e67207265737472696374696f6e
7320696e636c7564656420696e207468697320666f6e743b20616e642028
6969292074656d706f726172696c7920646f776e6c6f6164207468697320
666f6e7420746f2061207072696e746572206f72206f74686572206f7574
7075742064657669636520746f2068656c70207072696e7420636f6e7465
6e742e004e0065006700720065007400610041007200690061006c002000
4e00650067007200650074006100740075010d006e00e900410072006900
61006c002000740075010d006e00e9006600650064004100720069006100
6c002000660065006400460065007400740041007200690061006c002000
46006500740074038803bd03c403bf03bd03b10041007200690061006c00
20038803bd03c403bf03bd03b1004e006500670072006900740061004100
7200690061006c0020004e006500670072006900740061004c0069006800
610076006f0069007400750041007200690061006c0020004c0069006800
610076006f00690074007500470072006100730041007200690061006c00
200047007200610073004600e9006c006b00f6007600e900720041007200
690061006c0020004600e9006c006b00f6007600e9007200470072006100
730073006500740074006f0041007200690061006c002000470072006100
730073006500740074006f0056006500740041007200690061006c002000
560065007400480061006c00760066006500740041007200690061006c00
2000480061006c00760066006500740050006f0067007200750062006900
6f006e00790041007200690061006c00200050006f006700720075006200
69006f006e0079004e00650067007200690074006f004100720069006100
6c0020004e00650067007200690074006f041f043e043b04430436043804
40043d044b04390041007200690061006c0020041f043e043b0443043604
380440043d044b043900540075010d006e00e90041007200690061006c00
2000540075010d006e00e9004b0061006c0131006e004100720069006100
6c0020004b0061006c0131006e004b007200650070006b006f0041007200
690061006c0020004b007200650070006b006f011100e20323006d004100
7200690061006c0020011100e20323006d004c006f006400690061004100
7200690061006c0020004c006f006400690061000000b15480410d03ac00
af03ac0002001003ac002003ac00a003ac0003004003acb3070d3240b803
acb312143240b803acb2162b32b9ffc003acb23a3340b803acb32d943280
bc03ab005f0033ffc003abb2553340b803abb340443240b803abb3333b32
40b803abb32f313240b803abb2083340b803abb30714321f411a03ab002f
03ab0002000f03ab002f03ab004f03ab008f03ab009f03ab00bf03ab0006
001003ab00df03ab00ff03ab000303a803a2b2461f40b803a5b208330f41
1403a50001004003a500cf03a500ff03a50003002003a500af03a500ef03
a500ff03a50004ffc003a3b3090c3240b803a3b208330f411b03a3000100
0f03a3001003a3008003a300af03a300cf03a30005006f03a3009f03a300
ff03a30003009f03a200af03a2000203a203a1b2101f10410a039e007f03
9e0002039a000f0101001fffc00398b310143240b80399b30f1332404110
039500500395000200b0034d00c0034d0002006f0391007f03910002ffc0
034bb22d3132b9ffc0034bb30a0e32104110038b0020038b0080038b0003
00a0038b00010020038b0040038b0002ffc0038bb313163240b80383b20f
1132b9ffc0037bb2303432b9ffc0037bb310183250411403780001036503
6e0023001f037e036e001e001f0363036e001d001f03620364000d001fff
c00340b30f1032804110033f0001033f03150029001f034103160032001f
0344031a001b001fffc00375b20e1132b9ffc00375b2282a32410a034303
180032001f030f030d0034001f03080307b2321f20bb0340000100400388
b3090b3240b80388b2101532bd038503070014001f03800307b2171f0fbd
030a002f030a0002ffc00354b3090d3290410c035400a003540002001f03
6e0001009f036e00010040036eb2090b3241110345031c0016001f036b03
1d0015001f0346031e0015001f03a703a10046001f039db3261c1fc0bb03
93000100400392b3090d3240b8033eb2083340b8033eb30d0e32c0410903
3e000100b0038e00c0038e0002ffc00390b3263832004126032800300328
00020020037f0030037f00020010038a0030038a0050038a006f038a007f
038a009f038a000600000389003003890002002f037a0070037700900377
009f037a0004ffc00315b20f1032b9ffc00315b2242832b903190318b232
1f10bb031a0001ffc0031ab3090e3240b80318b2121332b9ffc00318b30c
0e323fbd0373004f0373000200400374b31718326fbb032a00010040032c
b3181b3240b80370b2090c32bd031703160032001fffc00316b20e1132bd
031c031e0016001f031d031eb2151fb0411f031e0001000f031f000102ca
02d00015001f02d302d5000d001f02cf02d0000d001f02cb02d0000d001f
02cd02d0000d001f02ce02d0000d001fffc002d0b3090c3240b802d2b309
0c32e0411c02e50001005f02dd009f02e5000202bb02c30030001f02da02
b80032001f02d902b9003f001f02d802b80064001f02b902b80033001f02
bab221c81fb802b8b321c81f40b8039bb20d1632b9ffc002c3b22b2f32b9
ffc002c3b21f2532b9ffc002c3b2171b32b9ffc002c3b2121632412502c2
02c1001c001f02d702c10024001f02c102c00022001f02bf02c00018001f
02c0027400c8001f02b50235003b001f02b40235003b001f02c402bc001e
001f02b702b60038001f02b3b20ec81fb802b0b207c81fb802afb206c81f
b802aeb200c81fb802afb2502f1fbc02ae02ab001a001f02adb2261a1fb8
02a8b326241f0fbb0235000102a50274b21d1f12410a02a1015801f4001f
02a000d801f4001f001202a2b237c81fb80290b2bc201fb9029002904018
374025402d40a6033025302d30a6032025202d203720a6204110028e0005
009f028b0001028b028b003700200289003002890040028900900289b204
37b041fd027400c0027400020080027400a0027400020060027400700274
0002000002740010027400020080027400f002740002003f0285004f0285
00020090027e0090027f009002800090028100040090027a0090027b0090
027c0090027d000400900274009002750090027700030070027e0070027f
007002800070028100040070027a0070027b0070027c0070027d00040070
0274007002750070027700030060027e0060027f00600280006002810004
0060027a0060027b0060027c0060027d0004006002740060027500600277
00030050027e0050027f005002800050028100040050027a0050027b0050
027c0050027d000400500274005002750050027700030040027e0040027f
004002800040028100040040027a0040027b0040027c0040027d00040040
0274004002750040027700030030027e0030027f00300280003002810004
0030027a0030027b0030027c0030027d0004003002740030027500300277
00030020027e0020027f002002800020028100040020027a0020027b0020
027c0020027d000400200274002002750020027700030010027e0010027f
001002800010028100040010027a0010027b0010027c0010027d00040010
02740010027500100277000300e0027e00e0027f00e0028000e002810004
00e0027a00e0027b00e0027c00e0027d000400e0027400e0027500e00277
b103d041c5027e00d0027f00d0028000d00281000400d0027a00d0027b00
d0027c00d0027d000400d0027400d0027500d00277000300300274004002
74000200c0027e00c0027f00c0028000c00281000400c0027a00c0027b00
c0027c00c0027d000400c0027400c0027500c00277000300b0027e00b002
7f00b0028000b00281000400b0027a00b0027b00b0027c00b0027d000400
b0027400b0027500b00277000300a0027e00a0027f00a0028000a0028100
0400a0027a00a0027b00a0027c00a0027d000400a0027400a0027500a002
7700030090027e0090027f009002800090028100040090027a0090027b00
90027c0090027d000400900274009002750090027700030020027e002002
7f002002800020028100040020027a0020027b0020027c0020027d000400
20027400200275002002770003028101580801001f028001290801001f02
7f00ec0801001f027e00d80801001f027d00b10801001f027c00a6080100
1f027b00820801001f027a00370801001f027700260801001f0275002008
01001f0274001f0801b21f370f41160235004f0235005f0235006f023500
9f023500af023500bf0235000700af023500cf023500df023500ff023540
22040f074f079f07af07bf0705af07e007020f064f069f06af06bf0605af
06e0060220411b020d0001005f02350001008f02350001007f023500ef02
350002002f0235003f02350002003f0234004f0234000202350235023402
344011ed20ef2a01cf2a01bf2a01af2a018f2a01410902470104001e001f
022000370201001f0158400c263e1fd8263e1f3726273e1fb8028eb6ec17
1fb226361fb801bcb226361fb80129402b26361fec26361fb126361fa626
361f8226361f3726361f3226361f2d26361f2526361f1f26361f37262a1f
b801584022263e1fd8263e1fbc263e1f27263e1f21263e1f20263e1f3700
161600000012110840b9020d01a6b3c50d0009b801bcb227281fb801bbb2
27301fb801b8b2274f1fb801b7b227621f410901b600270101001f01b500
2002ab001f01afb21fe41fb801adb21fe41fb801acb21fbb1fb801a8b21f
341fb8015db2272e1fb8015bb227cd1f410d0155001f0401001f0154001f
0401001f0153001f0201001f0152b21f561fb80151b21f291fb8012bb227
261f410d012a00270125001f0129015800e4001f0125001f0401001f0124
b21fe41fb80123b21f3b1fb80122b21f391f410d010800270801001f0106
002d0101001f0105001f0101001f0103b31fbb1fefb901580401400b1fed
1f931fec1fe41feb1fb80201b21fd920b80401b21fcf25b80156400a1fbc
2d9e1fbb1f411fb2410a01580401001f00b101580401001f00b001580401
b51fa625891f9bb901580125b61f991f2e1f8e2db80801b51f8d1f291f89
b901580401b21f8220b802ab40131f801f301f742de41f731f4a1f611f52
1f5d25b802abb21f5c1fbc0801001f0059015802abb61f5025891f491fb8
0125b21f4725b80401400b1f461f791f401f271f3920bc02ab001f003801
580401b21f372dbc0125001f003201580125b61f2c1f341f2a25b80801b2
1f5537b80111402a07f00790075b0742073b07230722071e071d07140812
0810080e080c080a080808060804080208000814b8ffe0402b0000010014
061000000100060400000100041000000100100200000100020000000100
0002010802004a00b013034b024b5342014bb0c063004b6220b0f65323b8
010a515ab005234201b0124b004b5442b0382b4bb807ff52b0372b4bb007
505b58b101018e59b0382bb00288b801005458b801ffb101018e851bb012
4358b10100858d1bb900010119858d5959001816763f183f123e11394644
3e113946443e113946443e113946443e11394660443e11394660442b2b2b
2b2b2b2b2b2b2b2b182b2b2b2b2b2b2b2b2b2b182b1db0964b5358b0aa1d
59b0324b5358b0ff1d594bb08153205c58b9020f020d4544b9020e020d45
445958b90470020f455258b9020f04704459594bb0e453205c58b9002002
0e4544b90027020e45445958b908420020455258b9002008424459594bb8
012553205c58b90026020f4544b90021020f45445958b90a0d0026455258
b900260a0d4459594bb8040153205c58b1d8204544b1202045445958b925
0000d8455258b900d825004459594bb8040153205c58b9015800264544b1
262645445958b923200158455258b9015823204459594bb02953205c58b1
1f1f4544b12d1f45445958b9010d001f455258b9001f010d4459594bb02f
53205c58b11f1f4544b1251f45445958b90135001f455258b9001f013544
59594bb8030153205c58b11f1f4544b11f1f45445958b91428001f455258
b9001f14284459592b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b65422b01b331757ec3456523456023456560
234560b08b766818b080622020b17e754565234520b003266062636820b0
03266165b075236544b07e234420b131c34565234520b003266062636820
b003266165b0c3236544b0312344b100c3455458b1c3406544b231403145
23614459b33f3c5841456523456023456560234560b089766818b0806220
20b1583c4565234520b003266062636820b003266165b03c236544b05823
4420b13f414565234520b003266062636820b003266165b041236544b03f
2344b10041455458b141406544b23f403f452361445945695342014b5058
b108004259435c58b108004259b3020b0a124358601b2159421610703eb0
124358b93b21187e1bba040001a8000b2b59b00c2342b00d2342b0124358
b92d412d411bba04000400000b2b59b00e2342b00f2342b0124358b9187e
3b211bba01a80400000b2b59b0102342b0112342002b2b2b2b2b2b2b2b00
b01243584bb035514bb021535a58b1262645b040614459592b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b737373737345b040614418004569444569
447373737473737374737473742b2b2b2b2b2b2b2b2b2b2b2b0073737373
737373737373737373737373737373737373747474747474747474747474
7474747474747474747575757374757575752b7300004bb02a534bb03651
5a58b1070745b040604459004bb02e534bb036515a58b1030345b0406044
b1090945b8ffc06044592b4569440174007373732b4569442b012b435c58
400a0006000702a006a00702b9ffc00274b31a1d326fbd0277007f027700
02ffc00277b22f3132b9ffc00277b322253240b80274b32f353240b80274
b3282a3240b80274b21a2132b8ffc0b3371a1d32b8ffc0b3251a1d32b8ff
c040112d1a1d329025902d9037a025a02da03706b8ffc0b6a61a1d321fa6
1fb8028eb22fa60300742b732b2b2b2b2b2b2b2b742b737459002b2b435c
58b9ffc002a1b21c1d32b9ffc002a0b21c1d322b2b592b73012b2b2b2b00
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b012b2b2b2b2b2b2b73742b2b
2b2b2b2b2b2b73732b2b2b2b2b2b732b732b2b2b742b2b2b73737373732b
73732b2b2b732b2b002b2b2b2b7374732b732b2b2b2b752b2b2b2b2b2b2b
2b752b2b2b2b2b732b2b2b2b7374752b2b7373732b2b2b732b737374752b
2b7374752b2b7374752b2b2b2b2b2b2b2b2b2b2b2b74752b000000>
[16305 15881 16201 16237 16041 16297 16209 16001 15793 15765 15761 16377 16369
15941 16197 16353 15877 16213 16113 15749 16297 16069 15697 16325 15493 16357
16161 16137 16133 14993 16209 13923 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd

2 0 3 <> Arial-BoldMT AddT42Char 
2 12228 51 <00020095000004f805ba000f001b007740250605b914b918034705016705
d605021211250d0e0e001b10250201020f00081627af070107b8ffc0b309
0b3407b8028c40161f1d301d601d701d801d051d100f2001200030000200
b8028bb31c3153182b4e10f45d3c4dfd3c4d1071f62b714ded003f3c3f3c
fd3c12392f3cfd3c3130005d71015d331121201716161514060607062323
1902333236363534262726239501db010e527eaa62974e6ac9c1a2af7643
5e4835a005ba1621ddaf87b8691115fdd704c2fe602e624150680d0a>Arial-BoldMT AddT42Char 
3 434 68 <00020049ffe8042e043e0023003201714068071a081c051d161a4a1b481c
4925db10df11093619461957266619672686269219931aa61ab91bc71ac8
1b0c06060d151606191627062915591977028602a606b506c6060cbf34d9
10021d243231112c0d24402b2e3424402228342440191d346f24fc240224
461db8ffc040300e0f343d1d01001d101db01df91d041d1d2c013300400e
0f340f001f0002005521401c113f21401b103f2140181a3421b80274b504
070c0d0a2cb8ffc0b31c113f2cb8ffc0b31b103f2cb8ffc0b3181a342cb8
02744040140b1e3126082909280d591f0c9f0c021f0c01ff0c010c400e16
340c1a4f340134600001008e300101013329215f1701df17014f175f176f
17031719336941182b4e10f45d71724dedf471ed5d4e105df62b5d71724d
edf4e4fd3c003fed2b2b2b3f3c3ffd2b2b2bf45d2be412392f5d712bb106
02435458b22f1d017159edb10602435458b90024ffc0b71b1d3454246424
025d2b595d2b2b2b111239030e103c3c3c313001715d005d710127363633
321616150314161721262726270606232226353436363736373534262322
060106060706151416333237363736350165ff2bd2cfbcb84b031b25feea
0b10070348a45da4bd569b92c54c506f4b54015e36ea243758444c453310
0b02e22e9a945989b7feb88c854c1c3719084646b2885a8d4b1c25201c51
453bfed2123218273c3b563226372465>Arial-BoldMT AddT42Char 
3 960 69 <00020087ffe8049405ba000f001c009db90012fff840310b39371b471b02
125606560a56165618591cf7070635043b0d3b13351b45044b0d4b13451b
940799090a0c0e010201001ab80274b2050714b8027440130b0b0f000a17
21081a701e011e10290203260fb80129400c01700080000200191d3f4118
2b4e10f4713c4dedfd3ce64e1071f64ded003f3c3fed3fed3f3c31300071
5d015d4358400b6606660a66166618691c055d59005d2b33112111363332
1211100023222627151314171633323635342623220687011982b2c2fefe
fdb95bb140123449795d838467658605bafdf094fee7fef9fef0feda5b59
9c022aa54f709fabb6a19d00>Arial-BoldMT AddT42Char 
3 1528 71 <00020054ffe8046105ba000f001c0090402d125906590a59125616561859
1c98079909f80909701e801e023a03340c3a1534194a03440c4a15441999
090914b80274b2050b1ab80274400e0b070e0f0001000a17290e0d2601b8
0129400f0f001a8f1e011e102108191d583c182b4e10f44ded4e1071f63c
4dedfd3ce6003f3c3f3c3fed3fed3130005d01715d4358400d6906690a69
1266166618691c065d592121350606232200111012333217112101141716
3332363534262322060461fefb41b15ab7fefbfec2b2820119fd122f447a
6188846764879c5b5901270108010e0119940210fc70aa4c6ea5a4b7a19f
>Arial-BoldMT AddT42Char 
3 1768 72 <00020041ffe80427043e0014001c01a3b90010fff840460b3999099a0d96
10a805a70abb09bb0db81a0808140148024706460a4f1ea80db606b61ac7
0ac80cd60ad80cf807f70d0d1c0f1c15401b1d3415400e11340f15bf15cf
150315b8ffc0b30f1e3f15b8ffc0b30e173f15b8028d400c0f0e12500e60
0e020e181201b8ffc0b6191b3401331200b8ffc0b31d203400b8ffc0b322
293400b8ffc0b32b2d3400b8ffc0b3181c3400b8ffc0400f0e0f34a00001
0000100002005f1212b80274b3040b1218b8027440240b070021012f1521
4f0e010e1a2f1e5f1e6f1e9f1e041e0f2108400d0f3408191d6941182b4e
10f42b4ded4e105df65d4dedf4ed003fed435c584014184028143f18401e
0f3f18401b103f18401c113f2b2b2b2b593ffd435c58b90012ffc0b32814
3f12b8ffc0b31e0f3f12b8ffc0b31b103f12b8ffc0b21c113f2b2b2b2b59
f45d712b2b2b2b2b435c58b90000ffc0b2123900b8ffc0b2173900b8ffb0
b3090a3e00b8ffc0b241213f2b002b2b2b59e42b1112395d435c5840140e
400f1e3f0e401c113f0e401b103f0e400e173f002b2b2b2b592f3cfd2b2b
722b2b3c0111333130015d71005d2b010506062320272635100033320003
211616333236132626232207061702fa011836e9affeeb85690114d3ed01
1206fd40038261425a270378565c3c3c0101522f9aa1b591dd0108012bfe
c7febd7d8b48016c7a7f43437300>Arial-BoldMT AddT42Char 
3 2292 73 <00010018000002e605d3001600b840323604012a04201020115904801805
0804bf180215161102141216110e130f00100e13010010021409080f0b01
5f0bff0b020bb80274400a0601110f1601ff160116b80274401e10000001
f00001000613140a09333f084f085008030828102f115f110211b8010440
0d0e132602145f00a016c0160216b8ffc0b6090c3416191778b902690018
2b4e10f42b713c4dfc3cfd3cfc5d3cf45d19e400183f3c3f5d713cfd5d71
3c3ffd5d7139320f0f0f0f313001715d005d133335343636333217072623
2206151533152311211123189c399975787326433e3d35d2d2fee79c0426
5086845324c41039514bddfcb7034900>Arial-BoldMT AddT42Char 
3 3280 76 <00020093000001ac05ba000300070077b90009ffc0403f110a3f40095009
028009b009c009d009ef09051f0960097f09a009b0090503060700050403
0f00014000d000e00003005d02010006050607040a0207260104b8ffc040
092124340419083f3c182b4e10f42b3c4dfd3c003f3c3f3c3f3cfd5d713c
0305103c3c103c3c313001715d722b1311211101112111930119fee70119
04b60104fefcfb4a0426fbda>Arial-BoldMT AddT42Char 
3 3958 79 <00010093000001ac05ba00030053b90005ffc04029110a3f400550050280
05b005c005d005ef05051f0560057f05a005b0050502010003000a020326
0100b8ffc040092124340019043f3c182b4e10f42b3c4dfd3c003f3c3f3c
313001715d722b3311211193011905bafa46>Arial-BoldMT AddT42Char 
3 4502 81 <0001009100000459043e0016009f4018071317135a08680804b804013408
34104408440fe9100506b80274401d11070e0d060c0b0b01000a02012616
0040202434af0001ff0001001a18b8ffc040162224349018a018027018f0
1802ef1801180a0b260c0eb80129b20d0d0cb8ffc0400f202434a00c01f0
0c010c19173f3c182b4e10f471722b3c4d10ed10fd3c4e105d71722bf671
722b3c4dfd3c003f3c3c103c3f3c3fed3130005d01715d21211134262623
2206061511211121153633321e02150459fee724513949742bfee701058b
d35d9a4f1f021eac65385084b2fe1f04269cb44368847b00>Arial-BoldMT AddT42Char 
3 4736 82 <00020052ffe8049a043e000d001900974048e801e708f713f71504c702e8
05021219051909025910561356165918970298069808970cb809d502db05
dc09d50ce705e706e80d10a708cb02cc06c308c60c057508890684080311
b80274b20a0b17b80274401404071439071a601b701b021b0e2100191a58
41182b4e10f44ded4e1071f64ded003fed3fed313000715d015d71435840
09691066126616691804015d59005d015d13341236333200151400232224
26251416333236353426232206528afd9cf10134fec9ec92fef78a012096
6e6e95956e6e9602228c01068afec7eff1fec384ffa89ea8a8a09ca8a800
>Arial-BoldMT AddT42Char 
3 4976 83 <0002008bfe6c0497043e0010001c009a402e3813481302123403390d3913
341b4403490d4913441bf91b095606560a591256165618591cf607f91b08
0100061ab80274b2050714b8027440160b0b100f0e1721081a701e011e11
290e0e0f26101001b80129400b700080000200191d3f41182b4e10f4714d
ed3c10fd3c10e44e1071f64ded003f3c3fed3fed3f3c3130015d005d0143
58400d6606660a691266166618691c065d59005d13211536363332001110
002322262711210114163332363534262322068b010633ae6ab90102fefc
b9588f4ffee701168e6662828663678804269c5064fedefefdfef6fed946
55fde903b9b3ab9db3a7a29f>Arial-BoldMT AddT42Char 
3 5486 85 <0001008700000337043e001000a84028970501090e01530566057505032f
12580e680e7012040a090f0c1f0c028f0cff0c023f0c4f0c020cb8027740
29070701000a0302060a28000910093009700904091a7f129f12025f127f
12af12d01204121000260103b80129400b02028001a001020119113fb901
1c00182b4e10f4713c4d10ed10fd3c4e105d71f65d194de400183f3c3f3c
3fed5d717239323130015d005d71004bb017534bb035515a58b10a323859
005d212111211536363332170726232206061101a0fee70105436b446059
57473d3b522f0426976b4435f52e41aafef1>Arial-BoldMT AddT42Char 
3 5714 86 <00010030ffe80410043e002a02c240c00611062308271711172398129814
9727952a09071446140212bb0db90ec721e523f80df62206290d550d650d
950b9712a722b90c07412340244426672264268712871486228324093726
4506460b4a0d4f0f462142220722242726370c352135223523352407060a
05110921180d270c22222223072422402c730c781479157629752a881584
2a9a15952ab422b4230d80018f178c18992aa92ab02c0617211640212334
16401c1f341f1601df16011633082150258f25022540181d34251a2cb8ff
c04017110a3f502c01302c012f2c012c1e213010011033012100b8ffc0b3
0f093f00b8ffc0b3110a3f00b8ffc04009090d3400192b78b8182b4e10fc
2b2b2b4dedf471ed4e105d71722bf62b714dedf471722b2bed00b1060243
54584035060101060116012622362146215401591764016917f6010a0117
02041a21220228130d0c02281a5f04010446280b501a011a4613073ffd5d
3ffd5d1112173911121739111217395d711bb90022ffcbb3282a3421b8ff
cbb3282a3422b8ffe0b31e243421b8ffe0b31f243422b8ffe0b3191a3421
b8ffe0401b191a346b0d0136224622980d9422c422d4220621220c0d0404
1a00b8ffc0b5191b34003301b8ffc0b3172d3f01b8ffb0b3090a3e01b8ff
c0b322253401b8ffc0401d1a1c3400013001400150010460018001f00103
00011001500160010401b8ffc0b313163401b80101404d0004015f04f004
020446280b1640191b3416331740172d3f1740090a3e174035373417402b
2e34174025293417401a1c340f171f175f176f170417551a402224340f1a
01501aff1a021a4613073ffd5d712bf45d2b2b2b2b2b2be42b3ffd5d71f4
2b5d71722b2b2b2be42b111217395d712b2b2b2b2b2b59313001715d0071
7171715d5d435c58b90024ffc940090b123f0f280b123f21b8ffecb60d39
0c140c3921b8ffecb20c3922b8ffeab10b39002b2b2b2b012b2b5900715d
132516163332373635342726272427263534363332161705262623220706
1514171604171615140623222630011a126e636d3725141549feac5b7eda
e5dad428fef7115f586f30201c2601c15958f4efd9fd012f2b5255281c2f
201514114b3e56998abc8e8b313e421f16231e151c664a4b8692d2b0>Arial-BoldMT AddT42Char 
3 6552 87 <0001001fffe80291059d001900cd402920002001230a290f3a0e4a0e590f
07191500180316150017121314011712021401180309070a070c18b80101
400f0017a017b017036017a017c0170317b80104b2150114b80274b30015
0607b80274400e0c0b092f0a2f00002f015f010201b80104402818032617
1255153f149f14af1403601480149014d014f01405001410142014301404
14191a78a0182b4e10f45d71724bb037534bb03b515a58b90014ffc03859
3c4dfc3cfd3cf45d3c10f419e400183fed3f3cfd3c10f45d71e411123911
330f0f0f0f3130015d011523111416163332371706232226262726351123
3533352511027ac00b271c274a18627c4c7a390b098181011a0426e0fe54
822b1c1bda2a335145319501cfe0d3a4fe89>Arial-BoldMT AddT42Char 
3 6840 88 <0001008dffe8045304260016009c401757116711960503090619063c023c
114b024b11e702070fb802744011040b16000a1514140a09061314261515
00b80129400e1640202434af1601ff1601161a18b8ffc040162224349018
a018027018f01802ef1801180a0b260908b8ffc0400f202434a00801f008
010819173f3c182b4e10f471722b3c4dfd3c4e105d71722bf671722b4ded
3c10fd3c003f3c3c103c3f3c3fed3130005d015d21350606232226263511
21111416163332363635112111034e3abd696baa4c01191f523f48722a01
199f55625eaa9602a0fe18e0653b4f75e401c0fbda00>Arial-BoldMT AddT42Char 
3 7072 89 <0001000b0000045a0426000b011b401505281a2f3407281a2f3406281a2f
3408281a2f3403b8ffd8b31a2f3404b8ffc040201a3a349a040106030b08
080a0c0b1501150212031a091a0a22002d0bc70b0c00b8fff040161d2034
0a00050b1400190b25002a0b34003a0b870009b10602435458b40a010d0c
04b8ffc0400b091734040100090106000a003f3f3c1112392b0111123939
1b40120b000a040b0a0909020201060b000a09390db8ffc040181c28340b
0d1f0d300d400d040d17171a100a3f0a4f0a030ab80230400b0402390b04
3f044f040304ba02300001ff80400f0c350001200140010301190cc4a018
2b194e10f45d2b184ded5ded10fd5d194e456544e65d2b184ded003f3c3f
3c103c103c12390112393959313001712b5d005d2b012b2b2b2b2b210121
13173637363713210101b7fe540127c83a17060e10ca0121fe5a0426fde2
b545162d2d021efbda00>Arial-BoldMT AddT42Char 
2 0 0 <00020100000005000500000300070042b40201fe0607b8023f4013000504
fe03000a0704fe010019080605fe0203bc0126000901b0011800182b10f6
3cfd3c4e10f43c4dfd3c003f3cfd3c10fc3cfd3c31302111211125211121
01000400fc2003c0fc400500fb002004c000>Arial-BoldMT AddT42Char 
Arial-BoldMT /CharStrings get begin
/space 3 def
/P 51 def
/a 68 def
/b 69 def
/d 71 def
/e 72 def
/f 73 def
/i 76 def
/l 79 def
/n 81 def
/o 82 def
/p 83 def
/r 85 def
/s 86 def
/t 87 def
/u 88 def
/v 89 def
end
Arial-BoldMT /Encoding get
dup 32 /space put
dup 80 /P put
dup 97 /a put
dup 98 /b put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 105 /i put
dup 108 /l put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
pop
end
%ADOEndSubsetFont
/KKJDLY+Arial-BoldMT /Arial-BoldMT findfont ct_VMDictPut
/KKJDLY+Arial-BoldMT*1 
[32{/.notdef}rp /space 47{/.notdef}rp /P 16{/.notdef}rp /a /b /.notdef 
/d /e /f 2{/.notdef}rp /i 2{/.notdef}rp /l /.notdef 
/n /o /p /.notdef /r /s /t /u 
/v 137{/.notdef}rp]
KKJDLY+Arial-BoldMT nf
KKJDLY+Arial-BoldMT*1 [14 0 0 -14 0 0 ]msf
179.97 34.55 mo
(People tested for filovirus antibodies)
[8.91789 7.784 8.55389 8.55389 3.892 7.784 3.892 4.6619 7.784 7.784 4.6619 7.78398 
8.55389 3.89203 4.3819 8.55389 5.44589 3.892 4.6619 3.892 3.892 8.2739 7.784 3.89197 
5.44592 8.55389 7.784 3.89197 7.784 8.55389 4.66193 3.89197 8.55389 8.55389 8.55389 3.89203 
7.784 0 ]xsh
/KKJDLY+Arial-BoldMT*1 uf
/KKJDLY+Arial-BoldMT uf
/Arial-BoldMT uf
gsave
59.04 358.56 mo
545.76 358.56 li
545.76 59.04 li
59.04 59.04 li
cp
clp
59.04 197.28 mo
103.92 197.28 li
103.92 358.56 li
59.04 358.56 li
cp
0 0 0 0 cmyk
f
.75 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
59.04 197.28 mo
103.92 197.28 li
103.92 358.56 li
59.04 358.56 li
cp
.75021 .679683 .670222 .90164 cmyk
@
63.41 225.11 mo
72.98 225.11 li
72.98 215.54 li
63.41 215.54 li
cp
.0116884 0 .19266 0 cmyk
f
63.41 225.11 mo
72.98 225.11 li
72.98 215.54 li
63.41 215.54 li
cp
.256718 .20264 .207919 0 cmyk
@
63.41 236.63 mo
72.98 236.63 li
72.98 227.06 li
63.41 227.06 li
cp
.0362249 0 .604578 0 cmyk
f
63.41 236.63 mo
72.98 236.63 li
72.98 227.06 li
63.41 227.06 li
cp
.256718 .20264 .207919 0 cmyk
@
63.41 248.15 mo
72.98 248.15 li
72.98 238.58 li
63.41 238.58 li
cp
.0579843 0 .904021 0 cmyk
f
63.41 248.15 mo
72.98 248.15 li
72.98 238.58 li
63.41 238.58 li
cp
.256718 .20264 .207919 0 cmyk
@
63.41 259.67 mo
72.98 259.67 li
72.98 250.1 li
63.41 250.1 li
cp
.0619821 0 .965148 0 cmyk
f
63.41 259.67 mo
72.98 259.67 li
72.98 250.1 li
63.41 250.1 li
cp
.256718 .20264 .207919 0 cmyk
@
63.41 271.19 mo
72.98 271.19 li
72.98 261.62 li
63.41 261.62 li
cp
.0183108 .0793774 .995117 0 cmyk
f
63.41 271.19 mo
72.98 271.19 li
72.98 261.62 li
63.41 261.62 li
cp
.256718 .20264 .207919 0 cmyk
@
63.41 282.71 mo
72.98 282.71 li
72.98 273.14 li
63.41 273.14 li
cp
.00137331 .266606 1 0 cmyk
f
63.41 282.71 mo
72.98 282.71 li
72.98 273.14 li
63.41 273.14 li
cp
.256718 .20264 .207919 0 cmyk
@
63.41 294.23 mo
72.98 294.23 li
72.98 284.66 li
63.41 284.66 li
cp
0 .439063 1 0 cmyk
f
63.41 294.23 mo
72.98 294.23 li
72.98 284.66 li
63.41 284.66 li
cp
.256718 .20264 .207919 0 cmyk
@
63.41 305.75 mo
72.98 305.75 li
72.98 296.18 li
63.41 296.18 li
cp
0 .614221 1 0 cmyk
f
63.41 305.75 mo
72.98 305.75 li
72.98 296.18 li
63.41 296.18 li
cp
.256718 .20264 .207919 0 cmyk
@
63.41 317.27 mo
72.98 317.27 li
72.98 307.7 li
63.41 307.7 li
cp
0 .767941 1 0 cmyk
f
63.41 317.27 mo
72.98 317.27 li
72.98 307.7 li
63.41 307.7 li
cp
.256718 .20264 .207919 0 cmyk
@
63.41 328.79 mo
72.98 328.79 li
72.98 319.22 li
63.41 319.22 li
cp
0 .882567 1 0 cmyk
f
63.41 328.79 mo
72.98 328.79 li
72.98 319.22 li
63.41 319.22 li
cp
.256718 .20264 .207919 0 cmyk
@
63.41 340.31 mo
72.98 340.31 li
72.98 330.74 li
63.41 330.74 li
cp
0 .95758 1 0 cmyk
f
63.41 340.31 mo
72.98 340.31 li
72.98 330.74 li
63.41 330.74 li
cp
.256718 .20264 .207919 0 cmyk
@
63.41 351.83 mo
72.98 351.83 li
72.98 342.26 li
63.41 342.26 li
cp
0 .993988 1 0 cmyk
f
63.41 351.83 mo
72.98 351.83 li
72.98 342.26 li
63.41 342.26 li
cp
.256718 .20264 .207919 0 cmyk
@
.75021 .679683 .670222 .90164 cmyk
%ADOBeginSubsetFont: ArialMT Initial
ct_T42Dict begin
-0.664 -0.324 2 1.004
 256 array 0 1 255 {1 index exch /.notdef put} for  /ArialMT
Type42DictBegin
[<00010000000c000c000c000c4f532f3210325d73000000cc000000606376
7420a11cd7eb0000012c000006546670676dcc79599a000007800000066e
676c796634819a9f00008f58000848ac68656164de7154f100000df00000
0036686865611233162200000e2800000024686d74785f35fc5600000e4c
000035646c6f636138690836000043b0000035686d61787012b40d800000
7918000000206e616d65e9a8cdc80000793800000a607072657025d64dbf
0000839800000bbe67646972000000000000000000000000000303880190
00050008059a05330000011b059a0533000003d1006602120805020b0604
020202020204e0002affc00078430000000900000000544d432000400020
fffc05d3fe510133073e01b2400001ffffff0000042605bb000000200004
05ba001905ba001a05a70019042600180000ffe70000ffe80000ffe7fe69
ffe805ba0019fe69ffe802ea000000b8000000b80000000000a800ad0169
00ad00bf00c201f0001800af00b900b400c800170044009c007c00940087
0006005a00c80089005200520005004400940119ffb4002f00a1000300a1
00cd00170057007e00ba00160118ffe9007f008503d300870085000d0022
00410050006f008d014cff75005c00df04830037004c006e00700180ff58
ff8eff92ffa400a500b903c8fffd000b001a0063006300cdffee05d8ffdc
002d005c0095009900df019209b500400057008000b9039d0072009a035d
0401ff67fffa00030021007700cd0004004d00cd01c0022b004c006500e7
0118017c034305d8ffa3ffb0ffc40003001c005d0068009a00ba01350147
0221055cff4dffcd0016002d00780080009900b200b600b600b800bd00da
010c05f0ffa4fff00019002c0049007f00b400ce01c003fefd81fe3f0000
00050018002900390049006f00be00c700d0012301c1026f050c05320540
057affd4001400310055005700a700b400e601f7027e027e027f03c60446
ff42000e0085009100bf00c200c500e1011a012f014f01560229026f029e
03720008002c00310031006400690089009800c700de012b01b6020c02cf
03a304ab04fb061dfee0ff0e00060026009b009d00c1010d011801200173
018201d601e30243025f029b02e2039404a904d20761001c005e006d008d
00ab00f7011201380151015b0168017c01870191019901cd01d001e80241
0254026b02ef0368037103bd044204420453047304830586058b06e8fe58
fec4fed1fef7ff32ff860051007c008100910095009e00b400b900cf00d9
00d900df00e20105010b010e010e012001210155017b017b017e018d01a2
01a801a901b401d001d001e201e901f201f501fb020002000206021b0221
022202220223027202770294029c02cf02cf02d002ec02f903170322032b
0335033c0359036f037103870390039003b503e1041a04cf04ff05320532
0596059f05a805ab05c205f0060c0782080008ccfca3fd2afddefe00fe88
fe96feb2feb4ffe100150019001a001c001f003c005100610061006a0078
009600a500af00d3010c0118011a012a013e014c0151015f016a01710178
01820184019a01a501a801a901ae01bc01cd01d701ef0200020d021c0221
0222022e02350242024f024f025e026502710290029202b402d602fa0307
030b030f0315032a0347035d036503740379039603b003cc03dd03e203f6
03fc03fc03ff040a041f04220426042b0447045f0475049e04e704e7055c
05cb05e5060a066d068606b806f10736073e07500751075d078f07b607d4
086000b600c300b500b700000000000000000000000001e00381034503b5
008e0233041902ce02ce002d005f0064034d023f000002a80188027d01b4
02240578063b023b014e00f00426029402c6029f02f6023b034d014b0153
006a0231000000000000061404aa0000003c04c300ed04bc026502ce03b5
0078060c017e02ef060c00b201000239000001c50330042b03cb00da03df
010704a100db040a011701ed02a70350010b01bd043e05580021039c00ae
0371017d00b5024500000afb088c012b014e01aa00870054013201f803ff
0003024e00b4003703e30083006b02d800ed00770088009701640467008e
0033017c00e700a6029e0329056e062a061501c90269048a021301b40002
04a9000002390124010305140084015d039a06ef02d9007500cf040a00de
03ac04bc02cf02ae034d04f005520168006d007d00860071ff8100790558
04d2016700030156002504e00094007c033204210094007f0072005c002f
00b6001800ba00b80041034d00720018001f004c016a01550099009a009a
009800b200040078006900140057006e00ce00b4065402b80067050e0165
00e7000004cbfe52005affa60099ff67006eff92002dffd40087ff7c00b8
00a800e5008f00a80185fe7b0070001e00d900de014c054602cf0546ff2d
028a02d90253029600b700000000000000000000000000000125011800ea
00ea00ae0000003e05bb008a04d70053003fff8cffd50015002800220099
0062004a00e4006d00ee00e5004803c00033fe4e02b1ff460370007905df
0051ffa7ff1f010a0068ff6c004f00bc00a507050061072b00ed04b001d2
00b6007b00650252ff740365fe690094008f005c00400086007500890089
4043555441403f3e3d3c3b3a3938373534333231302f2e2d2c2b2a292827
262524232221201f1e1d1c1b1a191817161514131211100f0e0d0c0b0a09
0807060504030201002c4523466020b02660b004262348482d2c45234623
6120b02661b004262348482d2c45234660b0206120b04660b00426234848
2d2c4523462361b0206020b02661b02061b004262348482d2c45234660b0
406120b06660b004262348482d2c4523462361b0406020b02661b04061b0
04262348482d2c0110203c003c2d2c20452320b0cd442320b8015a515823
20b08d44235920b0ed51582320b04d44235920b09051582320b00d442359
21212d2c20204518684420b001602045b04676688a4560442d2c01b10b0a
432343650a2d2c00b10a0b4323430b2d2c00b0172370b101173e01b01723
70b10217453ab10200080d2d2c45b01a234445b01923442d2c2045b00325
456164b050515845441b2121592d2cb00143632362b0002342b00f2b2d2c
2045b0004360442d2c01b00643b00743650a2d2c2069b04061b0008b20b1
2cc08a8cb8100062602b0c642364615c58b00361592d2c45b0112bb01723
44b0177ae4182d2c45b0112bb01723442d2cb01243588745b0112bb01723
44b0177ae41b038a45186920b01723448a8a8720b0a05158b0112bb01723
44b0177ae41b21b0177ae45959182d2c2d2cb0022546608a46b040618c48
2d2c4b53205c58b002855958b00185592d2c20b0032545b019234445b01a
23444565234520b00325606a20b009234223688a6a606120b01a8ab00052
7921b21a1a40b9ffe0001a45208a54582321b03f1b235961441cb114008a
5279b31940201945208a54582321b03f1b235961442d2cb110114323430b
2d2cb10e0f4323430b2d2cb10c0d4323430b2d2cb10c0d432343650b2d2c
b10e0f432343650b2d2cb11011432343650b2d2c4b525845441b2121592d
2c0120b003252349b04060b0206320b000525823b002253823b002256538
008a63381b212121212159012d2c4bb06451584569b00943608a103a1b21
2121592d2c01b005251023208af500b0016023edec2d2c01b00525102320
8af500b0016123edec2d2c01b0062510f500edec2d2c20b001600110203c
003c2d2c20b001610110203c003c2d2cb02b2bb02a2a2d2c00b00743b006
430b2d2c3eb02a2a2d2c352d2c76b8022323701020b802234520b0005058
b00161593a2f182d2c21210c6423648bb84000622d2c21b08051580c6423
648bb82000621bb200402f2b59b002602d2c21b0c051580c6423648bb815
55621bb200802f2b59b002602d2c0c6423648bb84000626023212d2cb400
0100000015b00826b00826b00826b008260f10161345683ab001162d2cb4
000100000015b00826b00826b00826b008260f1016134568653ab001162d
2c4b53234b515a5820458a60441b2121592d2c4b545820458a60441b2121
592d2c4b53234b515a58381b2121592d2c4b5458381b2121592d2cb01343
58031b02592d2cb0134358021b03592d2c4b54b012435c5a58381b212159
2d2cb012435c580cb00425b00425060c6423646164b807085158b00425b0
0425012046b01060482046b0106048590a21211b2121592d2cb012435c58
0cb00425b00425060c6423646164b807085158b00425b00425012046b8ff
f060482046b8fff06048590a21211b2121592d2c4b53234b515a58b03a2b
1b2121592d2c4b53234b515a58b03b2b1b2121592d2c4b53234b515ab012
435c5a58381b2121592d2c0c8a034b54b00426024b545a8a8a0ab012435c
5a58381b2121592d2c4b5258b00425b0042549b00425b00425496120b000
5458212043b0005558b00325b00325b8ffc038b8ffc038591bb040545820
43b0005458b00225b8ffc038591b2043b0005458b00325b00325b8ffc038
b8ffc0381bb00325b8ffc03859595959212121212d2c462346608a8a4623
20468a608a61b8ff8062232010238ab902c202c28a70456020b0005058b0
0161b8ffba8b1bb0468c59b0106068013a2d2cb1020042b123018851b140
0188535a58b910000020885458b202010243604259b12401885158b92000
0040885458b2020202436042b12401885458b2022002436042004b014b52
58b2020802436042591bb940000080885458b202040243604259b9400000
8063b80100885458b202080243604259b94000010063b80200885458b202
100243604259b94000020063b80400885458b20240024360425959595959
2d2cb0024354584b53234b515a58381b2121591b21212121592d00000001
00000005199a4b6dd9bc5f0f3cf5081b080000000000a2e3272a00000000
c9acc9bbfaaffd671000080c00000009000100010000000000010000073e
fe4e00431000faaffa7a1000000100000000000000000000000000000d59
06000100000000000239000002390000023900b002d7005e047300150473
0049071d0077055600580187005a02aa007c02aa007c031d004004ac0072
023900aa02aa0041023900ba0239000004730055047300df0473003c0473
00560473001a047300550473004d047300610473005304730055023900b9
023900aa04ac007004ac007204ac00700473005a081f006f0556fffd0556
009605c7006605c7009e055600a204e300a80639006d05c700a4023900bf
04000037055600960473009606aa009805c7009c063900630556009e0639
005805c700a10556005c04e3003005c700a105560009078d001905560009
0556000604e300290239008b023900000239002703c100360473ffe102aa
00590473004a0473008604000050047300460473004b0239001304730042
0473008701c7008801c7ffa20400008801c7008306aa0087047300870473
0044047300870473004802aa00850400003f02390024047300830400001a
05c700060400000f040000210400002802ac0039021400bc02ac002f04ac
00570556fffd0556fffd05c70068055600a205c7009c0639006305c700a1
0473004a0473004a0473004a0473004a0473004a0473004a040000500473
004b0473004b0473004b0473004b023900bd023900230239ffe502390009
047300870473004404730044047300440473004404730044047300830473
0083047300830473008304730049033300800473006b0473001b04730051
02cd006d044c000104e3009905e5000305e50003080000e102aa00de02aa
003d0464004e080000010639005305b4009a0464004e0464004d0464004d
0473fffd049c00a003f4003805b4007a069600a1046400000231000002f6
002f02ec002d0625007f071d004404e3008104e3009e02aa00e804ac0072
046400540473002e0464003304e5001a047300860473008c080000ef0556
fffd0556fffd0639006308000081078d00520473fffc0800000002aa0053
02aa004701c7008001c7006c0464004e03f4002f04000021055600060156
fe390473ffe402aa005c02aa005c040000170400001704730049023900b9
01c7006c02aa0047080000250556fffd055600a20556fffd055600a20556
00a20239008d0239ffe00239000402390015063900630639006306390063
05c700a105c700a105c700a1023900c602aa001902aa000602aa001d02aa
002e02aa00e502aa00a202aa006b02aa003a02aa004b02aa002804730000
01c700030556005c0400003f04e3002904000028021400bc05c7fffd0473
004905560006040000210556009e0473008704ac007204ac00a102aa006b
02aa001902aa002106ac006b06ac006b06ac0021047300000639006d0473
0042023900b10556005c0400003f05c700660400005005c7006604000050
04730046046bffe102aa00ee0556fffd0473004a0556fffd0473004a05c7
009e04eb004705c7fffd055600a20473004b055600a20473004b04730096
01c7004204730096025500880473009a02ac008305c7009c0473008705c7
009c04730087063900630473004405c700a102aa008505c700a102aa003c
0556005c0400003f04e300300239002404e300300300002305c700a10473
008305c700a10473008304e300290400002804e3002904000028046800a4
063900600662005504a00048047400480391006204f000440329002e0530
0048046bffe1040000b002eb005208c000330800004f040000990800004f
040000990800004f040000980400009807d5016a05c0009e04ab007204d5
009d04ac007104d5022204d5010505abffe9050001c905ab027e05abffe9
05ab027e05abffe905ab027e05abffe905abffe905abffe905abffe905ab
ffe905ab01c005ab027e05ab01c005ab01c005abffe905abffe905abffe9
05ab027e05ab01c005ab01c005abffe905abffe905abffe905ab027e05ab
01c005ab01c005abffe905abffe905abffe905abffe905abffe905abffe9
05abffe905abffe905abffe905abffe905abffe905abffe905abffe905ab
ffe905abffe905abffe905ab02d605ab006605abffea05d5ffff04d50092
0800000007eb013007eb012007eb013007eb012004d500b204d5008004d5
002a082b0198086b01b807550010060000f40600006f0440003a05400037
04c0003f04150040040000250600005505e100bf038d008904d5ffd90180
008002d50086071500610296000f04d5009202d6008302d6008304d500b2
02d600700556fffd0473004a05c700660400005005c70066040000500556
00a20473004b055600a20473004b055600a20473004b0639006d04730042
0639006d047300420639006d0473004205c700a40473008705c7001f0473
00060239ffce0239ffce0239ffe40239ffe40239fff60239fff50239004b
01c700190400003701c7ffa20556009604000088040000860473009601c7
fffa05c7009c0473008705c900a50473008b063900630473004406390063
0473004405c700a102aa006b0556005c0400003f04e300300239000c05c7
00a10473008305c700a10473008305c700a10473008305c700a104730083
078d001905c70006055600060400002101c700890556fffd0473004a0800
0001071d00440639005304e30081023900b9078d001905c70006078d0019
05c70006078d001905c70006055600060400002101c7008a02aaffe10473
001b04cd005a06ac006b06ac002206ac002206ac004a02aa00e202aa006b
02aa00de02aaffea0557ffff0646ffa706b4ffa80312ffa80632ffa706d8
ffa70605ffa701c7ff780556fffd055600960558fffe055600a204e30029
05c700a4023900bf055600960558000b06aa009805c7009c0533006d0639
006305c700a40556009e04f2009404e30030055600060556000906af007f
05fb0061023900040556000604a00048039100620473008b01c7006b0460
0088049a008c04000019038700480473008b0473005c01c7008904000086
04000018049c00a00400001a0395005c04730044048d008303db00560460
00880433001105b4007a063f005701c7ffc9046000880473004804600088
063f0057055700a206eb0032045500a105c000640556005c023900bf0239
0004040000370875000d081500a406d5003104a900a10515000a05c000a0
0556fffd054000a705560096045500a1056b0000055600a20763000704d5
004e05c000a105c000a104a900a10540001206aa009805c700a406390063
05c000a00556009e05c7006604e300300515000a061500520556000905eb
009f05550057075500a1078000a106550000071500a8054000a505c00055
081500a405c7001a0473004a0495005b0440008802eb008804ab00000473
004b055afffb03ab003204780087047800870380008604ab00180580008c
046b00880473004404550088047300870400005003aa0026040000210695
004b0400000f0495008a042b0045066b008d0695008d0500002805c0008b
042b008404150030060000890455001f0473004b0473000002eb00890415
004b0400003f01c700880239000901c7ffa2074000130680008304730000
0380008604000021046b008803e900a1034a008808000041089500a00585
002d000001010000001e0000003100000031000001010000007e0000007e
0000008c0000008c000001010000001000000101000001210310007d0000
008c023300d20000030b0000ff04023900b9048100690456003203310019
0411002d04d1009601f9009b030f005f04ca009b04b8008c01f9009b0413
002803b0005003b4003c04ca009b04cf005001f9009b02d2003c0498005a
043c00190488006e045f007303b1001903d4000a0466009604130028058e
00640524002803f2009b03f2009b03f2009b01e3005a0356005a0686009b
01f9ffac041300280413002803b4ff5703b4ff570448002d058e0064058e
0064058e0064058e00640481006904810069048100690456003203310019
0411002d04d10096024b0000034a000004b8008c024b00000413002803b0
005003b4003c04cf005002d2003c0498005a0488006e045f007303d4000a
0466009604130028058e00640524002801f9009b0456003203b00050045f
0073049b003c0000ffdc0000ff250000ffdc0000fe51028d00ab028d00a0
02da0043034d007901a8ffba000000460000004600000046000000460000
00480000004600000046000000460435017c0435012e043500b704350081
0435012c043500be043500af043500810435009a043500db04350085028d
00c1043500b3060001000600010002420036060001000435009e04350098
043500cb0600010006000100060001000600010006000100000000460600
010006000100060001000600010006000100060001000600010006000100
051bffba06000100060001000600010005b5003a05b5003a01f4ffba01f4
ffba060001000600010006000100060001000481003604350036043dffba
043dffba03e9004a03e9004a067f0014077600140327ffba041effba067f
0014077600140327ffba041effba051b003204b500240300fff706000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010000000030
0000004600000046000000400000004606000100060001000000ffdc0000
fe510000ff160000ff160000ff160000ff160000ff160000ff160000ff16
0000ff160000ff160000ffdc0000ff160000ffdc0000ff200000ffdc0473
004a08000000060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
06000100060001000600010006000100060001000600010006000100028d
007f028d005d0600010004ee0015034d007901a8000e01d6ffdc01a80056
01d60010037500320375003201a8002d01d60013051b003204b5002401f4
ffba01f4ffba01a8009301d6001305b5003a05b5003a01f4ffba01f4ffba
024200000300fff705b5003a05b5003a01f4ffba01f4ffba05b5003a05b5
003a01f4ffba01f4ffba0481003604350036043dffba043dffba04810036
04350036043dffba043dffba0481003604350036043dffba043dffba02b3
005f02b3005f02b3005f02b3005f03e9004a03e9004a03e9004a03e9004a
0692003e0692003e043fffba043fffba0692003e0692003e043fffba043f
ffba08c9003e08c9003e06c5ffba06c5ffba08c9003e08c9003e06c5ffba
06c5ffba04a7ffba04a7ffba04a7ffba04a7ffba04a7ffba04a7ffba04a7
ffba04a7ffba045a002a039a00360435ffba0327ffba045a002a039a0036
0435ffba0327ffba064f0027064f00270224ffba021affba04a7004604a7
00460224ffba021affba04cf002d04cf002d0327ffba0327ffba040d0047
040d004701a8ffba01a8ffba02b4002302b400230327ffba0327ffba0435
00450435004501f4ffba01f4ffba024200360300fff7039affba0327ffba
0375003203750032051b003204b50024051b003204b5002401f4ffba01f4
ffba045a004004ce0049045a002604ce0039045a005304ce004a045a0053
04ce004a0600010006000100000000460000004606000100060001000600
010000000046000000460600010006000100000000480000004606000100
060001000600010000000046000000460000004600000046000000400000
003006000100000000460000004606000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
0600010006000100060001000600010006000100028d00ca028d00c7028d
00c606000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
06000100060001000100ffba0800ffba1000ffba06dc0063053f004406d5
00a1055b00830000fddc0000fc2f0000fca60000fe540000fcd70000fd73
0000fe290000fe0d0000fd110000fc670000fd9d0000fbf50000fc720000
fed50000fed50000ff02041b00a006ac006b06ac00190000feb60000fd73
0000fe080000fca60000fe530000fd110000fbc80000faf40000faaf0000
fc720000fbaa0000fb6a0000fcf10000fc7d0000fbdd0000fcc10000fb98
0000fdea0000fe840000fdc20000fcf10000fd5f0000fe760000febc0000
fceb0000fd6c0000fd580000fc900000fd150000fc2c0000fc130000fc12
0000fb960000fb9601c700880556fffd0473004a0556fffd0473004a0556
fffd0473004a0556fffd0473004a0556fffd0473004a0556fffd0473004a
0556fffd0473004a0556fffd0473004a0556fffd0473004a0556fffd0473
004a0556fffd0473004a0556fffd0473004a055600a20473004b055600a2
0473004b055600a20473004b055600a20473004b055600a20473004b0556
00a20473004b055600a20473004b055600a20473004b0239006301c7001f
023900ba01c7007c06390063047300440639006304730044063900630473
004406390063047300440639006304730044063900630473004406390063
0473004406dc0063053f004406dc0063053f004406dc0063053f004406dc
0063053f004406dc0063053f004405c700a10473008305c700a104730083
06d500a1055b008306d500a1055b008306d500a1055b008306d500a1055b
008306d500a1055b00830556000604000021055600060400002105560006
040000210556fffd0473004a0239ffe201c7ffb0063900630473004405c7
00a10473008305c700a10473008305c700a10473008305c700a104730083
05c700a1047300830000fefe0000fefe0000fefe0000fefe0455fffd02eb
000c07630007055afffb04a900a10380008604a900a10380008605c700a4
046b00880473fffd040000140473fffd04000014055600090400000f0555
0057042b0045055500a10473008706050063047300550639006004730044
05b5003a01f4ffba0224ffba021affba04a7004601f4009e01f4001001f4
001b01f4001001f4006b01f4fff90227ffce0000000f0000fff502aa00a4
02aa00a40000000e00000056000000560000ffcf01a8000f01d6ffbf01a8
fff501d6ffcd01a8001d01d6fff501a8009301d600130375003203750032
0375003203750032051b003204b5002405b5003a05b5003a01f4ffba01f4
ffba05b5003a05b5003a01f4ffba01f4ffba05b5003a05b5003a01f4ffba
01f4ffba05b5003a05b5003a01f4ffba01f4ffba05b5003a05b5003a01f4
ffba01f4ffba05b5003a05b5003a01f4ffba01f4ffba05b5003a05b5003a
01f4ffba01f4ffba0481003604350036043dffba043dffba048100360435
0036043dffba043dffba0481003604350036043dffba043dffba04810036
04350036043dffba043dffba0481003604350036043dffba043dffba0481
003604350036043dffba043dffba02b3003202b3003202b3005f02b3005f
02b3005f02b3005f02b3003202b3003202b3005f02b3005f02b3005f02b3
005f02b3005f02b3005f02b3003802b3003802b3004902b3004903e9004a
03e9004a03e9004a03e9004a03e9004a03e9004a03e9004a03e9004a03e9
004a03e9004a03e9004a03e9004a03e9004a03e9004a03e9004a03e9004a
0692003e0692003e043fffba043fffba0692003e0692003e043fffba043f
ffba0692003e0692003e043fffba043fffba08c9003e08c9003e06c5ffba
06c5ffba08c9003e08c9003e06c5ffba06c5ffba04a7ffba04a7ffba045a
002a039a00360435ffba0327ffba064f0027064f0027064f00270224ffba
021affba064f0027064f00270224ffba021affba064f0027064f00270224
ffba021affba064f0027064f00270224ffba021affba064f0027064f0027
0224ffba021affba04a7004604a7004604a7004604a70046093e0032093e
00320740ffba0740ffba067f0014077600140327ffba041effba04cf002d
04cf002d0327ffba0327ffba04cf002d04cf002d0327ffba0327ffba04cf
002d04cf002d0327ffba0327ffba067f0014077600140327ffba041effba
067f0014077600140327ffba041effba067f0014077600140327ffba041e
ffba067f0014077600140327ffba041effba067f0014077600140327ffba
041effba040d0047040d004701a8ffba01a8ffba040d0047040d004701a8
ffba01a8ffba040d0047040d004701a8ffba01a8ffba040d0047040d0047
01a8ffba01a8ffba043500450435004501f4ffba01f4ffba043500450435
00450435004504350045043500450435004501f4ffba01f4ffba04350045
043500450481003604350036043dffba043dffba024200360300fff7031a
001a031a001a031a001a0375003203750032037500320375003203750032
037500320375003203750032037500320375003203750032037500320375
0032037500320375003203750032051bffba04b5ffba051b003204b50024
01f4ffba01f4ffba0375003203750032051b003204b5002401f4ffba01f4
ffba051b003204b50024067f0045067f0045067f0045067f004501a80028
0000fe290000fea20000ff300000ff1d0000ff120000ff920000fe7e08fc
003208ad00320000ffb50000ffb60000feed0000ff640000fe7e0000ff9f
018d000002f6fffd0000fe820000ff1004cd00320000ff580000ff580000
ff640692003e0692003e043fffba043fffba08c9003e08c9003e06c5ffba
06c5ffba045a002a039a00360435ffba0327ffba034d007902b400230242
003601f4ffba0290ffba01f4002f01f4003b01f4001201f400b101f4006d
067f00140776001401f9009b0000fed902bc000003f2009b045afff504ce
fff5045a005304ce004a045a005304ce004a045a005304ce004a045a0053
04ce004a045a005304ce004a045a005304ce004a04350071043500ad045a
000f04ce000f0473001406110014054000a7047300860540000a0473000a
05c7005105c700660400005005c7fffd067a00140540004a047300460474
00480556006e04d5005304e3ffc40639006d04fe000f070c008701c70083
0239001f055600960400008801c7001504000018072000a405c7ffb80473
008b0639006006f200630557004406090014047300860556009e0556006b
0400004f04f20094030b00440239002404e300140239002404e3003005fb
006105c700a1062e00100400002104e300290400002804e3002904e30031
045c0044045c003f0473003c0473005503ab003203e50024047300870214
00bc034e00bc04ac0072023900b00aaa009e09c7009e08640046087f0096
06aa0096039c008309c7009c078e009c062b0087047300550556fffd0473
004a0000fefe0556fffd0473004a08000001071d00440639006d0473001a
0639006d0473004205560096040000880639006304730044063900630473
004404e30029045c004c01c7ffa20aaa009e09c7009e086400460639006d
04730042084600a404f2009e05c7009c047300870556fffd0473004a0556
fffd0473004a055600a20473004b055600a20473004b0239ff8a0239ff64
023900040239fff60639006304730044063900630473004405c700a102aa
ffcc05c700a102aa006805c700a10473007605c700a1047300830556005c
0400003f04e3003002390024045c0051037e001305c700a40473008705a6
00a404d6005e0486005e04e30029040000280556fffd0473004a055600a2
0473004b06390063047300440000fefd0639006304730044063900630473
004406390063047300440556000604000021047300570473004804730086
04730086040000130400005004730046047300460473005505e9005503ab
004903ab0032050d0032040f00440239ffb9047300420473004204780050
0402001904ef00190473008b047300870473008701c7001901c7005702d9
0044029e0000026e001401c700830493008306aa008406aa008406aa0087
0473ffa60473008b046c00870473004406530044063f00570466004402aa
ffe402aaffe402aaffe402aa008502aa008502aa008502aaffe40455008a
0455008a0400003f01c7ffa20214ffb901c7ff7202cb00000239000f0239
002404730019048c0054046000880400001a05c700060400001804280019
0400002804540028045c004c045c00790400002404000050040000240400
00500639006304400088040f004904780050046b0088032e000004000008
033b008804730048040000240400005007b7004607400046080b004605b3
0024036f002405c00024061c0013054a0083050f008303e2001e04380063
03110064031100640146ffce01eb006401eb000001eb000002ea006403d9
0000029100000187005a02d7005e01c7008001c7006c01c7008a02aa00fb
02aa00fb02ca003202ca003204ac007004ac007004ac006504ac006502aa
012102aa00de02aa005902aa012102aa001d02aa005902aa00de023900b6
023900b602aa00fb02aa00fb02aa00a602aa00a602aa00a602aa001d02aa
ffe202aafffb029400000142006402b8003202a0000002ca003203100096
0310009603100096031000960310009602aa006202aa006202aa002802aa
001d02aa0047045700960457009604570096045700960457004304570043
045700430457004304570043031000430457002f0457002f0457002f0457
002f0457002f0310002f0457002504570025045700250457002504570025
0310002f0457001a0457001a0457001a0457001a0457001a0310001a0457
004204570042045700420457004204570042031000420457009604570096
045700960457009604570042045700420457004204570042045700420310
00420457002f0457002f0457002f0457002f0457002f0310002f0457002f
0457002f0457002f0457002f0457002f0310002f04570026045700260457
002604570026045700260310002604570042045700420457004204570042
045700420310004204570096045700960457009604570096045700420457
004204570042045700420457004203100042045700260457002604570026
045700260457002603100026045700230457002304570023045700230457
0023031000230457002f0457002f0457002f0457002f0457002f0310002f
0457004b0457004b0457004b0457004b0457004b0310004b045700960457
009604570096045700960457004204570042045700420457004204570042
031000420457001a0457001a0457001a0457001a0457001a0310001a0457
002404570024045700240457002404570024031000240457002f0457002f
0457002f0457002f0457002f0310002f0457004e0457004e0457004e0457
004e0457004e0310004e045700960457009604570096045700960000fec1
0000fec60000fdac0000fed80000ff920000fee90000ff4c0000fea00000
fec40000ffce0000ff660000fea00000fed80000fed80000ff970000ff98
0000ff990000fff40000ff420000ff420000ff440000ff5f0000fe870000
ffec0000ffa60000ff510000ff510000ff510000fec90000ff1c00000000
0000fee90000ff4c0000ff930000ff2a0000ff560000ffce0000fe870000
febb0000fec40000fec40000fed80000fed80000feb30000fec90000fdad
0000fec80000feb30000fec90000fdad0000fe160000fee60000ffa60000
fe870000ff440000feba0000ff230000ff9a0000fdac0000fe8800000000
0000feb00000ff980000fe930000ffa60000fe870000fe1c0000ff660000
ff440000feb00000feb00000feb00000ff030000ff520000fd1f0000ff53
0000ff530000ff530000feb50000feb50000ffc30000feae0000fedc0000
fec70000fec80000fedc0000fe1e0000ff420000ff510000feb70000feb0
02aa00de02aa005902aa00fa049a007004600000062e001407aa0000062e
0014047b004c063f005704cf0044063900630473004405c7007004000050
04e300a8033b008804ff0000043c0032060d000a049d0042072000a406aa
0084056500630473008b056400a40400000a0556006b0556006b04e00005
04c5001905e5005f046e004403b600140347002804cf00440495005b0400
005001c7ffa2063900600389004d03890050055600a205c000a10473004b
047800870ab4006d04fe00100639001404e70014079900bf05b500880558
000104000006072e00bf0590008806a10078057b007a086d00bf06f00088
04d5006603ab001f065f0039058200480639006004730044066d0009050c
001a066d0009050c001a08980063072c004406aa002004e6001c0987006d
06d000500000fe370ab4006d04fe001005c7006604000050040700140000
fea60000febc0000ff980000ff980000fc2b0000fc4c05c000a104780087
05400004042b00140556009e04730087055d00a40464008804d5004e03ab
003204a900040380000005ef002904490028070900a4052f0088091800a0
06f600880606003e042b002305c700660400005004e3003003aa00260767
00310587002605550057042b004506e4000a0554000a06e4000a0554000a
023900bf07630007055afffb055700a1046800860540001204ab001805c7
00a4046b008805c700a4046b008805550057042b004506aa00980580008c
02aa002e0556fffd0473004a0556fffd0473004a08000001071d00440556
00a20473004b060500630473005507630007055afffb04d5004e03ab0032
04d5004e045c004c05c000a10478008705c000a104780087063900630473
0044063900600473004405c0004a0415002b0515000a040000210515000a
040000210515000a0400002105550057042b0045071500a805c0008b0540
004a0473004607bf004a0703004607a6006606860053054d006604130053
07c3001207470018084600a4070700880639006d0478005005f900300553
00260000ff430000fec90000ff770000ffb00000ff470000ff560000ff74
0000fed70000feac000000000000ff520000ff56000000000000feac0000
fd9a000000000000ff6a0000ff7c0000ff690000ff560000feac0000ff7f
0000ff560000fdef0000ff430000ff690000ff7c000000000000fdae0000
ff8c000001020000fefe0000fefe0000fedf0000fedf0000ff580000ff20
0000fefe0556fffd0473004a055600960473008605560096047300860556
00960473008605c700660400005005c7009e0473004605c7009e04730046
05c7009e0473004605c7009e0473004605c7009e04730046055600a20473
004b055600a20473004b055600a20473004b055600a20473004b055600a2
0473004b04e300a8023900130639006d0473004205c700a40473008705c7
00a40473008705c700a40473008705c700930473006805c700a404730087
0239ffdf01c7ff9202390020023900060556009604000088055600960400
008805560096040000880473009601c7007e0473009601c7ffb904730096
01c7ffa50473009601c7ffa306aa009806aa008706aa009806aa008706aa
009806aa008705c7009c0473008705c7009c0473008705c7009c04730087
05c7009c0473008706390063047300440639006304730044063900630473
004406390063047300440556009e047300870556009e0473008705c700a1
02aa008505c700a102aa008505c700a102aa005e05c700a102aa00260556
005c0400003f0556005c0400003f0556005c0400003f0556005c0400003f
0556005c0400003f04e300300239002404e300300239002404e300300239
ffff04e300300239000e05c700a10473008305c700a10473008305c700a1
0473008305c700a10473008305c700a104730083055600090400001a0556
00090400001a078d001905c70006078d001905c70006055600090400000f
055600090400000f055600060400002104e300290400002804e300290400
002804e3002904000028047300870239000305c70006040000210473004a
01c7008904a0004804a0004804a0004804a0004804a0004804a0004804a0
004804a000480556fffd0556fffd06820013068200130682001306820013
068200560682005603910062039100620391006203910062039100620391
0062061e0000061e0000076c0000076c0000076c0000076c00000473008b
0473008b0473008b0473008b0473008b0473008b0473008b0473008b068f
0000068f0000081f0000081f0000081f0000081f0000081ffff3081ffff3
01c7008101c7008101c7ff9b01c7ff9b01c7ffeb01c7ffeb01c7ffa201c7
ffa20301000003010000049100000491000004910000049100000491fff3
0491fff3047300440473004404730044047300440473004404730044069d
0000069d0000082d0000082d000007c9000007c900000460008804600088
0460008804600088046000880460008804600088046000880682000007ae
00000812000007ae0006063f0057063f0057063f0057063f0057063f0057
063f0057063f0057063f0057065f0000065f000007ef000007ef0000078b
0000078b0000078bffff078bffff04a0004804a000480391006203910062
0473008b0473008b01c7ffe601c700680473004404730044046000880460
0088063f0057063f005704a0004804a0004804a0004804a0004804a00048
04a0004804a0004804a000480556fffd0556fffd06820013068200130682
00130682001306820056068200560473008b0473008b0473008b0473008b
0473008b0473008b0473008b0473008b068f0000068f0000081f0000081f
0000081f0000081f0000081ffff3081ffff3063f0057063f0057063f0057
063f0057063f0057063f0057063f0057063f0057065f0000065f000007ef
000007ef0000078b0000078b0000078bffff078bffff04a0004804a00048
04a0004804a0004804a0004804a0004804a000480556fffd0556fffd0556
fffd0556fffd0556fffd02aa00e502aa00fd02aa00e502aa000602aa0006
0473008b0473008b0473008b0473008b0473008b068200000682000006f3
000006f3000005c700a402aa001302aa001302aa000601c7ffbb01c7ffab
01c7ffca01c7ffca01c7ff9301c7ff930239001a0239fff5036500000365
000002aa001302aa001302aa000604600088046000880460008804600088
048d0083048d00830460008804600088055600060556000606e600000718
0000061e000002aaffea02aaffea02aa0059063f0057063f0057063f0057
063f0057063f005707650000069d000007270000065f000005fb006102aa
00de02aa00e50473000d05c7006605c7006606aa008705c70024095000a1
078d00190556001f04e30030080000290400003004c100660000ff530000
ff530000ff530000ff5301c7001901c7ffa2042b00050556001105740046
02cbffa3057a008702f0ffc8057f000a057f000a02aa008402aa008402aa
00c902aa00c902aa00a002aa005902aaffaf02aa003a02aa0006023900b9
02aa00a902aa00a902aa00a902aa00a9032e001e032e001e02aa003a0000
ff730000ffa50000fed80000ff230000ff720000ff720000fee70000ffa5
0000ff530000ff530000ff530556009e0473008703f8001905fb0019071d
00440440001904000050046900870469001903eb008703ab003201c70088
0361004104000088033600100580008c04780087047300440400001304de
004404de004404de000d078d005003a800440473004404730044042b0084
0455001f0455001f03aa00260460008804c6004405de004404c600440400
001a05c700060400002803ab0032036b003f04db001f02eb00880400001a
04550088042b008405b4007a04ab001803a00000054f0000035100320351
ffd103980032034800320348003203f80032036e0032015600690284002d
0366003202d000320415003203710032036f003204180032030f00320359
0032039c003203760031036f003204fb000002fa003202fa003203040032
04cc0032030500640305003202f9003202f90032028c0032028c00320304
00320142006402b6006404950064030f00640305003202d5003203050032
030500320306006401c20032030f00640342003204950064029200000320
00000315006402920000030600320385003202bf00000142006401eb0064
030f0064029200000315006402920000030900320385003202bf000005ed
00460a660046061300460689ffba0541ffba01e9003c045a00110000ff0d
0000ff350000fece0000feb70000fec90000ffcf0000ff4f0000ff9e0000
feca02b3005f02b3005f03e9004a03e9004a039affba0327ffba039affba
0327ffba05ad0069053d002d05fd009604dc005004e0003c05f6009b053f
00280650002804ac00720000fe3b0000fe660000fe660473fffc02aa0053
02d5ffce01a8ffba01a8ffba01a8ffba01a8ffba0658001509c500470400
000008000000040000000800000002ab0000020000000155000004730000
02390000019a000000ab00000000000005e5000305c7006606aa00980580
008c0744008307180046071800480556fffd05c70066040000140473000a
04e300300400004f0400002804a5001d000001020000ff420000febf0000
ff3a0000ff53048d000a05c7005105c7006605c70051045500a102eb0088
0000ff430000ff040000ffac02d200960000ff37021affba0250001e0000
ff3a0000ff5b0000ff5f0000ff7e0000ff940000ff4a0000fe9c05b5003a
05b5003a01f4ff9601f4ff9605b5003a05b5003a01f4ffba01f4ffba05b5
003a05b5003a01f4ffba01f4ffba05b5003a05b5003a01f4ffba01f4ffba
05b5003a05b5003a01f4ffba01f4ffba05b5003a05b5003a01f4ffba01f4
ffba05b5003a05b5003a01f4ffba01f4ffba0481003604350036043dffba
043dffba0481003604350036043dffba043dffba02b3003202b3003202b3
005f02b3005f03e9004a03e9004a0692003e0692003e043fffba043fffba
045a002a039a00360435ffba0327ffba045a002a039a00360435ffba0327
ffba045a002a039a00360435ffba0327ffba064f0027064f00270224ffba
021affba064f0027064f00270224ffba021affba067f0014077600140327
ffba041effba067f0014077600140327ffba041effba067f001407760014
0327ffba041effba02b4002302b400230327ffba0327ffba02b4002302b4
00230327ffba0327ffba043500450435004501f4ffba01f4ffba04350045
0435004501f4ffba01f4ffba043500450435004501f4ffba01f4ffba040d
0047040d004701a8ffba01a8ffba03e9004a03e9004a03e9004a03e9004a
0692003e0692003e043fffba043fffba0473ff93047300460239ffbf06aa
ffd50473ffb70473ff9102aaffa402aaffa40400ffff0239ffb904000028
04730089030b0064047400480649002401c7001901c700190473001e0460
001e048c000a04730086047300460239001305b400420400008801c7fffc
06aa00870473008b0473008702aafffb0400003f0318ffa20400001a0400
000f040000280473004a04730048047300460473004b03ab004903ab0032
0534005501c700880400001301c7ffa204730083045c004c0304006402d5
003202c9003302fc0032028c003201d5003201d500000304003203110064
01420019014200640142006401420019022a000001420064014200090233
00640493006404930064030fffc9030f0064030e00640305003203000032
02b800320142ffca01c20032030f001d031a00320306006402d400640292
000002de003202de003202de003202f4003202ea00320000febc0000febc
0000ff730000fea9023900b902fa003202f900320305003202a0000002f9
00320639006d0556fffd0473000f05c7006602aa004104a0004804a00048
04a0004804a0004804a0004804a0004804a0004804a0004801c7ff9b01c7
ffab01c7ff9b01c7ffab01c7ff9b01c7ffbb01c7ff9b01c7ffbb04600088
0460008804600088046000880460008804600088046000880460008801c7
ffab01c7ffab01c7ffbb01c7ffbb04600088046000880460008804600088
045a005304ce004a03a000130556001105c700290558000b055600a20473
004b0400003301c7ffa205e600630473004805c7000002aa000f05560006
0400002104000013040000500400001301c700830455fffd02eb00010556
00090400000f055600090400000f04d5005303ab00490540001204ab0018
0000fec60000fed40000fec60000fed40000fe5f0000fe5f0000ff720000
ff730000fee7078b000a03eb004c040000130473000a01c700150473fff4
0556001105c700a1047300190239ff8b05c700a404730087055600960400
008804e30029040000280400003b049e00a403670088053000480000ff53
0000ffbc0000fefe0000fefe0000fea40000fea401c7008805c900a505c7
009c05c900a50000fecd0000ff480000fec90000fece0000fec50000fed0
0000fed10000feee0000fed60000fedc0000fdd90639005804730048078d
001905c70006059f00a40000feb905dc006304c60009084c001906ba0006
023900b9038000720187005a0187005a0400009904000099023900b00239
00b0023900b002aa001904e3003004730050000000000000002a0000002a
0000002a0000002a000000d60000017e00000320000005a60000074e0000
09380000097e000009fe00000aa400000b8400000bec00000c6400000caa
00000ce600000d5600000fcc000010d20000134e00001584000017760000
19d600001c6000001d0c000020e60000240c0000246800002526000025a8
000026180000269e000027900000299000002bf000002dfa00002f500000
30cc000031ae0000327a0000344600003580000036ba000037de00003a2a
00003aca00003e280000401000004190000042d400004504000047ae0000
4b0800004c0a00004d6000004f8200005262000055d80000581600005970
000059da00005a4400005aa800005b3000005b6400005be000005f2e0000
6156000063a2000065c0000067ca0000693a00006b8000006d5800006f26
000070a4000073a0000075060000785000007a4a00007c6000007e580000
80300000814a0000858c000086f6000088c800008b32000090de00009328
000095f4000097ee000098ec0000993800009a3a00009ada00009b260000
9b5a00009b9600009bd800009c3e00009c8400009cb800009cee00009d24
00009d7400009db600009e0800009e4000009e9200009ec800009f080000
9f4a00009f8800009fd20000a0120000a0400000a0780000a0c80000a0fe
0000a13e0000a1780000a1bc0000a2060000a2420000a2720000a2b60000
a2ee0000a37e0000a4040000a6120000a7a60000a9560000a9a20000aa36
0000ac5a0000aeae0000b09e0000b18a0000b20c0000b2760000b3940000
b4f00000b7380000b89a0000b9280000b9d20000ba960000bbde0000bd88
0000be760000bf3c0000bfa00000c00e0000c1380000c25c0000c2ec0000
c4ce0000c7280000ca7a0000cb700000cc160000cc660000cd1c0000ce3c
0000cfda0000d0740000d1380000d1f80000d2600000d29c0000d2f40000
d3420000d55a0000d7a00000d7d80000d80a0000d9340000da600000db0e
0000dbb20000dc540000dd260000dd7a0000ddb00000de080000df5a0000
dfcc0000e0260000e19e0000e30a0000e3ea0000e41c0000e4b80000e5dc
0000e8520000e88c0000e8d00000e90c0000e96e0000e9b00000e9f60000
ea420000ea740000eac80000eb060000eb360000eb740000ebba0000ebfc
0000ec3a0000ecbc0000ed2a0000ee100000ee4c0000eecc0000ef000000
efa20000f02a0000f0960000f0f80000f1640000f2500000f3420000f376
0000f3aa0000f3da0000f41e0000f4960000f6100000f82a0000f85c0000
f8960000f9900000fb1e0000fb540000fcb80000fd340000fe140000ff0a
0001009a00010204000103f2000104ee0001053400010568000105aa0001
05e40001063800010680000106ca000106fa0001072a0001091200010950
00010978000109a8000109dc00010a0200010a2800010a7000010c260001
0da000010dc600010dec00010e3000010e6000010e9000010ee600010fc4
000110d60001111a00011152000111ac000111ea0001121e0001124e0001
128a000112ca000113080001134400011386000113bc000113f800011438
0001145e00011482000114d20001162e00011684000116b8000117060001
175200011794000117cc000118020001184a000118ec00011a8800011c50
00011dd200011fc4000121160001229a0001237c00012516000125800001
25a800012646000128c8000129080001294800012988000129c600012a24
00012a8200012af000012b1000012bfa00012c9a00012cd000012d1e0001
2d6800012db200012dce00012dea00012e0a00012e2a00012e4a00012e6a
00012e9000012eb600012edc00012f0200012f3200012f5a00012f820001
2fae00012fda0001300e00013038000130640001309a000130c4000130f0
00013126000131500001317a000131ae000131de00013212000132560001
3286000132ba000132fc0001333000013362000133a4000133d800013408
0001344a0001348e000134d4000135300001354c00013568000135840001
35a0000135bc0001372a000139d600013c4600013c6200013c7c00013c98
00013cb400013cd000013cec00013d4800013d8200013dec00013eb60001
3f560001402c000140ac00014134000141a40001423a00014298000142de
0001433c0001439e0001445600014514000145400001459c000145e00001
474c000148400001486a00014886000148b2000148ea0001493600014976
000149aa000149da00014a0a00014a3a00014a7e00014aae00014ade0001
4b1e00014b4e00014b7e00014bae00014bee00014c1e00014c4e00014c7e
00014ca400014ea800014ed800014f08000150580001520e0001523e0001
526c0001529c000152ca000152fa000153280001534c00015370000153a0
0001551000015548000155780001570a0001573800015766000157940001
57bc0001591a00015ab200015aea00015b2a00015b6600015b9600015bc4
00015be000015c1000015c4000015d3000015e9800015ec800015f020001
5f4200015f7200015fa200015fe40001600a0001603000016070000160b0
000160e0000161200001620a0001628a0001636e0001639e000163ce0001
63fe0001642e0001646a0001649c000164ce000164fe0001652e00016574
000165a6000165d60001660c0001667e000166b200016880000169820001
6b1200016d4200016f9200017124000171880001721200017222000172b0
000174ae000175da0001774600017836000179ba00017bd400017e000001
7ef200017f0200017f120001802a0001803a0001804a0001805a0001806a
0001807a00018198000181a8000181b80001822c0001823c0001830c0001
831c0001842e0001843e0001844e0001845e000185bc0001879a000187dc
000188120001884800018878000188a8000188fc0001892400018aae0001
8bf600018d4a00018eb2000190360001909a0001922c0001934800019358
00019368000194ee000194fe00019664000197be000198f200019a500001
9bbe00019d8400019dc400019dfc00019e3200019e5800019e8800019eae
0001a0240001a0540001a18a0001a19a0001a1aa0001a1ec0001a1fc0001
a3900001a53c0001a6c60001a6ee0001a71e0001a87a0001a88a0001a9c2
0001a9d20001aa6c0001abcc0001abdc0001ae420001afcc0001b1340001
b1640001b2da0001b40c0001b41c0001b42c0001b43c0001b5160001b526
0001b5360001b5460001b63e0001b7b80001b7c80001b8f00001ba240001
bb760001bd0a0001be280001bfb40001c0c60001c0fc0001c3320001c3d2
0001c3e20001c5780001c71a0001c79e0001c9200001c9300001cb980001
cd180001ce980001cec80001d0680001d1ee0001d3b20001d4de0001d4ee
0001d61e0001d62e0001d63e0001d6fe0001d70e0001d8f40001d9040001
da3a0001db480001dcf40001deaa0001dfec0001e15c0001e2a40001e2f6
0001e4d80001e6540001e6920001e8380001e85c0001e99c0001e9ac0001
e9bc0001e9f40001ea040001eb900001ecf80001ee6c0001ee900001eec0
0001f02e0001f0e00001f19e0001f1cc0001f3820001f47a0001f5080001
f62e0001f6dc0001f7b00001f7fa0001f8720001f9320001f95a0001f99e
0001f9f40001fad00001fb1a0001fb4e0001fb760001fb9e0001fbd20001
fc160001fc5a0001fc980001fdd60001fe8e0001ffae00020024000200f2
00020144000201d6000202860002037a000203ce00020464000205220002
060c000206be000207de00020830000208da00020a1000020ae800020bce
00020cd400020dba00020e9c00020f900002102e000211340002122e0002
12a60002131e00021394000213ca00021426000214ee0002157a000215b2
000215f800021628000216920002175200021786000217b6000217ea0002
181a0002184a0002187a00021a1a00021a5200021a9200021aca00021b02
00021b9e00021c9800021cc800021d6c00021d9a00021dda00021e2a0002
1e5a00021ea60002203e000221a4000223040002234a0002239e000223d6
000225480002257e000226100002264e0002267c000226ba000227ea0002
28120002294e000229de00022a8800022b0a00022bc600022cde00022dec
00022e2000022ea60002300200023084000230ce000231d8000232200002
3324000233a0000233f80002347c000235660002367c0002377800023822
00023912000239e400023ace00023bb600023c6600023ce800023f460002
3f7000023f9a000240520002407c000241be000242c4000243ae000243d8
000244020002442c0002445600024480000246000002462a000246540002
467e000246a8000246d2000246fc000247260002475000024784000247ae
000247d8000248020002497c0002498c00024aa600024ab600024ae00002
4b0a00024b3400024b5e00024d0800024f240002505200025062000251de
000251ee000253340002550000025606000257860002592600025b4a0002
5ca400025e8600025fca000260f8000261e6000262100002623a00026264
0002628e000262b8000262e20002630c00026336000263600002638a0002
63b4000263de00026408000264320002645c000266980002681400026958
00026b4000026c8800026cb200026cdc00026d0c00026d3c00026d8c0002
6ddc00026e1c00026e8e00026ee200026f4000026f9600026fcc0002700e
000270540002709e000270ce00027106000271360002726e000275b40002
75de00027608000276320002765c00027686000276b0000276da00027704
0002772e0002775800027782000277ac000277d6000278000002782a0002
78540002787e000278a8000278d2000278fc00027926000279500002797a
000279a4000279ce000279f800027a2200027a4c00027aea00027b000002
7b2a00027e0a00027e1a00027f340002805600028194000282d60002847c
0002848c000285ce0002871e0002890e00028ae200028bfa00028c0a0002
8c8c00028d1a00028e1a00028e2a00028eca00028eda00028ff000029142
00029272000292820002935000029360000294d6000294e6000295fa0002
960a0002973e000298d400029990000299a000029a9e00029bf800029c84
00029c9400029dbe00029f4a0002a0060002a0160002a0b20002a0c20002
a1900002a1a00002a2780002a2880002a3900002a3a00002a5660002a576
0002a6ce0002a6de0002a9480002a9580002ab520002ab620002accc0002
acdc0002adcc0002addc0002af740002af840002b0a20002b0b20002b1f2
0002b2020002b2120002b2220002b39a0002b3aa0002b3ba0002b3ca0002
b51c0002b66a0002b7380002b81c0002b99c0002bb1e0002bc1e0002bd32
0002be760002be860002bf740002c04e0002c1ea0002c1fa0002c3180002
c41e0002c61c0002c62c0002c63c0002c64c0002c7960002c7a60002c85e
0002c86e0002c97c0002c98c0002ca780002ca880002cba60002cbb60002
cc540002cc640002cc740002cd620002ced60002d0020002d0fc0002d10c
0002d11c0002d12c0002d2ca0002d4840002d5520002d5620002d7c20002
da080002dc8e0002def20002e1760002e3e80002e5b80002e76e0002e798
0002e7c20002e7d20002e7e20002e80c0002e8360002e8600002e8700002
e8800002e8aa0002e8d40002e8e40002e8f40002e91e0002e9480002e972
0002e9820002e9920002e9a20002e9b20002e9c20002e9d20002e9fc0002
ea0c0002ea1c0002ea460002ea700002ea9a0002eac40002eaee0002eb18
0002eb420002eb6c0002eb960002ebc00002ebea0002ec140002ec3e0002
ec680002ec920002ecbc0002ece60002ed100002ed3a0002ed640002ed8e
0002edb80002ede20002ee0c0002ee360002ee600002ee8a0002eeb40002
eede0002ef080002ef320002ef5c0002ef860002efb00002efda0002f004
0002f02e0002f0580002f0820002f0ac0002f0d60002f1000002f12a0002
f1540002f17e0002f1a80002f1d20002f1fc0002f2260002f2500002f27a
0002f2a40002f2ce0002f2f80002f3980002f3dc0002f4520002f47c0002
f4a60002f4d00002f4fa0002f5240002f54e0002f5780002f5a20002f5cc
0002f5f60002f6200002f64a0002f6740002f69e0002f6c80002f6f20002
f71c0002f7460002f7700002f79a0002f7c40002f7ee0002f8180002f842
0002f8760002f8aa0002f8de0002fa700002fc0c0002fda80002ff340002
ff7a0002ffc00003002e0003008a000300dc0003014c00030224000302f0
000303c800030494000305340003064e0003070200030784000307de0003
081e0003093c00030a8600030c1e00030c7a00030cd800030d3400030d90
00030e4400030efa00030fa600031052000310fe000311b60003126e0003
1326000313380003134a0003135c0003136e00031380000313ee0003145c
0003151400031526000315380003154a0003155a0003156c0003157e0003
1590000315a2000315b4000315c60003167400031720000317ce0003187a
000319120003194c00031976000319a0000319f400031a4600031ac20003
1b0c00031b8800031bdc00031c6000031cb200031d2800031d8000031de6
00031e3c00031e9600031f1400031f6000031fbe00032022000320700003
20be000321160003215e00032188000321b6000321dc0003221000032240
00032270000322c20003233000032386000323fa0003244e000324c20003
250800032570000325b600032612000326420003267c000326a2000326d2
000326f80003271e0003275000032780000327d2000328380003288e0003
28f400032948000329b6000329f800032a5800032a9a00032ae600032b20
00032b5c00032b9600032bd200032c0600032c3800032c6800032c980003
2cc200032ce800032d1200032d4000032d6a00032db600032dfa00032e30
00032e6c00032ea000032ece00032f0c00032f3c00032f7600032fa00003
2fce00032ff40003301a00033046000330a2000330d20003310200033132
0003316a0003319e000331cc000331fc0003322c0003325c0003328c0003
32c0000333160003334a000333aa000333de000334360003346a000334c6
0003356400033632000337520003381a000338aa0003394000033b2c0003
3d2800033ea00003401c000341c60003437800034460000345960003468e
000347a0000348be000349f400034b5e00034ccc00034e6200034fde0003
50ee000350fe0003522a00035366000354a80003562c000357060003577c
00035832000358d800035a4800035a8000035afa00035bbc00035c760003
5cde00035de400035f1a00035fe600036144000361be0003623800036304
000363be00036472000364ce0003652800036570000365e00003665c0003
66a6000366e0000367260003676a000367bc0003680e0003689000036912
0003695400036994000369ca00036a0000036a2e00036a5c00036a900003
6ac400036b0600036b4800036b8400036bc000036bfa00036c3400036c66
00036c9800036cca00036cfc00036d3600036d7000036db200036df40003
6e3600036e7800036ec600036f1400036f5600036f9800036fd800037018
000370520003708c000370d80003712400037162000371a2000371e80003
722e0003726a000372c0000372fc0003733800037378000373b8000373f4
0003743000037470000374b0000374f4000375380003758c0003761a0003
765c0003769e000377060003776e000377a0000377d20003780a00037842
000378d80003796e000379b800037a0200037a3e00037a7a00037ad00003
7b2600037b7000037bba00037c1200037c6a00037caa00037cea00037d22
00037d5a00037da400037dee00037e2c00037e6a00037eac00037eee0003
7f4200037f9600037fdc0003802200038068000380ae000381040003815a
000381b000038206000382520003829e000382ea00038336000383aa0003
841e00038492000385060003854400038582000385c0000385fe0003863c
0003867a000386be000387020003874e0003879a000387fa000388460003
8884000388d2000389e200038a3200038a8200038aba00038af200038b48
00038b9e00038c1200038c7600038cb800038cfa00038d5000038d9e0003
8dea00038e3600038e7600038eb600038efe00038f4600038fb20003900c
000390440003907c000390bc000390fc000391cc000392c8000393880003
9476000394cc0003952200039574000395c80003962c00039690000396e6
0003973c000397b2000398280003986a000398ac000398ee000399300003
9972000399b400039a0a00039a6000039ab200039b0600039b8e00039c10
00039cb000039d5200039d9000039dce00039e0c00039e4800039e860003
9ec400039f0200039f3e0003a0220003a10e0003a2240003a3400003a40a
0003a4d40003a5ce0003a6c80003a7c60003a8c40003a9e20003ab000003
ac260003ad4c0003ae4e0003af500003afe20003b0740003b0b20003b0f0
0003b14a0003b1a40003b1dc0003b2140003b3240003b3340003b37c0003
b3c40003b41c0003b4740003b4a60003b4d80003b51a0003b55c0003b596
0003b5d00003b6140003b6580003b6d00003b74a0003b7da0003b81e0003
b85e0003b8e00003b9620003baba0003baca0003bb180003bb660003bba2
0003bbde0003bc240003bc6a0003bcb80003bd060003bd560003bda60003
be020003be5e0003bfd40003c13c0003c1740003c1ae0003c1fa0003c246
0003c2980003c2ea0003c33c0003c3920003c3ce0003c40a0003c4600003
c4b40003c5ec0003c68c0003c6da0003c71a0003c7540003c8ea0003cb6e
0003cc320003cdc80003cf260003cff40003d19a0003d3ee0003d6260003
d66c0003d69e0003d7480003d86c0003d8900003d92a0003da360003db46
0003dc560003dd640003deea0003df1c0003dfbe0003dfe60003e0480003
e0aa0003e10c0003e16e0003e1ac0003e1ea0003e2240003e25e0003e28a
0003e2d60003e3100003e34a0003e4a60003e5fa0003e60a0003e6c80003
e7fe0003e85c0003e9740003eb020003eba80003ecee0003ed2c0003ed6a
0003eda80003edfc0003ee240003ee7e0003eee20003ef2a0003ef8c0003
efec0003f05e0003f0da0003f1560003f1d80003f2640003f2f00003f37a
0003f3fa0003f4340003f4700003f5d40003f69e0003f6ce0003f6fe0003
f8360003f9860003f9960003fa840003fb580003fc500003fd460003fec8
00040022000400320004014a000401f6000403380004048e000404ea0004
0648000406d60004087c000409ee00040b0200040b3a00040b9e00040d4e
00040eb800040f1a00041082000411880004123e000412ea000414120004
1500000415e0000417200004184c0004196600041ad600041c5000041c60
00041d4000041e3600041ee600041fe20004208e00042198000422840004
234c0004247000042574000426a2000427e00004294c00042a8200042c16
00042dbe00042eb600042fca000430fc000431ee000432260004327c0004
332a0004333a0004339c000433f80004345e000434aa000434ea00043522
0004354e0004357c000435b6000436ec00043720000437a40004385a0004
388a0004390e0004393e0004397600043b0e00043c9a00043ce400043d1e
00043d7400043dc000043de600043e0c00043e4e00043e9000043ed20004
3f0200043f3a00043f7000043fa600043fe800044018000440480004413e
0004424200044276000442ae000442f40004432800044358000443900004
43c4000443f800044428000444580004448e000444c4000444f400044524
000445580004458c000445bc000445ec000446260004465a0004468c0004
46be000446f2000447260004475600044786000447b4000447e2000448f0
00044a5c00044b9000044cc400044cf400044d2e00044dc800044f320004
508e000451520004526600045296000452ca000453c200045572000455ca
000456420004577e000457bc0004582e0004585e0004588e000458c80004
595000045980000459b000045b4000045c8a00045d9600045ea400045fd0
0004612600046282000463e20004651c0004668e000467ee000467fe0004
69b400046adc00046b7600046cfe00046d0e00046e0a00046f90000470e8
0004719a0004726a00047376000474200004746e000474be0004756e0004
761400047690000477e0000478d4000479ca00047ad600047bae00047c88
00047d1c00047e2e00047fbe000480dc000481d20004827c000483260004
83f0000484980004856e000485ea00048648000487aa000488de00048a7a
00048b3c00048c3c00048d1600048e5400048f0000048fca000490ba0004
9188000492640004936a000494a200049592000496300004972200049892
000499dc00049c4800049d1a00049dce00049e9c00049f900004a0ce0004
a0de0004a2120004a3240004a3340004a4400004a5700004a5c40004a738
0004a8600004a9740004ab260004ad3a0004afce0004b1880004b2b40004
b4940004b6560004b7e80004b8b40004ba500004bac60004bb740004bc50
0004bcdc0004bd7e0004be200004bf040004c03c0004c2980004c3e00004
c3f00004c4000004c4620004c4c00004c5220004c5c00004c6580004c75c
0004c84a0004c85a0004c86a0004c9040004c99e0004c9da0004ca560004
caca0004cb200004cb540004cbda0004cc660004ccde0004cd3c0004cdd6
0004ce680004cee80004cf6a0004cffe0004d0320004d0940004d1460004
d30c0004d3440004d5200004d6340004d6440004d67a0004d6be0004d702
0004d7460004d77c0004d7ae0004d7f00004d88c0004d8e20004d9880004
da000004da860004daf60004db580004dbde0004dc3e0004dca80004dd1c
0004dd8c0004ddea0004de900004df280004df940004e0240004e0820004
e0f00004e1980004e2440004e2da0004e3440004e3c60004e42a0004e4d6
0004e58e0004e63a0004e6c80004e7240004e7900004e7e60004e8680004
e8e60004e96c0004e9f80004ea520004eabe0004eb2e0004eb9e0004ec0e
0004ec920004ed220004ed880004ee020004ee7e0004eef60004ef9c0004
f0380004f0c80004f1260004f1c40004f2400004f2d20004f3740004f41e
0004f4b60004f5120004f5680004f5d00004f6760004f71e0004f7e80004
f88e0004f8f00004f9480004f9a80004fa360004fabc0004fb4a0004fbaa
0004fc0e0004fc780004fce00004fd480004fdc60004fe4e0004fee20004
ff4e0004ffb60005001a000500c20005017c0005022a000502b800050316
00050382000503f2000504980005054200050604000506a60005070a0005
079a0005080c0005089c0005091a0005099600050a0200050a9000050aec
00050b4a00050bd000050c4c00050cb400050d1800050d6c00050dda0005
0e4200050ec000050f3600050fb0000510300005108c000510f200051156
000511f6000512980005134e000513fe0005145a000514d2000515300005
15ba00051652000516e200051748000517a600051834000518a60005193a
000519d200051a4200051ab200051b2a00051b8800051be800051c620005
1cbc00051d1c00051d7600051dd200051e3a00051ec800051efe00051f36
00051fc200051fec0005202e000520c2000521b000052240000522760005
22c600052338000523e400052476000524ce0005252800052580000525da
0005265e000526e400052788000528300005286e000528de000529720005
2a0a00052aa000052b4a00052b7c00052bcc00052c2000052c6600052d0a
00052d9400052e1a00052e7a00052ebe00052f0c00052fac0005303c0005
30dc0005318200053228000532ec0005331e00053348000533ce0005347e
000534b0000534d8000535a6000536040005369e000536ec000537520005
37fa00053868000538ce0005395a000539cc00053a4200053af600053b50
00053bc000053bfc00053c4e00053cd400053d3400053dd800053eb80005
3fe000054170000541cc0005422200054548000545e20005463e00054686
000547f4000549460005498c00054a9a00054b3200054c4000054d4a0005
4dec00054ed400054f6600055002000550f4000551f400055270000552f6
0005533e0005546e000555aa0005568e000556de00055712000558000005
592800055ac200055bf200055d0800055dcc00055ee800055f5600055fea
0005612a000561e00005634a0005647a000565ac000566d8000567840005
684a0005691c00056a7600056bf600056d2600056e4200056ffc0005714e
0005723a00057316000573d80005754200057692000576a2000576b20005
76c20005777a000578300005786c000578a2000578da0005791000057aa4
00057cb800057da200057eb8000580300005819e000582580005831a0005
83fe000584f600058694000587e8000589d600058b9c00058d7800058f10
00058ff8000590d40005921c0005939e00059486000595a0000595e20005
962c0005978a0005990000059a7200059b6a00059d4a00059ee600059f6a
00059f9a00059fe60005a0ae0005a17e0005a3120005a39a0005a4020005
a4540005a4a60005a6580005a8880005a9be0005aba00005ac7c0005ad96
0005af420005b14e0005b2500005b33c0005b52e0005b7360005b8a20005
ba260005bb860005bcf40005bd820005be120005bf2c0005c0380005c1e0
0005c33a0005c52a0005c6f40005c7880005c8240005c8ba0005c9420005
ca280005cb000005cc9a0005ce2c0005cf920005d0b60005d0c60005d0f6
0005d1260005d2a00005d4420005d4ec0005d5ce0005d68e0005d7380005
d7d20005d8b40005d9720005da4e0005dc040005dd3e0005ddca0005ddfa
0005de2a0005de5e0005de920005dea20005deb20005dee20005df120005
df460005df7a0005dfae0005dfe20005e0160005e04a0005e1c40005e1d4
0005e2040005e2340005e26c0005e2a00005e2d40005e3080005e33c0005
e3700005e3a40005e3dc0005e4120005e4420005e4820005e4ba0005e502
0005e5480005e57c0005e5b00005e5ea0005e6220005e6c20005e6d20005
e8240005e9ec0005eb920005ed3c0005ee880005ef9e0005f0ac0005f1c2
0005f2bc0005f3a40005f4c60005f5c20005f69a0005f78a0005f8460005
f8f80005f9c20005fa340005fada0005fb6a0005fbce0005fcdc0005fd42
0005fdf00005fee60005ff4e0005ffb60006006600060240000603440006
03c400060402000604ae0006053c00060624000606bc0006072200060820
000608e20006099c000609da00060a6a00060b6c00060c0000060c440006
0d6200060e8c0006106e00061230000613660006149400061594000615bc
000615e40006161a0006164c00061678000616a0000616c8000616f60006
1754000617c2000617fa000618320006186200061888000618bc000618f2
000619180006193e0006196c0006199a000619c600061a3c00061a640006
1ac600061aec00061b1200061b3800061b5e00061b8e00061bbe00061bee
00061c2800061c5800061c8e00061cbe00061cf000061d1600061d3c0006
1d7000061da600061dd600061e0600061e2c00061e5200061e7800061ea6
00061eda00061f6000061fa400061fde0006201200062056000620900006
20ca000620f00006211a00062166000621a8000621ce000621fc00062222
0006224800062288000622ba000622ea0006231a00062340000623660006
2396000623c6000623ec00062412000624380006245e00062484000624aa
000624d20006255a00062584000625f80006262000062696000626be0006
27200006275200062784000627b4000627ec0006281e0006284c00062886
000628ae0006290e0006295000062980000629ac000629dc00062a0c0006
2a3400062a5c00062a8400062ae600062b0e00062b6c00062bb000062bf4
00062c2400062c5a00062c8000062ca800062cce00062cf600062d1c0006
2d4400062d6c00062d9600062dbc00062de200062e0800062e3a00062e62
00062ee800062f1200062f7c00062fac00062fdc00063002000630280006
3080000630b0000630ec000631160006314600063176000631aa000631de
0006320e0006324e00063288000632d0000632f60006331c000633420006
33680006338e000633ce0006340e0006344a0006347a000634aa000634da
0006350a000635420006357a000635ba000635fa000636340006366e0006
36aa000636e8000637320006377c000637c2000638080006384a0006388c
000638bc000638ec00063920000639540006398e000639c800063a140006
3a6000063ab800063b1000063b6800063bc600063bf600063c2600063c5c
00063c9200063cc800063d0400063d3800063d6c00063dc000063e140006
3e6800063ebc00063f1000063f6400063fbc000640140006404200064070
000640a2000640d40006411a0006416000064192000641c4000642160006
426e000642b2000642f60006433a0006437e000643d20006442600064456
00064486000644bc000644f20006453000064576000645ca000646140006
4666000646b80006471800064778000647a8000647da000648140006484e
000648a0000648f40006493e00064986000649c800064a3200064a800006
4acc00064afe00064b3000064b6400064b9800064bce00064c0400064c42
00064c7800064caa00064ce600064d3c00064d9200064df000064e4e0006
4ea400064efa00064f2e00064f5e00064fa200064fd8000650080006504c
0006508a000650c2000650fa000651300006516c0006519c000651d80006
52180006525e000652a8000652f40006534000065396000653ec0006543a
00065488000654d60006552600065582000655de000656360006568e0006
56e20006573600065778000657ba000658020006584a00065892000658e0
0006592400065968000659ce00065a3400065a9a00065b0000065b660006
5bcc00065c3600065ca000065ce800065d3000065d7800065dc000065e0c
00065e5800065eac00065ef800065f3c00065f8a00065ff20006605a0006
60ca0006613a000661a20006620a0006624a00066288000662d2000662fc
000663420006637a000663c8000663f80006642800066464000664980006
64be0006651200066550000665a40006668a000667b2000667f40006681a
00066870000668a0000668e20006692a00066978000669c200066a120006
6a3800066b2000066c0400066d5600066d8400066db200066e4600066ecc
00066efa00066f8400066fb400066fe40006703200067080000671640006
724000067384000673b4000673e40006747a000675020006753200067562
00067592000676220006765200067682000676d40006771c000677720006
7808000678a0000679140006796600067990000679e600067a1a00067a64
00067a9c00067aec00067b2a00067b7600067b9c00067c1800067c6a0006
7d7c00067f860006813a000682bc0006842e000686d0000689a000068b60
00068ca600068f000006904200069258000692aa000692fa000693500006
93a60006940800069490000696de0006987000069a7c00069b9800069d4c
00069ece00069f8e0006a0700006a0d80006a13a0006a1b00006a2180006
a2c40006a3340006a3c40006a4d80006a59c0006a5e80006a67e0006a72a
0006a7ce0006a8780006a8c20006a9040006a97a0006a9e20006aa720006
ab200006ab8a0006abee0006ac540006ad0e0006ada40006ae020006ae2c
0006ae560006ae660006ae760006af380006b03c0006b2460006b39c0006
b3ac0006b45c0006b5400006b5a00006b5b00006b60c0006b66a0006b78a
0006b8780006b8880006b8980006b8a80006b8b80006b99e0006ba9e0006
bc760006be320006bf380006bfb20006c02c0006c0de0006c0ee0006c1fc
0006c20c0006c21c0006c2de0006c4120006c4fe0006c50e0006c51e0006
c52e0006c6940006c8000006c92c0006c93c0006c94c0006c95c0006c96c
0006ca4e0006ca5e0006cbc00006ccca0006cdc80006cf000006cfd20006
d0500006d0ce0006d1ee0006d26a0006d2b60006d3420006d4560006d4aa
0006d5ec0006d6ac0006d7780006d86e0006d9780006da2a0006db900006
dbf60006dcba0006debc0006e04a0006e1c80006e2f80006e5aa0006e6ec
0006e81a0006e9920006eb0a0006ec8a0006ee180006efca0006f0380006
f19c0006f2d40006f3d80006f50e0006f6400006f7100006f7e00006f93c
0006fa160006fab60006fbba0006fce40006fde20006ff62000700cc0007
020a00070382000704ce000705b000070618000706ba0007075a00070858
000709c000070afa00070c8e00070dd800070ebc00070f1a000710200007
10b6000711780007121e0007125e0007140a000714dc000715a2000716ca
0007186a00071976000719ce00071b6600071bf400071c0600071c360007
1c6600071c9e00071cd600071d0c00071d4800071d7e00071dba00071f28
00071f720007200c000720a40007211e000721a200072208000722b40007
230000072420000724d6000725ac000725e4000726220007269600072790
000728ae000729b0000729f200072a3400072aa200072ab200072ac20007
2ad200072ae200072af200072b0200072b1200072b2200072b3200072b42
00072b5200072b5200072cd600072ce600072da600072e6c00072fa20007
31980007339a00073596000737cc000739cc00073a3800073b4a00073cdc
00073e3400073ee600073f2a00073fc8000740f800074148000741de0007
431a0007432a000744e00007461400074664000746ba0007477c000747c0
0007480200074888000748e6000749d800074a6600074a9c00074b160007
4b8e00074bde00074cea00074de000074e8a00074eb400074ede00074f08
00074f3200074f7200074fb200074fea000750220007506c000750b60007
50f60007513600075180000751ca0007520a0007524a000752a4000752fe
0007533800075372000753b6000753fa0007543e00075482000754d60007
552a00075576000755c2000756000007564400075694000756e40007573e
0007579c000757c6000757f00007588a0007592400075968000759ac0007
5ac200075ad200075b1a00075b6200075bb400075c0600075c7000075cc4
00075d1000075d6e00075df800075e5c00075ea000075eea00075f520007
5f9c00075fdc00076024000760600007609c000760d80007611200076154
00076196000761d60007621600076260000762aa00076300000763580007
63a6000763f40007643600076484000764c6000765100007655200076596
000765f20007664e0007669a000766e6000767300007677a000767b80007
67f600076874000768f20007692c0007696600076a0000076a9a00076b6e
00076c4200076c9e00076cfa00076d6e00076de200076f4000076f500007
703a0007704a00077080000770b6000770f00007712a00077166000771a2
000771e80007722e000773940007754a0007769600077854000779ca0007
7b7200077ca200077da800077fc60007810a000782a000078428000784a6
000785ea000787f2000788860007891a00078a6e00078b9800078d120007
8e5200078fbe000790ac000792760007940a0007948c000795be000796a8
00079810000798f200079aa800079b9a00079cfc00079e3800079f2c0007
a0f00007a2780007a41c0007a5800007a71c0007a8da0007aa600007aafc
0007ac700007ad620007ae4a0007afca0007b11c0007b23c0007b3d40007
b5aa0007b7380007b7e20007b8980007ba4a0007baee0007bb7c0007bbc8
0007bc140007bc8c0007bd6a0007bde40007be860007beda0007c03e0007
c16a0007c27c0007c37e0007c4460007c5ba0007c6fa0007c9200007c9ca
0007caf40007cbf80007cd980007ce840007cf7e0007d07c0007d1620007
d27c0007d4360007d5e40007d7520007d7ca0007d83e0007d95c0007d9e0
0007dae20007dc6e0007dde60007df1c0007e0260007e19c0007e3440007
e5360007e7240007e8ea0007e95e0007ea0e0007eac40007eb740007ec32
0007ed2c0007ee300007ef2a0007f0360007f0be0007f14c0007f1d40007
f2680007f3440007f43a0007f51e0007f6140007f6a80007f7640007f7f8
0007f8b60007f9a60007faae0007fbac0007fcc00007fde20007fef60008
00360008017000080292000803a6000804ea0008063e0008085200080a04
00080ab800080bd400080caa00080dc800080ea60008103a000810f40008
1190000812820008136a00081456000814d4000815ce0008170c00081838
0008186c000818b0000818c00008196000081a0200081af800081be40008
1cbe00081d9600081ef400082054000820f200082188000821c600082206
0008224400082284000822de0008233600082390000823f4000824800008
267c000826cc000827f80008287e000828fe000829d800082aac00082bb0
00082d9c00082eb400082f2400082fb40008307600083148000831b40008
323200083386000833cc00083412000834f60008353200083590000835ce
000836000008364400083686000836b600083790000838580008393c0008
39b800083a0600083a9000083b6600083bde00083c9800083d4a00083d94
00083e6800083f1a00083f7200083f8200083f9200083fa200083fb20008
40e4000840f6000841d80008427e0008438800084494000844d80008451c
0008455000084584000845d40008462400084676000846c80008471a0008
4770000847c8000848ac000100000d5900f2003c009d000700020010002f
0056000004ac0bbe0005000200>
<0000003a02be0000000300000000006a00000000000300000001000a006a
0000000300000002000e00740000000300000003005e0082000000030000
0004000a006a0000000300000005001800b00000000300000006000e00e0
0000000300000007006200ee00000003000000080030000e000000030000
0009008a0150000000030000000d02aa01da000100000000000000350484
0001000000000001000504b90001000000000002000704be000100000000
0003002f04c50001000000000004000504b90001000000000005000c04dc
0001000000000006000704f40001000000000007003104fb000100000000
00080018048b00010000000000090045052c000100000000000d01550571
0003000104030002000c06c60003000104050002001006d2000300010406
0002000c06e20003000104070002001006ee0003000104080002001006fe
0003000104090000006a00000003000104090001000a006a000300010409
0002000e00740003000104090003005e00820003000104090004000a006a
0003000104090005001800b00003000104090006000e00e0000300010409
0007006200ee00030001040900080030000e0003000104090009008a0150
000300010409000d02aa01da00030001040a0002000c06c600030001040b
00020010070e00030001040c0002000c06c600030001040e0002000c071e
0003000104100002000e072a000300010413000200120738000300010414
0002000c06c600030001041500020010074a0003000104160002000c06c6
0003000104190002000e075a00030001041b00020010076800030001041d
0002000c06c600030001041f0002000c06c60003000104240002000e0778
00030001042a0002000e078600030001042d0002000e079400030001080a
0002000c06c60003000108160002000c06c6000300010c0a0002000c06c6
000300010c0c0002000c06c600a900200032003000310031002000540068
00650020004d006f006e006f007400790070006500200043006f00720070
006f0072006100740069006f006e002e00200041006c006c002000520069
0067006800740073002000520065007300650072007600650064002e0041
007200690061006c0052006500670075006c00610072004d006f006e006f
0074007900700065003a0041007200690061006c00200052006500670075
006c00610072003a00560065007200730069006f006e00200035002e0031
003000200028004d006900630072006f0073006f00660074002900410072
00690061006c004d00540041007200690061006c00200069007300200061
002000740072006100640065006d00610072006b0020006f006600200054
006800650020004d006f006e006f007400790070006500200043006f0072
0070006f0072006100740069006f006e002e004d006f006e006f00740079
0070006500200054007900700065002000440072006100770069006e0067
0020004f006600660069006300650020002d00200052006f00620069006e
0020004e006900630068006f006c00610073002c00200050006100740072
00690063006900610020005300610075006e006400650072007300200031
0039003800320059006f00750020006d0061007900200075007300650020
007400680069007300200066006f006e007400200074006f002000640069
00730070006c0061007900200061006e00640020007000720069006e0074
00200063006f006e00740065006e00740020006100730020007000650072
006d0069007400740065006400200062007900200074006800650020006c
006900630065006e007300650020007400650072006d007300200066006f
00720020007400680065002000700072006f006400750063007400200069
006e0020007700680069006300680020007400680069007300200066006f
006e007400200069007300200069006e0063006c0075006400650064002e
00200059006f00750020006d006100790020006f006e006c007900200028
0069002900200065006d0062006500640020007400680069007300200066
006f006e007400200069006e00200063006f006e00740065006e00740020
006100730020007000650072006d00690074007400650064002000620079
002000740068006500200065006d00620065006400640069006e00670020
007200650073007400720069006300740069006f006e007300200069006e
0063006c007500640065006400200069006e002000740068006900730020
0066006f006e0074003b00200061006e0064002000280069006900290020
00740065006d0070006f0072006100720069006c007900200064006f0077
006e006c006f006100640020007400680069007300200066006f006e0074
00200074006f002000610020007000720069006e0074006500720020006f
00720020006f00740068006500720020006f007500740070007500740020
00640065007600690063006500200074006f002000680065006c00700020
007000720069006e007400200063006f006e00740065006e0074002ea920
3230313120546865204d6f6e6f7479706520436f72706f726174696f6e2e
20416c6c205269676874732052657365727665642e417269616c52656775
6c61724d6f6e6f747970653a417269616c20526567756c61723a56657273
696f6e20352e313020284d6963726f736f667429417269616c4d54417269
616c20697320612074726164656d61726b206f6620546865204d6f6e6f74
79706520436f72706f726174696f6e2e4d6f6e6f74797065205479706520
44726177696e67204f6666696365202d20526f62696e204e6963686f6c61
732c205061747269636961205361756e646572732031393832596f75206d
617920757365207468697320666f6e7420746f20646973706c617920616e
64207072696e7420636f6e74656e74206173207065726d69747465642062
7920746865206c6963656e7365207465726d7320666f7220746865207072
6f6475637420696e207768696368207468697320666f6e7420697320696e
636c756465642e20596f75206d6179206f6e6c792028692920656d626564
207468697320666f6e7420696e20636f6e74656e74206173207065726d69
747465642062792074686520656d62656464696e67207265737472696374
696f6e7320696e636c7564656420696e207468697320666f6e743b20616e
6420286969292074656d706f726172696c7920646f776e6c6f6164207468
697320666f6e7420746f2061207072696e746572206f72206f7468657220
6f75747075742064657669636520746f2068656c70207072696e7420636f
6e74656e742e004e006f0072006d0061006c006f00620079010d0065006a
006e00e9006e006f0072006d0061006c005300740061006e006400610072
0064039a03b103bd03bf03bd03b903ba03ac004e006f0072006d00610061
006c0069004e006f0072006d00e1006c004e006f0072006d0061006c0065
005300740061006e00640061006100720064004e006f0072006d0061006c
006e0079041e0431044b0447043d044b0439004e006f0072006d00e1006c
006e0065004e0061007600610064006e006f0074006801b001a10300006e
00670041007200720075006e00740061b900540328b326181fd0bc032900
e0032900020329b22b1d1fb90327031db23b1f40b80323b31215320f412d
03200001002f0320000100200320006f032000af032000bf03200004005f
031e00010010031e007f031e0080031e00af031e00bf031e00d0031e0006
0000031e0010031e0020031e006f031e009f031e00e0031e0006031d031c
b2201f1041270319007f03190002000f031700ef031700ff03170003001f
0317002f0317004f0317005f0317008f0317009f03170006000f0317005f
0317006f0317007f031700bf031700f00317000600400317b2923340b803
17b28b3340b80317b36a6c3240b80317b2613340b80317b35c5d3240b803
17b357593240b80317b34d513240b80317b344493240b80317b23a3340b8
0317b331343240b80317b32e423240b80317b3272c3240b80317b3122532
80b80317b30a0d32c04116031600d00316000200700316000102c4000f01
01001f00a0031500b0031500020306000f0101001f00400312b32426329f
bf03040001030203010064001fffc00301b20d1132410a02ff02ef001200
1f02ee02ed0064001fffc002edb30e11329f414a02e200af02e200bf02e2
000302e202e202e102e1007f02e00001001002e0003f02e0009f02e000bf
02e000cf02e000ef02e0000602e002e002df02df02de02de000f02dd002f
02dd003f02dd005f02dd009f02dd00bf02dd00ef02dd000702dd02dd0010
02dc0001000002dc0001001002dc003f02dc000202dc02dc001002db0001
02db02db000f02da000102da02daffc002d3b2373932b9ffc002d3b22b2f
32b9ffc002d3b21f2532b9ffc002d3b2171b32b9ffc002d3b2121632b802
d2b2f9291fb90326031cb23b1f40bb0322003e00330322b225311fb80318
b23c691fb802e3b3202b1fa0413002d400b002d40002000002d4001002d4
002002d4005002d4006002d4007002d40006006002d6007002d6008002d6
009002d600a002d600b002d60006000002d6001002d6002002ca002002cc
002002d6003002d6004002d6005002d6000802d0b2202b1fb802cfb22642
1f411602ce02c70017001f02cd02c80017001f02cc02c60017001f02cb02
c50017001f02c902c5001e001f02ca02c6b21e1f00410b02c6000002c700
1002c6001002c7002f02c5000502c1b324121fff411102bf0001001f02bf
002f02bf003f02bf004f02bf005f02bf008f02bf000602bf0222b2641f12
410b02bb00ca0800001f02b200e90800001f02a600a20800406a1f402643
4932402043493240263a3d3240203a3d329f209f26024026969932402096
993240268e923240208e92324026848c324020848c3240267a813240207a
813240266c763240206c76324026646a324020646a3240265a5f3240205a
5f3240264f543240204f5432b8029eb724271f374f6b0120410f02770030
02770040027700500277000402770277027700f90400001f029bb22a2a1f
b8029a402b292a1f80ba0180bc0180520180a201806501807e0180810180
3c01805e01802b01801c01801e0180400180bb0138000100800140b40180
400180bb013800010080013940180180ca0180ad01807301802601802501
8024018020013740b80221b2493340b80221b2453340b80221b341423240
b80221b33d3e320f410f0221003f0221007f0221000300bf022100cf0221
00ff0221000300400221b320223240b80221b3191e3240b80222b32a3f32
40b80221b32e3a326f414802c3007f02c3008f02c300df02c30004002f02
c3006002c300cf02c30003000f02c3003f02c3005f02c300c002c300ef02
c300ff02c3000600df02220001008f02220001000f0222002f0222003f02
22005f0222007f022200ef0222000600bf022100ef02210002006f022100
7f022100af02210003002f0221003f0221004f0221000302c302c3022202
2202210221401d101c102b1048038f1c010f1e014f1eff1e023700161600
000012110811b8010db6f70df8f70d00094109028e028f001d001f029002
8f001d001f028fb2f91d1fb80198b226bb1f41150197001e0401001f0139
00260125001f013800730401001f0135001c0801001f0134001c02ab001f
0132b21c561fb8010fb2262c1fba010e001e0401b61ff91ce41fe91cb802
01b61fe81cbb1fd720b80401b21fd51cb802abb61fd41c891fc92fb80801
b21fbc26b80101b21fba20b80201b61fb91c381fadcab80401b21f8126b8
019ab21f7e26b8019ab61f7d1c471f6b1cb80401b21f6526b8019ab21f5e
73b80401400f1f52265a1f481c891f441c621f4073b80801b61f3f1c5e1f
3c26b8019ab21f351cb80401b61f301cbb1f2b1cb80401b61f2a1c561f29
1cb80101b21f231eb80401b21f5537b80168402c07960758074f07360732
072c0721071f071d071b071408120810080e080c080a0808080608040802
08000814b8ffe0402b000001001406100000010006040000010004100000
01001002000001000200000001000002010802004a00b013034b024b5342
014bb0c063004b6220b0f65323b8010a515ab005234201b0124b004b5442
b0382b4bb807ff52b0372b4bb007505b58b101018e59b0382bb00288b801
005458b801ffb101018e851bb0124358b900010111858d1bb90001012885
8d5959001816763f183f123e113946443e113946443e113946443e113946
443e11394660443e11394660442b2b2b2b2b2b2b2b2b2b2b182b2b2b2b2b
2b2b2b2b2b2b182b1db0964b5358b0aa1d59b0324b5358b0ff1d594bb093
53205c58b901f201f04544b901f101f045445958b9033e01f2455258b901
f2033e4459594bb8015653205c58b9002001f14544b9002601f145445958
b9081e0020455258b90020081e4459594bb8019a53205c58b9002501f245
44b9002401f245445958b909090025455258b9002509094459594bb80401
53205c58b173244544b1242445445958b917200073455258b90073172044
59594bb8040153205c58b1ca254544b1252545445958b9168000ca455258
b900ca16804459594bb03e53205c58b11c1c4544b11e1c45445958b9011a
001c455258b9001c011a4459594bb05653205c58b11c1c4544b12f1c4544
5958b90189001c455258b9001c01894459594bb8030153205c58b11c1c45
44b11c1c45445958b90de0001c455258b9001c0de04459592b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b65422b2b01b33b59635c456523456023456560234560b08b76
6818b080622020b163594565234520b003266062636820b003266165b059
236544b063234420b13b5c4565234520b003266062636820b003266165b0
5c236544b03b2344b1005c455458b15c406544b23b403b4523614459b347
503437456523456023456560234560b089766818b080622020b134504565
234520b003266062636820b003266165b050236544b034234420b1473745
65234520b003266062636820b003266165b037236544b0472344b1003745
5458b137406544b24740474523614459004b5342014b5058b10800425943
5c58b108004259b3020b0a124358601b2159421610703eb0124358b93b21
187e1bba040001a8000b2b59b00c2342b00d2342b0124358b92d412d411b
ba04000400000b2b59b00e2342b00f2342b0124358b9187e3b211bba01a8
0400000b2b59b0102342b0112342002b7475737500184569444569444569
447373737374757374752b2b2b2b74752b2b2b2b2b737373737373737373
737373737373737373737373737373732b2b2b45b0406144737400004bb0
2a534bb03f515a58b1070745b040604459004bb03a534bb03f515a58b10b
0b45b8ffc0604459004bb02e534bb03a515a58b1030345b040604459004b
b02e534bb03c515a58b1090945b8ffc06044592b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b752b2b2b2b2b2b2b435c58b9008002bbb301401e017400
735903b01e4b5402b0124b545ab012435c5a58ba009f0222000100735900
2b7473012b01732b2b2b2b2b2b2b2b737373732b2b2b2b2b002b2b2b2b2b
2b0045694473456944734569447374754569447345694445694445694473
74456944456944732b2b2b2b2b732b002b732b74752b2b2b2b2b2b2b2b2b
2b2b2b2b2b737475732b7374757374752b2b2b742b2b000000>
[15913 15929 15561 16181 15713 15605 16053 16253 16293 16337 16177 16345 16353
16345 15929 16353 15393 15313 16165 16133 16373 16041 14113 16309 16341 16113
15641 15297 16337 16105 15505 16221 16325 15861 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd
2 3414 19 <00020055ffe7041105c00010001d020f400d0f0c0c0c42550f0c0b0b4255
06b8ffe840110c0c425505180b0b425507100b0b42551bb8ffe8400b0b0b
42550f0c0b0b42551bb8fff440160d0d42551c060d0d42550f0c0d0d4255
07100d0d4255b10202435458400a1a1e0405141e0d0d1709b8ffe8b40f0f
025509b8ffe840190d0d02550911000c0f0f025500160c0c0255000c0d0d
0255002f2b2b2bcd2f2b2bcd003fed3fed31301bb10602435458400a1a1e
0405141e0d0d1709b8fff4b40f0f065509b8ffe6b40d0d065509b8ffee40
190b0b0655091100100d0d065500100c0c065500100b0b0655002f2b2b2b
cd2f2b2b2bcd003fed3fed31301bb4062019101cb8fff0b202200bbeffe0
0016ffe00012ffe0000fffe0404e04068702880b880fc90e0509070b1802
45134c154a19431b54135c155c19521b6b076b0b63136c156b19601b7902
7706760b7a0f870698079610c918da02d606d60bdb0f1a1a1e0405141e0d
0d17b8fff4b40c0c425517b8fff2b40b0b425517b8fff840140d0d425517
730940212334300901000910090209b8fff4b40b0b425509b8ffe8401c0d
0d425509901f110c0c0c4255110e0b0b425511080d0d4255117300b8ffc0
40202123342000400002000c0c0c425500080b0b425500080d0d42550090
1ec78b182b10f62b2b2b5d2bed2b2b2b10f62b2b5d712bed2b2b2b003fed
3fed3130015d71005d0038383838380138383859592b2b2b2b2b2b2b2b2b
002b2b131012363332161612151002062322272613101633323611102623
220706556bd3a076b274426ad3a1d47991b9a97c7ca9a97e7c4a5d02d301
04013dac5fb3feffdafefefec3ad98b7019dfe97eff00168016aee698600
>ArialMT AddT42Char 
2 4044 20 <000100df000002fb05c0000a00da40440a0c0c0c4255000c0c0c42550a0e
0b0b4255000e0b0b42550a080d0d425500080d0d425503400d11346b047f
028f02990804ac04010900060502030905010c0201ca0a00b8ffc0400a21
233430000120000100b8ffe0b41010025500b8ffea40110f0f0255001c0c
0c0255000e0d0d025500b8fff040190f0f065500100c0c065500100d0d06
55001a0c05400d0f3405b8ffc0400e212334300501200540050205190bba
013c018500182b4e10e45d712b2b10f62b2b2b2b2b2b2b5d712b3c4dfd3c
003f3f17390111393130015d005d2b012b2b2b2b2b2b2123110606073536
36373302fbb441d35497e22f74047b3e7c1fae47ca5f>ArialMT AddT42Char 
2 4306 21 <0001003c0000040705c0001e0218b90007ffe8b40c0c425508b8fff8b40b
0b425507b8ffe8b40b0b425508b8fff8b40d0d425507b8fff4b30d0d4255
b10602435458400911100d18131306550db8fff4b4111106550db8ffee40
09101006550d1e14051eb8ffe84017131306551e1e111106551e1c0e1006
551e0c0d0d06551eb802bb400c020a1717201f10110202201f1112392fd4
cd1112392fcd002fed2b2b2b2b3fed2b2b2bc43231301bb1020243545840
0911100d0c121202550db8fff440090f1102550d1e14051eb8ffe0400b12
1302551e140f1102551eb802bbb2020a17b8ffe8b40b0b025517b8ffec40
0e0d0d02551717201f10110202201f1112392fd4cd1112392f2b2bcd002f
ed2b2b3fed2b2bc43231301b40363b053b06bb05bf06bb07c708c91c0749
0c590c540e6b0c640e7a127a138912bc12e51ae51bf01a0cbf0bb713021b
101c101d101e1006befff00007ffe00008fff00009fff0401a1e0a100806
06ca1c1a141c1c1a081c1a030102081a1c030d1e10b802a4b34f110111b8
0118b50d1e1405001eb802bbb301020c0ab8fff4b40c0c42550ab8fff2b4
0b0b42550ab8fff840100d0d42550a7317d30000014021233401bb028100
2000100138400c11b53f025f026f027f020402ba0224001f018fb18b182b
10f65df4ed10f62b3c10f4ed2b2b2b003f3cfd3c3fedfd5de41112173901
11121739870e2e2b0e7d10c401111239313000383838380138383838005d
015d7259592b2b2b2b2b2515212637363637363635342623220607273636
33321615140606070606070407fc37021725a39aefa8997b829c01b913f8
d1d3f648a7c2a25c1eadad413c63c07ec4e5666b939c8a13cfd9eaad58aa
bca488613100>ArialMT AddT42Char 
2 4942 22 <00010056ffe6041605c0002b01b4b603180c0c425505b8ffe8b40c0c4255
05b8ffe8b30d0d4255b10202435458400b1918400d0d0255181c0001b8ff
c0402b0c0d02550129230a0d0f0c0f1e0a0a29151e1c041e291c05290d23
0d0c181901001220100c0c0255200726b8ffe8b40c0d0255262f2bcd2f2b
cd2fcd2fcd2f0012393f3f10ed10ed12392fedc610c6123910c42b3210c4
2b3231301b4028050d160d450d860d0445115711761b0352166c106a1464
16750d7914860d8a14891ba50d0a052003b8ffe0400b0b0c0d0e04070123
0d0c01b802a4b340000100bb01180029000d0135b40c0c150418ba02a400
1902684009151e1c05041e290d12b8fff4b40c0c425512b8fff2b40b0b42
5512b8fff840140d0d425512735f206f200220180d0d0655208007b8fff4
b40c0c425507b8fff2b40b0b425507b8fff840140d0d4255077326402123
34302601002610260226b8fff4b70d0d065526902d18b80138b219d301ba
01380000ffc0400b212334200040000200902cb80192b18b182b10f65d2b
edf4ed10f62b5d712bed2b2b2bf42b5ded2b2b2b003fed3fedfde4111239
2fed10fd5de411123901111217393130013838015d005d017159012b2b2b
133716163332363534262322073716333236353426232206072736363332
161615140607161615140023222656b41f956b7fafa27d334c14120b73b8
866a698c14b421eaae78ca6b66648290fee8d6c1ff0183189987b0827ca1
149e02787d6382848420b5c767b2645f9c2e1ebd8ec0fef5e600>ArialMT AddT42Char 
2 5508 23 <0002001a0000041005ba000a000d01b7b9000cfffa40ac0c0c42550d060c
0c4255050c0c0c4255060c0c0c4255090c0c0c42550a0c0c0c4255050e0b
0b4255060e0b0b4255090e0b0b42550a0e0b0b425507080c0c425508080c
0c425507080b0b425508080b0b425507080d0d425508080d0d425505080d
0d425506080d0d425509080d0d42550a080d0d425512580c680c9a0ca90c
c90c054c034c0d94040312010208000c060307050a0b0307000c0c0d0dca
030414030304030d00020c0d040703bb02bb0008000201a0400a00040400
0c0c00ca0a04b80266b705050a401d1f340ab8ffe0b4101002550ab8ffe6
b40d0d02550ab8ffeeb40d0d06550ab80137400d07402223340780213507
900f02b8ffc0400b0d14340002100220020302b8ffe0b40d0d025502b8ff
e4b60d0d065502b50eb8018cb18b182b10ec2b2b5d2b10f62b2bf42b2b2b
2b3c10e610fd3c003f3f10f43cf63c1139390111123939872e2b047d10c4
0f0f0f313001435c58b9000dffdeb212390db8ffd4400b333903222d3903
041d1d3c2b2b2b2b595d005d435c5840140c400b390c8050390c4026390c
221c390c402d392b2b2b2b2b59012b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b002b21112135013311331523110311010296fd84029d93c6c6b4fe
35015fa503b6fc4aa5fea102040295fd6b00>ArialMT AddT42Char 
2 6006 24 <00010055ffe7042105a6001e01fc4013130c0c0c4255120c0c0c42550b18
0c0c425509b8ffe8400b0c0c425503180c0c425505b8ffe840170c0c4255
130c0b0b4255120c0b0b425503180b0b425509b8ffe8b40b0b425505b8ff
e840170b0b4255130c0d0d4255120c0d0d42550b180d0d425505b8ffe8b4
0d0d425509b8ffe8b30d0d4255b10202435458b90001ffc0400d0d0d0255
011c0e0a1e15151c12b802bb400b0f04041e1c0d0e01000718b8ffeab40f
0f025518b8ffeab40d0d0255182f2b2bcd2fcd2f003fed3fed12392ffdc4
10c42b31301b4029120c0d0d06550f0c0d0d06554b1a791d8a1d9613a713
c30cd60cdb1b080913180e2a1a03093005300bbaffe00003ffe04010130a
15121313ca0e0f140e13140e0f0db802a440130e0a1e15400ea00e020e0e
0f40150115151c12b802bbb70f0401d340000100b801184011041e1c0d11
5f106f107f108f1004108007b8fff4b40c0c425507b8fff2b40b0b425507
b8fff840140d0d425507731840212334301801001810180218b8fff4b70d
0d065518902012bc0135000f0195000d0138b20eb501ba01380000ffc040
0b212334200040000200901fb80192b18b182b10f65d2bedf4edf4ed10f6
2b5d712bed2b2b2bf45d3c003fedfd5de43fed12392f5d11392f5d10ed10
e487082e2b057d10c4001112393130013838383801715d2b2b592b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b133716163332363534262322060727132115
2103363332001514070623222655bd15996c82b4ad8c578c28a98e02d9fd
b74f8491c00108748df4c8fd0180108a8bc4a29ab24f3f1602f1acfe765c
fef6d1c791b2e000>ArialMT AddT42Char 
2 6614 25 <0002004dffe7041505c0001d002a0203b90012fff0b40c0c425511b8fff0
b40c0c425520b8fff4b40c0c425508b8fff4b40c0c425527b8ffe8b40b0b
425523b8ffe840170b0b425521180b0b425507180b0b42550e0c0d0d4255
08b8fff4b40d0d425506b8fff4400a0d0d425507100c0d4255b102024354
58401f0f011f015f0103011b281e400d010d0d14051e1b05221e140d0a1e
01002510b8fff440190d0d0255101e17100f0f025517100c0c0255170c0d
0d0255172f2b2b2bcd2f2bcdd4cd10c5003fed3fed12392f5ded10c45d31
301b402d6b190144074015441944205a1254206b03640764086a12642074
08751c8508861cd608d4161107200d0d065527b8ffe0b40d0d065523b8ff
e0400b0d0d065521200d0d065507b8ffe0b42720232021b8ffe04011281e
400d500d020d0d141b01d35f000100b802684009051e1b05221e140d01b8
0138b200b525b8fff4b40c0c425525b8fff2b40b0b425525b8fff840140d
0d425525731040212334301001001010100210b8fff0b70c0c065510902c
0ab8013840131e0c0c0c42551e0e0b0b42551e080d0d42551eb801394022
3f175f176f177f170417100b0b425517100c0d425517160c0c065517160d
0d065517b80224b32bc78b182b10f62b2b2b2b5ded2b2b2bed10f62b5d71
2bed2b2b2bf4ed003fed3fedfd5de41112392f5ded313001383838382b2b
2b2b015d005d59012b2b2b2b2b2b2b2b2b2b002b2b010726272623220706
060736363332121514060623220011103736333216011416163332363534
2623220603fbb3182c496b564155620241bc67b4fd77d084e1fee49d89e8
adddfd374f8e4e72a4a27b7aaa04530e6a304d303eeedc6360fef7d28aed
7e014b017c01a9c1a8c2fcdd5daa59b89e98afaf>ArialMT AddT42Char 
2 7264 26 <000100610000041605a7000d0070400ec40d01040d010402080409030d00
b802bb4030020104090c0d73030302402123344f025f026f0203021a0f08
7309eb004f015f015f02033f015f016f017f010401190eb80192b18b182b
4e10f45d713c4df4ed4e10f6712b3c4d10ed003f3f3cfd3c391139011112
39313001715d13352115060003060723361212376103b58cfeed4b360fb9
0382f38904faad8c95fe12fefbb8dbad01ea01c79c00>ArialMT AddT42Char 
2 7436 27 <00030053ffe7041905c00017002300300346b9001cffe840110c0c42551a
180c0c425507180c0c425520b8ffe840110c0c425522180c0c42552f180c
0c42552db8ffe8b40c0c425529b8ffe8400b0c0c425526180c0c425520b8
ffe8400b0b0b425522180b0b42551cb8ffe8400b0b0b42551a180b0b4255
29b8ffe8b40b0b42552db8ffe840110b0b42552f180b0b425526180b0b42
5520b8ffe8400b0d0d425522180d0d42551cb8ffe8400b0d0d42551a180d
0d425529b8ffe8b40d0d42552db8ffe840100d0d42552f180d0d42552618
0d0d4255b10202435458b40c001b1e2eb8ffc04017131302552e2e12211e
0605281e120d1e090c0c0c025509b8fff4b60d0d0255092b0fb8fff0b40f
0f02550fb8ffe8b40b0b02550fb8ffe8b60d0d02550f1803b8fff0b41010
025503b8fff0b40f0f025503b8fff440190d0d02550324150c0b0b025515
0c0c0c0255150c0d0d0255152f2b2b2bcd2f2b2b2bcd2f2b2b2bcd2f2b2b
cd003fed3fed12392f2bed393931301bb10602435458b71e090c0c0c0655
09b8fff4b60d0d0655092b0fb8ffe4b40f0f06550fb8ffe4b60d0d06550f
1803b8fff0b40f0f065503b8fffc40220d0d06550324150c0c0c0655150c
0d0d0655150c001b1e2e2e12211e0605281e120d003fed3fed12392fed39
39012f2b2bcd2f2b2bcd2f2b2bcd2f2b2bcd31301b403735160129164916
4926e60ce930050930017d007d017c047408710b720c750d7a178b008a01
8c048608810b840c860d8d17cc11c6131222b8ffe0b21c201ab8ffe0b220
202fb8ffe0b22d2026b8ffe0401929200c001e18000c1b1e2ea02e012e12
211e0605281e120d1eb8fff4b40c0c42551eb8fff2b40b0b42551eb8fff8
400a0d0d42551e73bf090109ba0267002bfff4b40c0c42552bb8fff2b40b
0b42552bb8fff840140d0d42552b730f40202334300f01000f100f020fb8
0191401932180c0c0c4255180e0b0b425518080d0d42551873b0030103b8
02674015240c0c0c4255240e0b0b425524080d0d4255247315b8ffc0400e
2123342015401502159031c78b182b10f65d2bed2b2b2bf45ded2b2b2b10
f45d712bed2b2b2bf45ded2b2b2b003fed3fed12395d2fed393901111239
393130013838383838383838015d727100715959012b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b0126263534363332161514060716
161514002322003534361314163332363534262322060314161633323635
3426232206016a706ce6bfc0ea6b6d878dfef6d9d9fef69162866b688589
6667883a49905381a8ad827fa7031b29986aa0dadfa06697292cc488bcff
000101c08fc101546884835f638784fcff4d904fa68082aaa800>ArialMT AddT42Char 
2 8422 28 <00020055ffe7041905c0001e002a02a0b9000fffe840230d0d425515180d
0d425515180c0c425527180c0c425523180c0c4255070c0c0c425521b8ff
e8400b0c0c425516100c0c425506b8ffe8401d0c0c425515180b0b425527
180b0b425523180b0b4255070c0b0b425521b8ffe8400b0b0b425516100b
0b425506b8ffe8b40b0b425521b8ffe8400b0d0d425516100d0d425506b8
ffe8b30d0d4255b10602435458b70b1f180100251118b8fff6b40f0f0655
18b8fff4b40d0d065518b8fff040280c0c065518110c0d0d065511100c0c
06551118112c2b0b281e0f0e1f0e4f0e030e0e140050010101b8ffc0400d
1011065501041e1c0d221e1405003fed3fedc42b5d3212392f5ded320111
1239392f2b2b2f2b2b2b10cdd4cd10ddc531301bb10202435458b70b1f18
0100251118b8ffeab40f0f025518b8ffea402a0d0d025518110c0c0c0255
1118112c2b0b281e0f0e1f0e4f0e030e0e140050010101041e1c0d221e14
05003fed3fedc45d3212392f5ded3201111239392f2b2f2b2b10cdd4cd10
ddc531301b40343a1a4c1640235b16572366036c166d1a67237a1a7d1e8c
1a8b1e9a16a91abc1aea16e620f620133d169e16ad16033a2964060227ba
ffe00023ffe0401821200620281e4f0e5f0e020e0e1c221e140501d35000
0100b80268b4041e1c0d1fb8fff4b40c0c42551fb8fff2b40b0b42551fb8
fff8b40d0d42551fba0139000bfff4b40c0c42550bb8fff6b40b0b42550b
b8fff8b40d0d42550bb8013840111840212334301801001810180218902c
01b80138401700b5250c0c0c4255250e0b0b425525080d0d4255257311b8
ffc0400e212334201140110211902bc78b182b10f65d2bed2b2b2bf4ed10
f65d712bed2b2b2bed2b2b2b003fedfd5de43fed12392f5ded3130013838
3838005d71015d59592b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b1337
161633323e02353427060623220235340033321612111002062322260134
2623220615141633323670ad167c61537d50360136bb6db6fc0107c68fed
7b7af1a2acda02cba57478b2a97c7da10153107a6e4c7fd8700c18566b01
08d8df01109afee3fef2fee7feb3aebf03349bb6c49c8cafaf00>ArialMT AddT42Char 
3 0 49 <0001009c0000051f05ba000901bcb603180c0c425508b8ffe8b50c0c4255
120bb8ffc0400a13153408180c16025503b8ffe8401d0c16025508020303
200708140707080207030308090402020907080403b8fffbb40c0c425503
b8fff2b40b0b425503b8fffb40090c0c42550320060605b8ffecb40f0f02
5505b8fff2400b0d0d025505120c0c025505b8fff740260b0b0655055d20
0b01200b500b600b700b800b050b08090e0b0b4255090a0c0c4255092001
00b8ffc0400d13153420000100201010025500b8fff6b40f0f025500b8ff
f6b40d0d025500b8fffa400b0c0c025500040b0b065500b8fff7b40c0c06
5500b8fff8400a0d0d0655005d0a3b59182b10f62b2b2b2b2b2b2b5d2b3c
fd2b2b3c105d71f42b2b2b2b3c10fd2b2b2b3c003f3c3f3c123939011139
3987042e2b877dc4b10602435458b90003ffe0b70c113408200c1134002b
2b5931302b2b012b435c58b40840463903b8ffc0b646390840323903b8ff
c0b632390722193902b8ffdeb619390722323902b8ffdeb6323907222339
02b8ffde400b2339070e1439070e133902b8fff4b61339070e1d3902b8ff
f4b61d39070e153902b8fff8b115392b2b2b2b2b2b2b012b2b2b2b2b2b00
2b2b2b2b59002b2b331133011133112301119cc70302bac7fcfe05bafb81
047ffa460480fb80>ArialMT AddT42Char 
3 8454 69 <00020086ffe8041f05ba0010001d01c9407b01050c0f240535054505053f
1fb01f021f1f221c331c421c701f901f063a133c163c1a4c164c1a5d085d
0d580f5d165e1a6a086c0d680f6e166e1ac01fd90cda17da19e213ec17ec
19e31de01fff1f1920052f0f2f1430053f0f40054c0f50056605da1df504
fa100c10150e040602001b1c0607010a151c0e0b18b8fff8b40d0d425518
b8fff4b40c0c425518b8fff240250b0b42551824d00b01100b400b600b80
0b041f400d0d02550b0c0f0f02550b180d0d02550bb8fff6b40c0c02550b
b8fff0b40b0b06550bb8fff4b40f0f06550bb8ffe0b40c0c06550bb8fff4
40530d0d06550b740111020d0d425511080c0c4255113300120b0b425500
040d0d425500040c0c025500040d0d06550033030c0c0c425503080d0d42
5503250202c001019001a001b001f001041f013f014f010301b8fffeb410
10025501b8fffc401d0e0e0255010c0d0d025501100c0c025501120b0b02
55010c0b0b065501b8fff8b41010065501b8fffc40160f0f065501180c0c
065501140d0d065501191e4737182b4e10f42b2b2b2b2b2b2b2b2b2b5d71
723c4d10fd2b2bf42b2b2b2be42b2b10fd2b2b2b2b2b2b2b2b5d71ed2b2b
2b003fed3f3fed3f11391112393130005d015d7172007121231133113633
321e0215100023222703141716333236353426232206012da7b472b162af
7140fef2bdbc6b0234559176aca57576ac05bafdf58f4f8fca73feeffed6
9d0196bf558bcdcbd0c6cd00>ArialMT AddT42Char 
3 10136 72 <0002004bffe8041e043e0015001d019e40171f001c150255035d055d0955
0b65036b056f09650b0815b8ffe4b40d0d065511b8ffe440520d0d06551d
1c0d0d06552712d905fa14f61a0431123a19311c41124d1a411c51125c19
521c61126d1a611c78067815f602f618100016010f0d1717501660167016
03161c0f9010a010021010041b1c0a0700ba02aa0001ffc0b41010025501
b8ffc0400e101006551001010195131c040b17b8fff0b40c0c425517b8ff
f2b40b0b425517b8fff8b60d0d425517400db8ffdcb40d0d02550db8ffee
b40d0d06550db8ffeab40c0c06550db8ffc04009272a34b00d010d1a1fb8
ffc0b32526341fb8ffc0b71e2334301f011f16b8fffc405c0d0d42551633
10080c0c4255100e0b0b425510080d0d425510240740242a341f073f074f
0703070c0c0c4255070c0d0d425507200b0b025507180c0c0255071c0d0d
0255070e0b0b0655071c0c0c065507160d0d065507191e3437182b4e10f4
2b2b2b2b2b2b2b2b5d2b4dfd2b2b2be42b4e10712b2bf6712b2b2b2b4ded
2b2b2b003fedfd5d2b2be43fed12392f5d3cfd713c011112393912393130
015d005d2b2b2b0171720117060623220011100033320011140721161633
32360121262726232206035eba2ceeb9e9feef0114dcd5010e01fce80ab2
85638cfdda02510c3856897ca9015617a3b4011f0103010c0128fedefef9
1020afba680195864368a600>ArialMT AddT42Char 
3 14046 80 <0001008700000626043e002302e2b90013fff2b40b0b425510b8fff2b40b
0b425512b8fff2b40b0b425511b8fff2b40b0b42551db8fffcb40d0d4255
1cb8fffcb40d0d42551bb8fffcb40d0d42551ab8fffcb40d0d42551db8ff
fcb40c0c42551cb8fffcb40c0c42551bb8fffcb40c0c42551ab8fffcb40c
0c42550cb8fffeb40c0c42550db8fffeb40c0c42550eb8fffeb40c0c4255
0fb8fffeb40c0c425513b8fff2b40c0c425510b8fff2b40c0c425512b8ff
f2b40c0c425511b8fff2b40c0c425513b8fff8b40d0d425510b8fff8b40d
0d425512b8fff8b40d0d425511b8fff8b40d0d42550db8fff4b40d0d0655
08b8fff4b40d0d065509b8ffd8404d0b0d342504e404e409e117e52005d5
05f620021708202309181b20090303231e1c06151c0b0b06070106231a19
100ad025019025a025022517171a0e2590110111041010025511180f0f02
5511b8ffec400b0e0e025511140c0c025511b8ffe840170b0b025511020b
0b0655110c1010065511060f0f065511b8fffab40c0c065511b8fff8b40d
0d065511b8015d401e18080c0c4255180e0b0b425518040d0d4255182590
1b011b180f0f02551bb8ffec400b0e0e02551b140c0c02551bb8ffee4011
0b0b02551b040b0b06551b0a101006551bb8fffe400b0d0d06551b0c0f0f
06551bb8fffcb40c0c06551bb8015d4028000233230e0b0b425523080d0d
4255230c0c0c4255232501d000019000a000021f003f004f000300b8fffe
401d0e0e025500100d0d025500100c0c0255000c0b0b025500160b0b0655
00b8fffcb41010065500b8fff440140f0f0655000a0c0c0655000e0d0d06
5500192425b80178b3214750182b2b4ef42b2b2b2b2b2b2b2b2b5d71723c
4dfd2b2b2be410f42b2b2b2b2b2b2b2b2b5ded2b2b2bf42b2b2b2b2b2b2b
2b2b2b5dfd4e456544e67172003f3c3c3c3f3f3c4d10ed10ed1117390111
1239123931304379400e0c141326140c111b01120d151b01002b012b2b81
015d005d2b2b2b012b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b33113315363633321617363332161511231134262623220615112311
342623220606151187a132a66a76971f7eca9eaab3235c3e7094b458644c
813a0426954e5f6258baafb6fd27029d6c5f3a95a4fd9702b27878509a91
fdd9>ArialMT AddT42Char 
4 976 85 <00010085000002c6043e001100de404d2f13011004012304340443045304
66047404060911080908090d1311090d000308010b1c06070106000a0928
9008010822201301130222110e0b0b425511080d0d4255110c0c0c425511
250100b8ffc04010333634f0000100002000d000e0000400b8fff8b41010
025500b8fff840110e0e025500040c0c025500060b0b025500b8fffcb410
10065500b8fff440160f0f065500060c0c065500080d0d0655004e1247c4
182b10f62b2b2b2b2b2b2b2b5d712b3cfd2b2b2be4105df472e4003f3f3f
ed11393911393901111239390010c9870e7dc43130005d72015d33113315
363633321707262322060706151185a23e693f5b5e3e42423b5e141e0426
a171483aa727473f6072fdd4>ArialMT AddT42Char 
4 1258 86 <0001003fffe803b1043e003003b14013170e0b0b4255180e0b0b4255190e
0b0b425528b8fff4b40c0c425527b8fff4b40c0c425526b8fff4b40c0c42
5525b8fff4b40c0c425524b8fff4b40c0c425523b8fff4b40c0c425522b8
fff4b40c0c425521b8fff4b40c0c425520b8fff4407f0c0c425504221422
3a094a094424562265227c098e098424a613ab2cc2030d09171a1817304b
2cd617051b025502021032010a185c085c095c0a5c0b5c0c5c0d6a086a09
6a0a6a0b6a0c6a0db426b4270f27262427242936245a0a590b6426642874
2374248024930a9c0c9228972c9530a40aa90ca327a428b326c5261628b8
fff4b40d0d065522b8fff4b40d0d065523b8fff4b40d0d065524b8fff4b4
0d0d065528b8fff4b40c0c065522b8fff4b40c0c065523b8fff4b40c0c06
5524b8fff4b40c0c06551db8ffde40121e395a0827250c0a041a20261504
0b2e1d1ab802aa4022192c0b0b02551f193f194f195f19af19cf19060f19
1f196f19df19041f198f190219bd02550015000002aa0001ffc040140b0b
025510014001021001d00102000110010201b8ffc0b314163401b8ffc040
100e113401012e5c1d6c1d021d1c150704b8fff4b40b0b025504b8ffe6b4
1010065504b8ffe640130f0f0655041c2e0b1f1a011a24194013183432b8
ffc040350f0f025519180f0f025519180d0d025519160c0c025519201010
065519200f0f065519100c0c065519160d0d065519160c0c425519ba025b
0007fff2b60b0b425507242ab8ffc0b51c39d02a012ab8ffe6b40c0c0255
2ab8ffe8b40f0f02552ab8ffe8b40c0c06552ab8ffeab40d0d06552ab8ff
f4b60c0c42552a1a32b8ffc04021272a346032c032023f32803202321001
01012400180d0d025500100d0d06550020b8fff4b40d0d025520b8fff4b4
1010065520b8fff4401f0f0f0655200e0b0b425520240f100b0b02550f16
0c0c02550f200d0d02550fb8fffa40260f0f02550f0e0c0c06550f0c0d0d
06550f060c0c42550f22df00013f004f00020019313437182b4e10f45d71
4df42b2b2b2b2b2b2bed2b2b2b2b102b2bed724e105d712bf62b2b2b2b2b
712b4ded2bf42b2b2b2b2b2b2b2b2b2bed72003fed2b2b2b3fed7112392f
2b2b5d71722be410fd5d71722be411123911123901111217393130437940
40272d1e2305142c261110121013100306220d201b000928071b01052d07
1b011e14201b00210e231b0022230d0c08290a1b012827090a062b041b00
1f101d1b01002b2b103c103c2b103c103c2b012b2b2b2b2a2b818181002b
2b2b2b2b2b2b2b2b5d71015d72715d002b2b2b2b2b2b2b2b2b012b2b2b13
37161633323635342726272e023534363736363332161617072626232206
151417161716171e02151406062322263fb20f897b7c78352593c6994f41
382a91537dbd5a11b00c73697c6a16162f1b84bf975669c67dcfd9013d1c
6b7265443d2318253249814e4779281f2b487b6718525c5237231c1d130a
2433417c5c5a9f57ac00>ArialMT AddT42Char 
4 2710 88 <00010083ffe803e0042600180183b9001affc0400915173402201316340f
b8fff040191214342b1301240813160c0113160b06000a111c030b003316
b8fff8b40d0d425516b8fff2b40b0b425516b8fff4401f0c0c4255162518
17403336341a401010025517281010025517120e0e025517b8ffec400b0d
0d025517040c0c025517b8fff4400b0b0b065517141010065517b8fff840
0b0d0d0655170c0f0f065517b8fff6400d0c0c0655ff1701c01701174e1a
b8ffc04027343634b01af01a02701aa01ab01aff1a041a0c080d0d42550c
0e0b0b42550c0c0c0c42550c2509b8ffc04010333634f0090100092009d0
09e0090409b8fff8b41010025509b8fff840110e0e025509040c0c025509
0a0b0b065509b8fff640160f0f065509020c0c065509020d0d0655094e19
4750182b10f62b2b2b2b2b2b2b5d712bed2b2b2b105d712bf65d712b2b2b
2b2b2b2b2b2b2b2b3cfd2b2b2be4003fed3f3f3c39390111123931304379
401a04100e0d0f0d0206070806080508030610040c1b000d08111b00002b
012b2a2a81005d012b2b2b21350623222626272635113311141716163332
363635113311033f7cd55ea34f100bb40b116e51518e3bb49cb4486d4f35
730292fdb38d314751538f880239fbda>ArialMT AddT42Char 
2 0 0 <00020100000005000500000300070000211121112521112101000400fc20
03c0fc400500fb002004c000>ArialMT AddT42Char 
ArialMT /CharStrings get begin
/zero 19 def
/one 20 def
/two 21 def
/three 22 def
/four 23 def
/five 24 def
/six 25 def
/seven 26 def
/eight 27 def
/nine 28 def
/N 49 def
/b 69 def
/e 72 def
/m 80 def
/r 85 def
/s 86 def
/u 88 def
end
ArialMT /Encoding get
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
dup 78 /N put
dup 98 /b put
dup 101 /e put
dup 109 /m put
dup 114 /r put
dup 115 /s put
dup 117 /u put
pop
end
%ADOEndSubsetFont
/KKJDLZ+ArialMT /ArialMT findfont ct_VMDictPut
/KKJDLZ+ArialMT*1 
[48{/.notdef}rp /zero /one /two /three /four /five /six 
/seven /eight /nine 20{/.notdef}rp /N 19{/.notdef}rp /b 2{/.notdef}rp 
/e 7{/.notdef}rp /m 4{/.notdef}rp /r /s /.notdef /u 
138{/.notdef}rp]
KKJDLZ+ArialMT nf
KKJDLZ+ArialMT*1 [10 0 0 -10 0 0 ]msf
61.2 208.8 mo
(Numbers)
[7.21984 5.56 8.32993 5.56 5.56 3.32993 0 ]xsh
76.84 223.91 mo
(0)sh
76.84 235.43 mo
(217)
[5.56 5.56 0 ]xsh
76.84 246.95 mo
(603)
[5.56 5.56 0 ]xsh
76.84 258.47 mo
(650)
[5.56 5.56 0 ]xsh
76.84 269.99 mo
(654)
[5.56 5.56 0 ]xsh
76.84 281.51 mo
(668)
[5.56 5.56 0 ]xsh
76.84 293.03 mo
(992)
[5.56 5.56 0 ]xsh
76.84 304.55 mo
(1176)
[5.56 5.56 5.56 0 ]xsh
76.84 316.07 mo
(3196)
[5.56 5.56 5.56 0 ]xsh
76.84 327.59 mo
(3354)
[5.56 5.56 5.56 0 ]xsh
76.84 339.11 mo
(3570)
[5.56 5.56 5.56 0 ]xsh
76.84 350.63 mo
(7362)
[5.56 5.56 5.56 0 ]xsh
/KKJDLZ+ArialMT*1 uf
/KKJDLZ+ArialMT uf
/ArialMT uf
grestore
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/restore_mysetup gx
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
